[
  {
    "Title": "Cool & Unique Cryptography Features for Modern Sui DApps",
    "Url": "https://www.eventbrite.com/e/cool-unique-cryptography-features-for-modern-sui-dapps-tickets-706682054047",
    "Timestamp": "2023-08-27T20:03:32",
    "Domain": "www.eventbrite.com",
    "Description": "Learn about the unique cryptography features Sui offers, along with upcoming crypto algorithms for building innovative web3 startup ideas."
  },
  {
    "Title": "zkSecurity partners with ZPrize to make you win hundreds of thousands of dollars!",
    "Url": "https://www.zksecurity.xyz/blog/posts/zprize/",
    "Timestamp": "2023-08-27T20:03:25",
    "Domain": "www.zksecurity.xyz",
    "Description": "There’s one big competition in ZK, and it is called ZPrize. Every year, ZPrize rewards contestants who come up with the most performant implementations for a series of challenges. The goal is to push the limits of what’s possible with ZK, and to make sure that the best implementations are open-source and available to everyone.\nThis year, zkSecurity is proud to announce it’ll play the role of one of the three external architects for the competition, hosting the High Throughput Signature Verification ZPrize category."
  },
  {
    "Title": "Timmoth",
    "Url": "https://timmoth.com/posts/1So1YM7Lk0KIB1y5WcjOTg",
    "Timestamp": "2023-08-27T18:02:49",
    "Domain": "timmoth.com",
    "Description": ""
  },
  {
    "Title": "MassTransit #3: Migrating mediator pattern from MediatR",
    "Url": "https://goatreview.com/masstransit-migrating-mediator-pattern-from-mediatr/",
    "Timestamp": "2023-08-27T16:03:49",
    "Domain": "goatreview.com",
    "Description": "In today's complex software landscape, effective and maintainable design patterns play a crucial role in ensuring robust and scalable systems. One such pattern is the Mediator Pattern, which defines how different components of a system interact with each other, thereby reducing the dependencies between them. A well-known implementation of this"
  },
  {
    "Title": "Polyglot Notebooks in 7 minutes",
    "Url": "https://youtube.com/watch?v=gCWbmy_icRo",
    "Timestamp": "2023-08-27T16:03:49",
    "Domain": "youtube.com",
    "Description": "Let's learn about data science notebooks in VS Code with C#, F#, JavaScript, and more, featuring Polyglot Notebooks, built on top of Jupyter Notebooks."
  },
  {
    "Title": "8 Reasons Why WhatsApp Was Able to Support 50 Billion Messages a Day With Only 32 Engineers",
    "Url": "https://newsletter.systemdesign.one/p/whatsapp-engineering",
    "Timestamp": "2023-08-27T14:03:13",
    "Domain": "newsletter.systemdesign.one",
    "Description": "#1: Learn More - Awesome WhatsApp Engineering (6 minutes)"
  },
  {
    "Title": "Single Responsibility Principle in C#",
    "Url": "https://malshikay.medium.com/single-responsibility-principle-in-c-62c00a87988a",
    "Timestamp": "2023-08-27T12:02:26",
    "Domain": "malshikay.medium.com",
    "Description": "Applying the Single Responsibility Principle in C# with Examples"
  },
  {
    "Title": "Readonly Modifier in C# - Code Maze",
    "Url": "https://code-maze.com/csharp-readonly-modifier/",
    "Timestamp": "2023-08-27T09:02:39",
    "Domain": "code-maze.com",
    "Description": "In this article, we are going to learn about readonly modifier in C#. Let's understand what is mutable and immutable."
  },
  {
    "Title": "Why I Won't Run Another Business",
    "Url": "https://youtube.com/watch?v=EqB9vLXBLIo",
    "Timestamp": "2023-08-27T09:02:37",
    "Domain": "youtube.com",
    "Description": "I talk about my experiences at Troika Games and why I won't run another company."
  },
  {
    "Title": "Block YouTube Ads on AppleTV by Decrypting and Stripping Ads from Profobuf",
    "Url": "https://ericdraken.com/pfsense-decrypt-ad-traffic/",
    "Timestamp": "2023-08-27T07:03:54",
    "Domain": "ericdraken.com",
    "Description": "Apple TV and iOS YouTube ads are not blocked by Pi-hole, so I researched this and discovered a flaw in Protobuf that allows me to restrict YouTube ads."
  },
  {
    "Title": "The \"Weak Event\" Pattern in C#",
    "Url": "https://steven-giesel.com/blogPost/675b75fc-2c1b-43da-9ff8-42962ca8159b",
    "Timestamp": "2023-08-27T06:02:31",
    "Domain": "steven-giesel.com",
    "Description": "Events in C# are a powerful mechanism for decoupling components and enabling a publisher/subscriber model. However, they have a significant drawback: the publisher holds a strong reference to the subscriber, and this can cause memory leaks. This article describes a pattern for implementing weak events in C#.\n"
  },
  {
    "Title": "</> htmx ~ Why htmx Does Not Have a Build Step",
    "Url": "https://htmx.org/essays/no-build-step/",
    "Timestamp": "2023-08-27T06:02:30",
    "Domain": "htmx.org",
    "Description": "August 19, 2023"
  },
  {
    "Title": "Slack's Migration to a Cellular Architecture - Slack Engineering",
    "Url": "https://slack.engineering/slacks-migration-to-a-cellular-architecture/",
    "Timestamp": "2023-08-27T03:02:25",
    "Domain": "slack.engineering",
    "Description": "Summary In recent years, cellular architectures have become increasingly popular for large online services as a way to increase redundancy and limit the blast radius of site failures. In pursuit of these goals, we have migrated the most critical user-facing services at Slack from a monolithic to a cell-based architecture over the last 1.5 years. …"
  },
  {
    "Title": "Microsoft.Fast.Components.FluentUI 2.4.3",
    "Url": "https://www.nuget.org/packages/Microsoft.Fast.Components.FluentUI/2.4.3",
    "Timestamp": "2023-08-27T01:02:29",
    "Domain": "www.nuget.org",
    "Description": "A set of Blazor components wrapping Microsoft’s official Fluent UI Web Components. They implement the latest state of the Fluent design language, are built on FAST and work in every major browser."
  },
  {
    "Title": "Visual Studio 2022: C# Global Namespace ",
    "Url": "https://www.msdevbuild.com/2023/08/visual-studio-2022-c-global-namespace.html",
    "Timestamp": "2023-08-27T00:02:34",
    "Domain": "www.msdevbuild.com",
    "Description": "Global usings were introduced in C# 10 and .NET Core 6.0 and later versions. This feature proves to be highly beneficial as it allows you to incorpora"
  }
]