[
  {
    "Title": "What Is Algorithm Complexity? #shorts",
    "Url": "https://youtube.com/watch?v=AyKAty07JTI",
    "Timestamp": "2023-05-06T13:02:31",
    "Domain": "youtube.com",
    "Description": "Support me on Patreon to access the source code:https://www.patreon.com/milanjovanovicJoin my weekly .NET newsletter:https://www.milanjovanovic.techRead my B..."
  },
  {
    "Title": "Spargine: Coding Microsoft .NET Faster with PathHelper",
    "Url": "https://dotnettips.wordpress.com/2023/05/05/spargine-coding-microsoft-net-faster-with-pathhelper/",
    "Timestamp": "2023-05-06T00:03:50",
    "Domain": "dotnettips.wordpress.com",
    "Description": "In this article, I will showcase and provide examples of the PathHelper methods available in my open-source software (OSS) called Spargine."
  },
  {
    "Title": "Enforcing Software Architecture With Architecture Tests",
    "Url": "https://www.milanjovanovic.tech/blog/enforcing-software-architecture-with-architecture-tests",
    "Timestamp": "2023-05-06T00:03:47",
    "Domain": "www.milanjovanovic.tech",
    "Description": " Software architecture is a blueprint for how you should structure your system. You can follow this blueprint strictly, or you can give yourself varying levels of freedom.\nBut when deadlines are tight, and you start cutting corners, that beautiful software architecture you built crumbles like a house of cards.\nHow can you enforce your software architecture?\nBy writing architecture tests.\nArchitecture tests are automated tests that verify the structure and design of your code.\nYou can use them to enforce your software architecture and the direction of dependencies of your projects.\nIn this week's issue I'll explain how to: - Write architecture tests - Enforce architecture - Enforce design rules\nLet's dive in."
  },
  {
    "Title": "Commemorative Plaque",
    "Url": "https://xkcd.com/2772/",
    "Timestamp": "2023-05-06T00:03:46",
    "Domain": "xkcd.com",
    "Description": ""
  }
]