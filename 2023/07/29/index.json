[
  {
    "Title": "Why Clean Architecture Is Great For Complex Projects",
    "Url": "https://www.milanjovanovic.tech/blog/why-clean-architecture-is-great-for-complex-projects",
    "Timestamp": "2023-07-29T01:02:57",
    "Domain": "www.milanjovanovic.tech",
    "Description": " I've been using Clean Architecture for 6+ years on large scale applications serving thousands of customers and millions of requests. Today I want to talk about why it's a great approach for structuring your applications.\nI'm aware that Clean Architecture isn't a silver bullet, so I will discuss what types of systems can benefit from this architecture.\nClean architecture isn't revolutionary.\nBut it's prescriptive about how you should structure the code.\nIt's an evolution of the layered architecture, focusing on the core domain and the direction of dependencies. All dependencies should point inwards, applying dependency inversion.\nHere are some of the promises of Clean Architecture: - Maintainability - Testability - Loose coupling - Separation of concerns\nIt's independent of UI, databases, or external services - but you also need to be pragmatic (more on this later).\nLet's dive in."
  },
  {
    "Title": "Ubiquitous F# in Contextive, the Ubiquitous Language Tool | fsharpConf 2023",
    "Url": "https://youtube.com/watch?v=bf1as7nTFEY",
    "Timestamp": "2023-07-29T00:02:30",
    "Domain": "youtube.com",
    "Description": "Contextive is a tool for documenting & surfacing key concepts in your domain - the 'ubiquitous language' from Domain-Driven Design.  It's also built using F#..."
  }
]