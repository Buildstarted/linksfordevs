[
  {
    "Title": "Generate - Privacy-related Data Security Incident",
    "Url": "https://www.generatewealth.co.nz/data-security-incident",
    "Timestamp": "2020-02-12T22:02:17",
    "Domain": "www.generatewealth.co.nz",
    "Description": "Generate is an award winning, New Zealand owned KiwiSaver specialist. We focus on providing top performance, great service and valuable advice to Kiwis."
  },
  {
    "Title": "RØDE Microphones -  VXLR+ ",
    "Url": "https://www.rode.com/accessories/vxlrplus",
    "Timestamp": "2020-02-12T22:02:14",
    "Domain": "www.rode.com",
    "Description": "RØDE Microphones"
  },
  {
    "Title": "The Best Cybersecurity Blogs of 2020 - ClearanceJobs",
    "Url": "https://news.clearancejobs.com/2020/02/11/the-best-cybersecurity-blogs-of-2020/",
    "Timestamp": "2020-02-12T22:02:12",
    "Domain": "news.clearancejobs.com",
    "Description": "There are blogs dedicated to penetration testing, cybersecurity best practices, latest news on security breaches, cybersecurity how-tos as well as training and certification."
  },
  {
    "Title": "Rendering Particles with Compute Shaders - Mike Turitzin",
    "Url": "https://miketuritzin.com/post/rendering-particles-with-compute-shaders/",
    "Timestamp": "2020-02-12T22:01:39",
    "Domain": "miketuritzin.com",
    "Description": "Overview I developed a technique to render single-pixel particles (using additive blending) with compute shaders rather than the usual fixed-function rasterization with vertex and fragment shaders. My approach runs 25-335% faster than rasterization on the cases I tested and is particularly faster for some “pathological” cases (which for my application are not actually that uncommon). I observed these speedups on both NVIDIA and AMD GPUs.\nUsing this technique allowed me to ship an app that runs on minimum-spec hardware without sacrificing visual fidelity."
  },
  {
    "Title": "GitHub CLI Beta",
    "Url": "https://cli.github.com/",
    "Timestamp": "2020-02-12T18:56:41",
    "Domain": "cli.github.com",
    "Description": "Take GitHub to the command line"
  },
  {
    "Title": "HEY",
    "Url": "https://hey.com/",
    "Timestamp": "2020-02-12T18:19:11",
    "Domain": "hey.com",
    "Description": "Email at its best, new from Basecamp, coming soon."
  },
  {
    "Title": "Newtonsoft Vs System.Text.Json – Talk Technical",
    "Url": "https://talktechnical.net/newtonsoft-vs-system-text-json/",
    "Timestamp": "2020-02-12T16:45:40",
    "Domain": "talktechnical.net",
    "Description": "Skip to content"
  },
  {
    "Title": "Building C# 8.0 | .NET Blog",
    "Url": "https://blogs.msdn.microsoft.com/dotnet/2018/11/12/building-c-8-0/",
    "Timestamp": "2020-02-12T12:01:25",
    "Domain": "blogs.msdn.microsoft.com",
    "Description": "Building C# 8.0\nThe next major version of C# is C# 8.0. It’s been in the works for quite some time, even as we built and shipped the minor releases C# 7.1, 7.2 and 7.3, and I’m quite excited about the new capabilities it will bring."
  },
  {
    "Title": "Tanaguru Contrast-Finder",
    "Url": "https://contrast-finder.tanaguru.com/",
    "Timestamp": "2020-02-12T08:22:20",
    "Domain": "contrast-finder.tanaguru.com",
    "Description": "Foreground Color :    For each color (red, green and blue), enter a number between 0 et 255.  Red :    Green :    Blue :   The color should be between #000000 and #FFFFFF  Hexadecimal :"
  },
  {
    "Title": "Memory Bandwidth Napkin Math",
    "Url": "https://www.forrestthewoods.com/blog/memory-bandwidth-napkin-math/",
    "Timestamp": "2020-02-12T08:00:52",
    "Domain": "www.forrestthewoods.com",
    "Description": "An exploration into C++ memory throughput performance."
  },
  {
    "Title": "Blazored/FluentValidation",
    "Url": "https://github.com/Blazored/FluentValidation",
    "Timestamp": "2020-02-12T08:00:39",
    "Domain": "github.com",
    "Description": "A library for using FluentValidation with Blazor. Contribute to Blazored/FluentValidation development by creating an account on GitHub."
  },
  {
    "Title": "Tinkering with client-side Blazor and the AWS SDK for .NET",
    "Url": "https://matteo.tech.blog/2020/02/11/tinkering-with-client-side-blazor-and-the-aws-sdk-for-net/",
    "Timestamp": "2020-02-12T05:01:34",
    "Domain": "matteo.tech.blog",
    "Description": "Being a .NET lover, a cross-platform hopeful and a JavaScript ignorant, I was immediately enthused about client-side Blazor. The promise of statically hosted web applications that run on every plat…"
  },
  {
    "Title": "Forms and Fields in ASP .NET Core 3.1",
    "Url": "https://wakeupandcode.com/forms-and-fields-in-asp-net-core-3-1/",
    "Timestamp": "2020-02-12T05:01:33",
    "Domain": "wakeupandcode.com",
    "Description": "This is the sixth of a new series of posts on ASP .NET Core 3.1 for 2020. In this series, we’ll cover 26 topics over a span of 26 weeks from January through June 2020, titled AS…"
  },
  {
    "Title": "ASP.NET Blog | Announcing Experimental Mobile Blazor Bindings February update",
    "Url": "https://devblogs.microsoft.com/aspnet/mobile-blazor-bindings-feb-2020-update/",
    "Timestamp": "2020-02-12T02:01:54",
    "Domain": "devblogs.microsoft.com",
    "Description": "Update of Experimental Mobile Blazor Bindings with new controls, iOS startup fix, easier native animations, and more!"
  },
  {
    "Title": "google/tink",
    "Url": "https://github.com/google/tink/blob/master/docs/WIRE-FORMAT.md",
    "Timestamp": "2020-02-12T01:02:31",
    "Domain": "github.com",
    "Description": "Tink is a multi-language, cross-platform, open source library that provides cryptographic APIs that are secure, easy to use correctly, and hard(er) to misuse. - google/tink"
  },
  {
    "Title": "INN Revival :: Home",
    "Url": "https://www.innrevival.net/",
    "Timestamp": "2020-02-12T00:17:49",
    "Domain": "www.innrevival.net",
    "Description": "INN Revival :: Home"
  },
  {
    "Title": "Visual 6502 in JavaScript",
    "Url": "http://visual6502.org/JSSim/index.html",
    "Timestamp": "2020-02-12T00:13:47",
    "Domain": "visual6502.org",
    "Description": "This simulator uses HTML5 features only found on the latest versions of browsers and needs\nlots of RAM. If you have trouble, please check compatibility.\n\n\n\nKeyboard controls: 'z' to zoom in, 'x' to zoom out, 'n' to step the simulation.\n\nMouse controls: Left-click and drag to scroll around (when you're zoomed in.)\n\nMore information in the User Guide."
  },
  {
    "Title": "Stage.js - 2D JavaScript library for cross-platform HTML5 game development",
    "Url": "http://piqnt.com/stage.js/",
    "Timestamp": "2020-02-12T00:08:41",
    "Domain": "piqnt.com",
    "Description": "2D JavaScript library for cross-platform HTML5 game development"
  },
  {
    "Title": "~sircmpwn/shit - sourcehut git",
    "Url": "https://git.sr.ht/~sircmpwn/shit",
    "Timestamp": "2020-02-12T00:08:13",
    "Domain": "git.sr.ht",
    "Description": "shit == Shell Git"
  }
]