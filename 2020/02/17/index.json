[
  {
    "Title": "Dillon Berger (@InertialObservr) is creating math/physics edu-content | Patreon",
    "Url": "https://www.patreon.com/inertialobserver",
    "Timestamp": "2020-02-17T23:03:40",
    "Domain": "www.patreon.com",
    "Description": "Become a patron of Dillon Berger (@InertialObservr) today:\n            Read 4 posts by Dillon Berger (@InertialObservr) and get access to exclusive\n            content and experiences on the world’s largest membership\n            platform for artists and creators."
  },
  {
    "Title": "NYC Salon",
    "Url": "https://www.nycsalon.fun/",
    "Timestamp": "2020-02-17T23:03:38",
    "Domain": "www.nycsalon.fun",
    "Description": "NYC Salon is a biweekly speaker series featuring diverse speakers, one-of-a-kind stories, and engaging community activities."
  },
  {
    "Title": "dwmkerr/hacker-laws",
    "Url": "https://github.com/dwmkerr/hacker-laws",
    "Timestamp": "2020-02-17T23:03:31",
    "Domain": "github.com",
    "Description": "💻📖 Laws, Theories, Principles and Patterns that developers will find useful. #hackerlaws - dwmkerr/hacker-laws"
  },
  {
    "Title": "Great App Search Checklist",
    "Url": "https://khalidabuhakmeh.com/great-app-search-checklist",
    "Timestamp": "2020-02-17T21:03:09",
    "Domain": "khalidabuhakmeh.com",
    "Description": "Over a decade ago, I started my software development career. A search experience within my applications was the furthest thing from my mind. From then to the present, Search has become an unavoidable reality of not just software development, but our everyday lives."
  },
  {
    "Title": "Codefresh is the first CI/CD platform built for Kubernetes and Docker.",
    "Url": "https://codefresh.io/",
    "Timestamp": "2020-02-17T21:03:01",
    "Domain": "codefresh.io",
    "Description": "Codefresh's continuous integration and delivery platform for Docker and Kubernetes empowers teams of all sizes to build & release pipelines faster at scale."
  },
  {
    "Title": "Generic Host Builder in ASP .NET Core 3.1",
    "Url": "https://wakeupandcode.com/generic-host-builder-in-asp-net-core-3-1/",
    "Timestamp": "2020-02-17T21:02:58",
    "Domain": "wakeupandcode.com",
    "Description": "This is the seventh of a new series of posts on ASP .NET Core 3.1 for 2020. In this series, we’ll cover 26 topics over a span of 26 weeks from January through June 2020, titled …"
  },
  {
    "Title": "Your balance is $0.30000000004",
    "Url": "https://medium.com/selency-tech-product/your-balance-is-0-30000000004-b6f7870bd32e",
    "Timestamp": "2020-02-17T20:03:47",
    "Domain": "medium.com",
    "Description": "Common problems found in money-handling software"
  },
  {
    "Title": "i am the cavalry",
    "Url": "https://www.iamthecavalry.org/",
    "Timestamp": "2020-02-17T20:03:42",
    "Domain": "www.iamthecavalry.org",
    "Description": "technology worthy of our trust"
  },
  {
    "Title": "Home | Mono",
    "Url": "https://www.mono-project.com/",
    "Timestamp": "2020-02-17T20:03:36",
    "Domain": "www.mono-project.com",
    "Description": "Mono is a software platform designed to allow\n    developers to easily create cross platform applications part of\n    the .NET Foundation."
  },
  {
    "Title": "Rugged Software",
    "Url": "https://ruggedsoftware.org/",
    "Timestamp": "2020-02-17T20:03:34",
    "Domain": "ruggedsoftware.org",
    "Description": "“Rugged” describes software development organizations that have a culture of rapidly evolving their ability to create available, survivable, defensible, secure, and resilient software."
  },
  {
    "Title": "Working with expression trees in C# | Alexey Golub",
    "Url": "https://tyrrrz.me/blog/expression-trees/",
    "Timestamp": "2020-02-17T19:29:01",
    "Domain": "tyrrrz.me",
    "Description": "Expression trees is an obscure, although very interesting feature in .NET. Most people probably think of it as something synonymous with object-relational mapping frameworks, but despite being its most common use case, it’s not the only one. There…"
  },
  {
    "Title": "PODCASTICO - מפיקים פודקאסטים מעולים - הפקת פודקאסט לחברות וארגונים",
    "Url": "https://www.podcasti.co/",
    "Timestamp": "2020-02-17T19:04:48",
    "Domain": "www.podcasti.co",
    "Description": "עושים פודקאסטים, אולפן פודקאסטים, תוכן לפודקאסט, הדרכה לפודקאסטרים, הנחיה, ייעוץ תוכן, סאונד לרדיו"
  },
  {
    "Title": "TaoSecurity",
    "Url": "https://taosecurity.com/",
    "Timestamp": "2020-02-17T18:51:59",
    "Domain": "taosecurity.com",
    "Description": "TaoSecurity is the home of Richard Bejtlich, focused on network security monitoring and digital security."
  },
  {
    "Title": "About - iCircuit - The Realtime Circuit Simulator and Editor",
    "Url": "http://icircuitapp.com/",
    "Timestamp": "2020-02-17T18:51:55",
    "Domain": "icircuitapp.com",
    "Description": "iCircuit is the easy to use electronic circuit simulator and designer - the perfect tool for students, hobbyists, and engineers."
  },
  {
    "Title": "NoSQL Database | RavenDB ACID NoSQL Document Database",
    "Url": "https://ravendb.net/",
    "Timestamp": "2020-02-17T18:51:50",
    "Domain": "ravendb.net",
    "Description": "A NoSQL Database that's fully transactional - RavenDB NoSQL Document Database allows 1 million reads and 150,000 writes per second."
  },
  {
    "Title": "Calca - The Text Editor that Loves Math",
    "Url": "http://calca.io/",
    "Timestamp": "2020-02-17T18:51:48",
    "Domain": "calca.io",
    "Description": "Calca is an advanced symbolic calculator for iOS, OS X, and Windows that's \nas easy to use as a text editor."
  },
  {
    "Title": "Continuous C# and F# IDE for iPads and iPhones",
    "Url": "http://continuous.codes/",
    "Timestamp": "2020-02-17T18:51:44",
    "Domain": "continuous.codes",
    "Description": "Continuous is always running your code so you can\n                see changes to objects as you type. This makes writing\n                interactive applications easier than\n                with the old Code-Build-Run cycle. You are now\n                free to make lots of small changes and see their\n                effects immediately."
  },
  {
    "Title": "Working with expression trees in C# | Alexey Golub",
    "Url": "https://tyrrrz.me/blog/expression-trees",
    "Timestamp": "2020-02-17T18:24:05",
    "Domain": "tyrrrz.me",
    "Description": "Expression trees is an obscure, although very interesting feature in .NET. Most people probably think of it as something synonymous with object-relational mapping frameworks, but despite being its most common use case, it’s not the only one. There…"
  },
  {
    "Title": "dotnet/project-system",
    "Url": "https://github.com/dotnet/project-system/",
    "Timestamp": "2020-02-17T17:58:20",
    "Domain": "github.com",
    "Description": "The C#, F# and Visual Basic project system for Visual Studio - dotnet/project-system"
  },
  {
    "Title": "Dynamic generic dictionary expansion feature by fadimounir · Pull Request #32270 · dotnet/runtime",
    "Url": "https://github.com/dotnet/runtime/pull/32270",
    "Timestamp": "2020-02-17T17:58:18",
    "Domain": "github.com",
    "Description": "TODO:\n\n Update JITInterface GUID in corinfo.h after #1378 (comment)\n\nThese changes introduce dynamic size expansion for generic dictionary layouts when we run out of slots.\nThe original implementat..."
  },
  {
    "Title": "HusseiN98D on Bugcrowd",
    "Url": "https://bugcrowd.com/HusseiN98D",
    "Timestamp": "2020-02-17T17:58:14",
    "Domain": "bugcrowd.com",
    "Description": "View HusseiN98D’s researcher profile on Bugcrowd, a platform and team of experts connecting organizations to a global crowd of trusted security researchers."
  },
  {
    "Title": "HackerOne",
    "Url": "https://hackerone.com/hussein98d",
    "Timestamp": "2020-02-17T17:58:10",
    "Domain": "hackerone.com",
    "Description": null
  },
  {
    "Title": "dotnet/runtime",
    "Url": "https://github.com/dotnet/runtime/blob/bad9533de46255cdf4357fdd6e685f6157e72d08/docs/design/coreclr/botr/shared-generics.md",
    "Timestamp": "2020-02-17T17:58:09",
    "Domain": "github.com",
    "Description": ".NET is a cross-platform runtime for cloud, IoT, and desktop apps. - dotnet/runtime"
  },
  {
    "Title": "Rémi Bourgarel’s Blog",
    "Url": "https://remibou.github.io/",
    "Timestamp": "2020-02-17T17:58:03",
    "Domain": "remibou.github.io",
    "Description": "Blog about software development. Blazor, ASPNET Core, C#, Web Assembly, Spring, Angular, Docker"
  },
  {
    "Title": "Table Convert Online - table to markdown,csv,json,latex table,excel,sql,xml",
    "Url": "https://tableconvert.com/",
    "Timestamp": "2020-02-17T17:08:26",
    "Domain": "tableconvert.com",
    "Description": "A powerful online table editor and generator that converts between csv, html and markdown. easy to convert html tables to sql, json, xml, excel, latex tables and text, making the table easier to use."
  },
  {
    "Title": "dataframe.ca Blog",
    "Url": "https://dataframe.ca/",
    "Timestamp": "2020-02-17T16:49:03",
    "Domain": "dataframe.ca",
    "Description": "Built by Den Delimarsky in 🍁 Canada."
  },
  {
    "Title": "Dmitry Pavlov | Coding Machine | World-class .NET Freelance Contractor | ASP.NET Core, .NET, C#",
    "Url": "http://coding-machine.net/",
    "Timestamp": "2020-02-17T16:49:02",
    "Domain": "coding-machine.net",
    "Description": "World-class .NET freelance contractor. And yeah, my clients call me the Coding Machine. :) I mostly deal with ASP.NET Core / Blazor development these days. Top 1% on Stack Overflow. Top 3% of Freelance Developers. Microsoft MVP Awardee (7 times). Master Degree in Computer Science. Open source author and ASP.NET Core community moderator."
  },
  {
    "Title": "Tipping with Brave Rewards",
    "Url": "https://brave.com/tips/",
    "Timestamp": "2020-02-17T16:49:01",
    "Domain": "brave.com",
    "Description": "Tip content creators directly anywhere on the web."
  },
  {
    "Title": "Real-World Cryptography",
    "Url": "https://www.manning.com/books/real-world-cryptography?a_aid=Realworldcrypto",
    "Timestamp": "2020-02-17T16:48:57",
    "Domain": "www.manning.com",
    "Description": "Contains one of the most understandable introductions to cryptography I have ever read."
  },
  {
    "Title": "dotnet/runtime",
    "Url": "https://github.com/dotnet/runtime/blob/fcd862e/src/coreclr/src/vm/method.hpp",
    "Timestamp": "2020-02-17T16:48:54",
    "Domain": "github.com",
    "Description": ".NET is a cross-platform runtime for cloud, IoT, and desktop apps. - dotnet/runtime"
  },
  {
    "Title": "F# Weekly #7, 2020 – F# 5.0 (preview) and TP.SDK update!",
    "Url": "https://sergeytihon.com/2020/02/16/f-weekly-7-2020-f-5-0-preview-and-tp-sdk-update/",
    "Timestamp": "2020-02-17T16:48:50",
    "Domain": "sergeytihon.com",
    "Description": "Welcome to F# Weekly, A roundup of F# content from this past week: News Using .NET for Apache® Spark™ to Analyze Log Data Garbage Collection at Food Courts Announcement: The `dotnet-fake` package a…"
  },
  {
    "Title": "Blockchain Research Newsletter",
    "Url": "https://blockchainresearch.substack.com/",
    "Timestamp": "2020-02-17T16:48:45",
    "Domain": "blockchainresearch.substack.com",
    "Description": "In this newsletter, we will be summarizing blockchain research papers so that you get the gist of the paper without having to read it."
  },
  {
    "Title": "dotnet/runtime",
    "Url": "https://github.com/dotnet/runtime/blob/fcd862e/src/coreclr/src/vm/field.h",
    "Timestamp": "2020-02-17T16:48:43",
    "Domain": "github.com",
    "Description": ".NET is a cross-platform runtime for cloud, IoT, and desktop apps. - dotnet/runtime"
  },
  {
    "Title": "dotnet/runtime",
    "Url": "https://github.com/dotnet/runtime/blob/fcd862e/src/coreclr/src/jit/lclvars.cpp",
    "Timestamp": "2020-02-17T16:48:42",
    "Domain": "github.com",
    "Description": ".NET is a cross-platform runtime for cloud, IoT, and desktop apps. - dotnet/runtime"
  },
  {
    "Title": "Ptolemy's Theorem — Brady Haran",
    "Url": "http://www.bradyharanblog.com/blog/ptolemys-theorem",
    "Timestamp": "2020-02-17T16:48:37",
    "Domain": "www.bradyharanblog.com",
    "Description": "The  latest Numberphile video  is a beautiful proof of Ptolemy’s Theorem, presented by  Zvezdelina Stankova ."
  },
  {
    "Title": "Performance testing",
    "Url": "http://slides.aakinshin.net/dotnetos2019/",
    "Timestamp": "2020-02-17T16:48:35",
    "Domain": "slides.aakinshin.net",
    "Description": "Prevent performance degradations"
  },
  {
    "Title": "Visual Studio Code January 2019",
    "Url": "https://code.visualstudio.com/updates/v1_31",
    "Timestamp": "2020-02-17T16:48:31",
    "Domain": "code.visualstudio.com",
    "Description": "See what is new in the Visual Studio Code January 2019 Release (1.31)"
  },
  {
    "Title": "dotnet/runtime",
    "Url": "https://github.com/dotnet/runtime/blob/fcd862e/src/coreclr/src/vm/methodtable.h",
    "Timestamp": "2020-02-17T16:48:24",
    "Domain": "github.com",
    "Description": ".NET is a cross-platform runtime for cloud, IoT, and desktop apps. - dotnet/runtime"
  },
  {
    "Title": "HackerOne",
    "Url": "https://hackerone.com/d0nut",
    "Timestamp": "2020-02-17T16:48:21",
    "Domain": "hackerone.com",
    "Description": null
  },
  {
    "Title": "Fermat's Library | Librarian",
    "Url": "https://fermatslibrary.com/librarian",
    "Timestamp": "2020-02-17T16:48:20",
    "Domain": "fermatslibrary.com",
    "Description": "A Chrome extension that enhances arXiv papers. Get direct links to references, BibTeX extraction and comments on all arXiv papers"
  },
  {
    "Title": "Evil Eval() Vol. 2 @ PeachPie | PHP compiler to .NET",
    "Url": "https://www.peachpie.io/2020/02/evil-eval-2.html",
    "Timestamp": "2020-02-17T16:47:31",
    "Domain": "www.peachpie.io",
    "Description": "PeachPie allows you to run PHP applications on .NET Core - faster, stabler and more secure."
  },
  {
    "Title": "dotnet/runtime",
    "Url": "https://github.com/dotnet/runtime/blob/fcd862e/src/coreclr/src/vm/jitinterface.cpp",
    "Timestamp": "2020-02-17T16:47:29",
    "Domain": "github.com",
    "Description": ".NET is a cross-platform runtime for cloud, IoT, and desktop apps. - dotnet/runtime"
  },
  {
    "Title": "dotnet/runtime",
    "Url": "https://github.com/dotnet/runtime/blob/fcd862e/src/coreclr/src/vm/typehandle.cpp",
    "Timestamp": "2020-02-17T16:47:18",
    "Domain": "github.com",
    "Description": ".NET is a cross-platform runtime for cloud, IoT, and desktop apps. - dotnet/runtime"
  },
  {
    "Title": "iolevel/wpdotnet-sdk",
    "Url": "https://github.com/iolevel/wpdotnet-sdk",
    "Timestamp": "2020-02-17T16:47:10",
    "Domain": "github.com",
    "Description": "WordPress compiled to .NET Standard. SDK for ASP.NET Core. - iolevel/wpdotnet-sdk"
  },
  {
    "Title": "LiteDB :: A .NET embedded NoSQL database",
    "Url": "https://www.litedb.org/",
    "Timestamp": "2020-02-17T16:47:08",
    "Domain": "www.litedb.org",
    "Description": "LiteDB : LiteDB - A .NET NoSQL Document Store database in a single data file."
  },
  {
    "Title": "Migrating configuration in .NET Framework to .NET Core",
    "Url": "https://www.alexanderslotte.com/migrate-to-net-core-configuration/",
    "Timestamp": "2020-02-17T16:47:07",
    "Domain": "www.alexanderslotte.com",
    "Description": "The challenge"
  },
  {
    "Title": "Calculating Pi: My attempt at breaking the Pi World Record",
    "Url": "https://blog.timothymullican.com/calculating-pi-my-attempt-breaking-pi-record",
    "Timestamp": "2020-02-17T16:47:06",
    "Domain": "blog.timothymullican.com",
    "Description": "Before I go into the specifics of my record attempt, it is important for you to have some background information. Over the past few years I have been steadily acquiring server hardware to increase my knowledge of system administration and cyber security. This is not only for personal growth: it has also helped me immensely in my professional career. I have served in various roles including cyber security (Cyber Defense Analyst, Chief Information Security Officer) and system administration (Senior System Administrator). Historically, I have also donated my spare system computing resources to various distributed computing projects through the BOINC1 platform. In late 2018 I decided to shift the primary focus of my lab to distributed computing. I still maintain a small 1U server for personal use, but most of the other servers run BOINC exclusively. UPDATE: Partway through the world record attempt (July, 2019), I founded a nonprofit organization, North Alabama Charitable Computing, which repurposes enterprise-grade compute and storage equipment for STEM research. After I break the Pi world record, most of my servers will be donated where they will provide scientists and various research projects with computing power. Anyways, back to the reason you are here: My primary reason for attempting to break the record set by Emma Haruka Iwao/Google2 (March, 2019 – 31.4 trillion digits) is to test the limits of my hardware. Once I am finished breaking the Pi world record, the server and hard drives will be repurposed for STEM research (e.g., BOINC, Open Science Grid3, university research projects). One of the first things I did was reach out to Alexander Yee, who wrote and maintains a program called y-cruncher4. y-cruncher is a program that computes various mathematical constants based on user input. y-cruncher is able to take advantage of the newest processor features and features many optimizations, which in part explains why it has been used to set several of the past Pi records (and other mathematical constants). After emailing back and forth with Alex, I started to gain an understanding of what would be required for such a feat: 50 trillion digits of Pi. In order to calculate this many digits, y-cruncher determined I would need 256TiB of ephemeral storage, in addition to 38TiB for the final output. One of the first things that you may notice is that y-cruncher calculates everything in tebibytes (base-2), rather than terabytes (base-10). It can be confusing since these units of measure are sometimes used interchangeably (I’m looking at you, Windows5, and Linux6 df “-h” vs “-H”), but the difference can be significant: for example, 256TiB is equivalent to 281TB. You don’t want to get 3/4 of the way through a record attempt and realize you don’t have enough storage. Once I had a rough estimate of the amount of equipment and disk required for the Pi computation, I started looking for used hardware, primarily on eBay. From January to March of 2019, I started purchasing equipment that would be required for the attempt: a new server, several hard drives, various PCI-E cards, and a tape libary and drive, to name just a few. Below is a picture of my home lab in it’s entirety (except for an Asus ESC8000 G4 in my office). Everything inside the red box is used for the Pi computation. HP PROLIANT DL580 Gen8 This server (Ubuntu 18.10) performs the Pi computation. The final compressed Pi digits will be transferred to the Dell R720xd via a cifs-mounted directory (/drives/main_output). (4) Intel Xeon E7-4880V2 2.5GHz 15C/30T CPU 320GB DDR3 PC3-8500R ECC RAM (5) 2.5” 100GB SATA MLC SSD (RAID 6) (4) 6Gb LSI 9207-8e Dual Port SAS HBA Connected to each HPE D3600 disk shelf via single SFF-8088 to SFF-8644 cable 2m Intel 10-Gigabit X540-AT2 Dual Port Ethernet Adapter Dedicated link to Dell R720xd for Veeam backups Intel 1-Gigabit I340-T4 Quad Port Ethernet Adapter Connection to the Internet (4) HP StorageWorks D3600 These drives are used to perform computations in lieu of server memory (known as y-cruncher Swap Mode7) to provide the resources required to calculate Pi (mounted on the DL580 as /drives/1 - /drives/48). I originally used HP StorageWorks D2600 disk shelves, but I didn’t realize the SATA backplane was limited to 3Gb/s. I upgraded to the D3600 disk shelf which supports 6Gb/s SATA in June of 2019. (12) 3.5” 6TB SATA 7.2K HGST Ultrastar He8 HDD (JBOD) Dell PowerEdge R720xd This server (Windows Server 2016) serves two primary purposes. First, it is connected to the HP tape library. A Veeam job is manually run each month, which backs up data from the 48 drives running the Pi computation directly to tape. Second, it has an additional RAID6 storage volume (see Dell PowerVault MD1200) which will contain the 50 trillion compressed Pi digits. (2) Intel Xeon E5-2670 8C/16T CPU 128GB DDR3 ECC RAM (2) 2.5” 600GB SAS 10K Seagate HDD (RAID1) Emulex LPE 12002, Dual Port 8Gb Fiber Channel HBA Connected to tape library using (2) LC-LC OM3 2m fiber cables Dell PERC H810 Adapter 6Gb RAID Controller Card Connected to Dell MD1200 disk shelf Dell PowerVault MD1200 These drives will contain the compressed Pi digits that y-cruncher generates at the end of the computation. 40TB (RAID6) (7) 3.5” 4TB 7.2K SAS HGST Hitachi (5) 3.5” 4TB 7.2K SAS Seagate Constellation ES.3 HPE StoreEver MSL4048 Tape Library This tape library will contain monthly backups of the forty-eight computation drives. LTO-5 FC Tape Drive (47) LTO Ultrium 5 Tape Data Cartridge 1.5TB Here is a timeline of my world record attempt: Feb 12, 2019 - This is the day I first reached out to Alex Yee about his y-cruncher program. I told him I was interested in breaking the world record (at that time it was 22.4 trillion digits set by Peter Trueb8). My initial thoughts were to use a NetApp DS4486, NetApp FAS3220 filer, and Dell R910 to compute the record. At this point I wasn’t sure how many digits I was going to calculate, but I knew it was going to be at least 22.4 trillion in order to beat the record (at that time it was the record). Feb 12, 2019 - Alex responds with answers to some questions that I had relating to accessing storage and server CPU/memory. I was planning to access the required disk storage using iSCSI on the FAS3220, but Alex pointed out that this would be much too slow even over a 10 Gigabit link. Based on his analysis, I decided to directly connect the storage to the server using SAS cables (SFF-8088). Details were sketchy if I could directly attach the NetApp DS4486 to the main server, or if I would have to use a NetApp filer. After conducting some research, I decided it would just be easier to use external disk enclosures. At the time I was looking at using several Dell PowerVault MD1200 enclosures. Feb 13, 2019 - I start looking at the HP Proliant DL580 Gen8 instead of the Dell PowerEdge R910, due to the fact it has a newer processor and higher core count (15/30T vs 10/20T). After some analysis and research, I decide to aim for 50 trillion digits of Pi. I originally planned on using RAID with the hard drives required during the calculation, but the sheer amount of storage required prevented this. In order to mitigate the risk of a hard drive failure, I decided to utilize a HP MSL4048 tape library, which holds a maximum of 48 tapes. The unit I purchased off of eBay just happened to come with 21 LTO-5 tapes (not mentioned in the auction), so that was an added bonus! I got around to purchasing a single full-height LTO-5 tape drive so that I would be able to backup the hard drives to tape. Around the time I was looking for tape backup solutions, Veeam was restructuring their licensing, and the community edition now supported tape backups for up to five hosts. Based on this information, I decide to download Veeam Backup & Replication 9.5 Community Edition and put it on another server (Dell R720xd) connected to the tape library over fiber. After coming to the decision to calculate 50 trillion digits, I determined I would need around 281TB of storage, and after looking on eBay I decided to purchase four HP D2600 external disk enclosures and 48 6TB SATA drives (JBOD) to meet this need. I also saw that I would need 44TB for the final compressed Pi output. I picked up a Dell MD1200 external disk enclosure and 12 4TB SAS drives (RAID6) that would serve this purpose. March 14, 2019 - I finally receive all of the hardware necessary for the computation to start. I contact Alex and he recommends I run several tests (I/O performance analysis, swap multiply). I learn that Google has beaten the current world record and was suprised to find that they were interested in this type of computation. Nevertheless, I was still aiming for 50 trillion digits, 18.6 trillion more digits then they computed. I also saw that it cost them around $200,0009, which is very expensive. I’m aiming to stay below 5% of that overall amount. Apr 1, 2019 - All of the testing is completed and the I/O seek values are adjusted to 12Mb/s based on the results (due to 3Gb SATA backplane on HP D2600). I start the world record computation. April 2, 2019 - y-cruncher Status update: Series: S ( 17 ) 1.419% Apr 3, 2019 - I log into the server and I am greeted with the following error message: “A Raid-File operation has failed.” After reaching out and troubleshooting, Alex recommends adjusting the ulimit value on Linux (by default, Linux only allows you to have 1023 open files handles by default)10. I set the ulimit value to a very high value in order to prevent this issue from happening again, and this fixes the issue. April 4, 2019 - y-cruncher Status update: Series: S ( 16 ) 1.794% April 4, 2019 - y-cruncher Status update: Series: S ( 15 ) 2.268% April 5, 2019 - y-cruncher Status update: Series: S ( 14 ) 2.867% April 6, 2019 - y-cruncher Status update: Series: S ( 13 ) 3.625% April 8, 2019 - y-cruncher Status update: Series: S ( 12 ) 4.584% April 10, 2019 - y-cruncher Status update: Series: S ( 11 ) 5.796% April 13, 2019 - y-cruncher Status update: Series: S ( 10 ) 7.330% April 16, 2019 - y-cruncher Status update: Series: S ( 9 ) 9.271% April 21, 2019 - y-cruncher Status update: Series: S ( 8 ) 11.727% April 27, 2019 - y-cruncher Status update: Series: S ( 7 ) 14.836% May 6, 2019 - y-cruncher Status update: Series: S ( 6 ) 18.773% May 16, 2019 - y-cruncher Status update: Series: S ( 5 ) 23.761% May 31, 2019 - y-cruncher Status update: Series: S ( 4 ) 30.086% June 15, 2019 - I email Alex asking if there would be any issue upgrading my 3Gb/s SATA D2600 external disk enclosures to the D3600 6Gb/s model. He says there won’t be any issue as long as the drives and mount points appear the same to the operating system. June 19, 2019 - y-cruncher Status update: Series: S ( 3 ) 38.116% June 23, 2019 - I swapped out the D2600 disk enclosures with the D3600 model. I transfer all forty-eight drives to the new enclosures. I had to purchase new drive caddies as well (HP Gen8 model caddy vs Gen5/6 caddy), since the new enclosure drive bays are less wide than the older model. I let Alex know the disk enclosure transfer appears to have been successful and share the updated drive speed metrics – write speed: 3.15 GiB/s (old) vs 5.69 GiB/s (new), read speed: 3.08 GiB/s (old) vs 5.90 GiB/s (new). Based on the increased (nearly doubled speed), Alex lets me know the computation should finish a month or two ahead of schedule. July 14, 2019 - y-cruncher Status update: Series: S ( 2 ) 48.327% August 15, 2019 - y-cruncher Status update: Series: S ( 1 ) 61.346% September 21, 2019 - y-cruncher Status update: Series: S ( 0 ) 78.042% November 9, 2019 - y-cruncher Status update: Finishing Series November 14, 2019 - y-cruncher Status update: Large Division November 26, 2019 - y-cruncher Status update: InvSqrt(10005) December 25, 2019 - y-cruncher is in the middle of performing the output base conversion (after writing the hexadecimal digits). Due to severe weather, I had to shut down the server. This was unfortunate because the program is unable to checkpoint during the base conversion process, meaning I lost about 2 weeks worth of work. December 31, 2019 - As luck would have it, a transformer next to my house blew and the power went out yet again. This means I had to restart from the last checkpoint yet again, losing another 2 weeks worth of work. January 18, 2020 - Base conversion finished. y-cruncher begins writing the Pi decimal digits. January 20. Decimal digits written. Begin verification of base conversion, decimal output, and hexadecimal output. January 29, 2020 - Pi Computation is finished! The world record appears to be broken! https://boinc.berkeley.edu/ ⤴ https://cloud.google.com/blog/products/compute/calculating-31-4-trillion-digits-of-archimedes-constant-on-google-cloud ⤴ https://opensciencegrid.org/ ⤴ http://www.numberworld.org/y-cruncher/ ⤴ https://blog.livedrive.com/2012/08/why-a-windows-terabyte-isnt-really-a-terabyte/ ⤴ https://www.freebsd.org/cgi/man.cgi?df(1) ⤴ http://www.numberworld.org/y-cruncher/guides/swapmode.html#intro ⤴ http://www.numberworld.org/y-cruncher/news/2016.html#2016_11_15 ⤴ https://youtu.be/BwkpNd2ceBk?t=459 ⤴ https://easyengine.io/tutorials/linux/increase-open-files-limit/ ⤴"
  },
  {
    "Title": "dotnet/runtime",
    "Url": "https://github.com/dotnet/runtime/blob/fcd862e/src/coreclr/src/vm/class.h",
    "Timestamp": "2020-02-17T16:47:03",
    "Domain": "github.com",
    "Description": ".NET is a cross-platform runtime for cloud, IoT, and desktop apps. - dotnet/runtime"
  },
  {
    "Title": "Private Thoughts",
    "Url": "https://mikerah.github.io/",
    "Timestamp": "2020-02-17T16:47:00",
    "Domain": "mikerah.github.io",
    "Description": "Thoughts on Privacy as it relates to blockchains/cryptocurrency and distributed systems"
  },
  {
    "Title": "Manning | Deal of the Day",
    "Url": "https://www.manning.com/dotd?a_aid=su4utaraxuTre8tuthup",
    "Timestamp": "2020-02-17T16:46:58",
    "Domain": "www.manning.com",
    "Description": "Deal of the Day"
  },
  {
    "Title": "Cake - Home",
    "Url": "https://cakebuild.net/",
    "Timestamp": "2020-02-17T16:46:57",
    "Domain": "cakebuild.net",
    "Description": "Cake is built on top of the Roslyn compiler which enables you to write your build scripts in C#."
  },
  {
    "Title": "RAM and bus timing",
    "Url": "https://www.youtube.com/watch?v=i_wrxBdXTgM",
    "Timestamp": "2020-02-17T08:12:13",
    "Domain": "www.youtube.com",
    "Description": "Schematics, datasheets, kits, and more at https://eater.net/6502\nSupport these videos on Patreon: https://www.patreon.com/beneater or https://eater.net/support for other ways to support.\r\n\nPart 1: https://www.youtube.com/watch?v=LnzuMJLZRdU\nPart 2: https://www.youtube.com/watch?v=yl8vPW5hydQ\nPart 3: https://www.youtube.com/watch?v=oO8_2JJV0B4\nPart 4: https://www.youtube.com/watch?v=FY3zTUaykVo\nPart 5: https://www.youtube.com/watch?v=xBjQVxVxOxc\nPart 6: This video!\n\r\n------------------\r\n\r\nSocial media:\r\nWebsite: https://www.eater.net\r\nTwitter: https://twitter.com/ben_eater\r\nPatreon: https://patreon.com/beneater\r\nReddit: https://www.reddit.com/r/beneater\r\n\r\nSpecial thanks to these supporters for making this video possible:\nAdam Lininger, Adrien Friggeri, Alex Catchpole, Alexander Wendland, Andrew R. Whalley, Anthony Cuccia, Armin Brauns, Austin Grant, BakerStaunch, Beau-James Erion, Ben Dyson, Ben Kamens, Ben Williams, Bradley Pirtle, Bryan Brickman, Carlos Ambrozak, Christopher Blackmon, Clayton Parker Coleman, Daniel Tang, Dave Walter, David Boardman, David H. Friedman, David House, David Turner, Dean Winger, Debilu Krastas, Dirk Lentzen, Dmitry Guyvoronsky, Dušan Dželebdžić, Dzevad Trumic, Eric Brummer, Eric Busalacchi, Eric Dynowski, Eric Twilegar, Erik Broeders, Eugene Bulkin, Foaly, George Miroshnykov, HaykH, Ian Tait, Ingo Eble, Ivan Sorokin, Jason DeStefano, JavaXP, Jay Binks, Jayne Gabriele, Jeremy A. , Jeremy Wise, Jimmy Campbell, Joel Jakobsson, Joel Messerli, Joel Miller, Joern Heidenreich, John Fenwick, Jon Dugan, Jordan Scales, Joshua King, Justin Duch, Kefen, Kent Collins, Lambda GPU Workstations, Lucas Nestor, Maksym Zavershynskyi, Manne Moquist, Marcus Classon, Mats Fredriksson, Matt Alexander, Matteo Mohr, Matthäus Pawelczyk, Michael, Michael Burke, Michael Garland, Michael Tedder, Miguel Ríos, Nathan Wachholz, Nicholas Counts, Nicholas Moresco, Örn Arnarson, Örper Forilan, Paul Pluzhnikov, Paul Randal, Philip Hofstetter, Randy True, Ric King, Richard Wells, Rob Bruno, Robert Butler, Ross, Sachin Chitale, Sam Rose, Samuel E Joseph, Scott, Sergey Ten, SonOfSofaman, Stefan Nesinger, Stefanus Du Toit, Stephen Riley, Stephen Smithstone, Steve  Jones, Steve Gorman, Steven Pequeno, Thomas Ballinger, Tom Burns, Vladimir Kanazir, Warren Miller, xisente, Ziggy L"
  },
  {
    "Title": "The Golden Ratio (why it is so irrational) - Numberphile",
    "Url": "https://www.youtube.com/user/numberphile?sub_confirmation=1",
    "Timestamp": "2020-02-17T08:12:12",
    "Domain": "www.youtube.com",
    "Description": "Check out Brilliant (and get 20% off) by clicking https://brilliant.org/numberphile\nFeaturing Ben Sparks --- More links & stuff in full description below ↓↓↓\n\nGolden seeds limited edition T-Shirt: https://teespring.com/NP-Seeds\n\nMore Golden Ratio stuff: http://bit.ly/Golden_Ratio\nMore Ben Sparks Numberphile videos: http://bit.ly/Sparks_Playlist\n\nBen's Twitter: https://twitter.com/SparksMaths\nBen's website: www.bensparks.co.uk\nGeogebra file Ben used: https://www.geogebra.org/m/YThycjQK#material/T8eKzDu5\n\nNote on this video: Ben uses "
  },
  {
    "Title": "The Horrifically Dystopian World of Software Engineering Interviews - Blog by Jared Nelsen",
    "Url": "https://www.jarednelsen.dev/posts/the-horrifically-dystopian-world-of-software-engineering-interviews/",
    "Timestamp": "2020-02-17T08:12:09",
    "Domain": "www.jarednelsen.dev",
    "Description": "A Synopsis of The Current State of Software Engineering Interviews"
  },
  {
    "Title": "PowerPoint-Präsentation",
    "Url": "https://linghuiluo.github.io/COVA-ASE19-Talk-public.pdf",
    "Timestamp": "2020-02-17T08:12:04",
    "Domain": "linghuiluo.github.io",
    "Description": null
  },
  {
    "Title": "Man who misses Ceefax spends years creating his own version",
    "Url": "https://www.independent.co.uk/news/uk/home-news/ceefax-man-recreate-engineer-tv-a9338021.html",
    "Timestamp": "2020-02-17T08:11:58",
    "Domain": "www.independent.co.uk",
    "Description": "Peter Kwan developed ‘Teefax’ after original teletext service was shut down in 2012"
  },
  {
    "Title": "A Survey of Compiler Testing",
    "Url": "https://software-lab.org/publications/csur2019_compiler_testing.pdf",
    "Timestamp": "2020-02-17T08:11:51",
    "Domain": "software-lab.org",
    "Description": null
  },
  {
    "Title": "Ben Eater",
    "Url": "https://eater.net/inet",
    "Timestamp": "2020-02-17T08:11:48",
    "Domain": "eater.net",
    "Description": "I create tutorial-style videos about electronics, computer architecture, networking, and various other technical subjects."
  },
  {
    "Title": "Question: Why for loop is 1.3 slower over byte[] than foreach  · Issue #13671 · dotnet/runtime",
    "Url": "https://github.com/dotnet/runtime/issues/13671",
    "Timestamp": "2020-02-17T08:11:45",
    "Domain": "github.com",
    "Description": "Hi Guys! Usually, people used to thing foreach version of loop is always slower than for and so I, but, when I benchmarked it I was surprised how much (1.3 times) for version is actually slower whe..."
  },
  {
    "Title": "AVIF for Next-Generation Image Coding",
    "Url": "https://netflixtechblog.com/avif-for-next-generation-image-coding-b1d75675fe4?gi=d0fd0c5b3288",
    "Timestamp": "2020-02-17T08:11:42",
    "Domain": "netflixtechblog.com",
    "Description": "By Aditya Mavlankar, Jan de Cock, Cyril Concolato, Kyle Swanson, Anush Moorthy and Anne Aaron"
  },
  {
    "Title": "Research based on the .NET Runtime",
    "Url": "https://mattwarren.org/2019/10/25/Research-based-on-the-.NET-Runtime/",
    "Timestamp": "2020-02-17T08:11:16",
    "Domain": "mattwarren.org",
    "Description": "Over the last few years, I’ve come across more and more research papers based, in some way, on the ‘Common Language Runtime’ (CLR)."
  },
  {
    "Title": "What do software engineers who work at a large scale understand that other developers don't? - Quora",
    "Url": "https://www.quora.com/What-do-software-engineers-who-work-at-a-large-scale-understand-that-other-developers-dont",
    "Timestamp": "2020-02-17T08:11:15",
    "Domain": "www.quora.com",
    "Description": "I can think of a few things:The level of strategy, planning, thinking and control involved.Processes around larger scale applications.Concerns that come with larger scale applications.There is a lot more strategy and thinking on a large scale application that one may think. While one may have a lot of flexibility to be “creative” with smaller applications, large ones can have entire teams in multiple departments dedicated to research and planning in order to come up with ways of improving existing features as well as adding new ones that help better monetize the application. By the time it ..."
  },
  {
    "Title": "Base64 encoding and decoding at almost the speed of a memory copy",
    "Url": "https://arxiv.org/abs/1910.05109",
    "Timestamp": "2020-02-17T08:11:03",
    "Domain": "arxiv.org",
    "Description": "Many common document formats on the Internet are text-only such as email\n(MIME) and the Web (HTML, JavaScript, JSON and XML). To include images or\nexecutable code in these documents, we first encode them as text using base64.\nStandard base64 encoding uses 64~ASCII characters: both lower and upper case\nLatin letters, digits and two other symbols. We show how we can encode and\ndecode base64 data at nearly the speed of a memory copy (memcpy) on recent\nIntel processors, as long as the data does not fit in the first-level (L1)\ncache. We use the SIMD (Single Instruction Multiple Data) instruction set\nAVX-512 available on commodity processors. Our implementation generates several\ntimes fewer instructions than previous SIMD-accelerated base64 codecs. It is\nalso more versatile, as it can be adapted---even at runtime---to any base64\nvariant by only changing constants."
  },
  {
    "Title": "xt0rted/actions",
    "Url": "https://github.com/xt0rted/actions",
    "Timestamp": "2020-02-17T06:38:31",
    "Domain": "github.com",
    "Description": "A list of my GitHub Actions and associated projects - xt0rted/actions"
  }
]