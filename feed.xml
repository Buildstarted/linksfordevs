<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>Invoking Async Power: What Awaits WinForms in .NET 9 - .NET Blog</title>
      <link>https://devblogs.microsoft.com/dotnet/introducing-winforms-async-apis/</link>
      <description>With .NET 9, we’re bringing a suite of new async APIs to WinForms, aimed at making UI updates, dialog interactions, and control management more efficient.</description>
      <author> (https://www.facebook.com/klaus.loeffelmann)</author>
      <guid>https://devblogs.microsoft.com/dotnet/introducing-winforms-async-apis/</guid>
      <pubDate>Tue, 10 Dec 2024 20:01:08 GMT</pubDate>
    </item>
    <item>
      <title>From where I left - &amp;lt;antirez&amp;gt;</title>
      <link>https://antirez.com/news/144</link>
      <description />
      <author> ()</author>
      <guid>https://antirez.com/news/144</guid>
      <pubDate>Tue, 10 Dec 2024 19:01:43 GMT</pubDate>
    </item>
    <item>
      <title>Blazor .NET 9 New Features: Complete Guide</title>
      <link>https://youtube.com/watch?v=H1c5NZM21Xk</link>
      <description>Get a subscription and improve your career: https://courses.devs.school

Comprehensive overview of Blazor .NET 9&amp;#39;s latest features and improvements.

&amp;#128269; Topics Covered:
- Runtime rendering mode detection
- Enhanced reconnection logic
- Static SSR in interactive apps
- Simplified authentication state
- Component Constructor Injection
- New Blazor Hybrid + Web template

⏱️ Timestamps:
00:00 Introduction
00:44 ASP.NET Core improvements
01:34 Runtime rendering detection
07:41 Enhanced reconnection
12:29 Static SSR
23:29 Authentication state
29:20 Constructor Injection
35:21 Hybrid + Web template

&amp;#128279; Resources:
Docs: https://docs.microsoft.com/aspnet/core/blazor/
Blog: https://devblogs.microsoft.com/aspnet/

#Blazor #dotNET #WebDev #CSharp #Programming</description>
      <author> (Devs School)</author>
      <guid>https://youtube.com/watch?v=H1c5NZM21Xk</guid>
      <pubDate>Tue, 10 Dec 2024 16:02:12 GMT</pubDate>
    </item>
    <item>
      <title>Overwatch and C# Web Development</title>
      <link>https://youtube.com/watch?v=00cK8iTGtW8</link>
      <description>Turn your videos into live streams with https://restream.io

Fritz is working on adding authentication to SharpSite https://github.com/FritzAndFriends/SharpSite</description>
      <author> (Fritz&amp;#39;s Tech Tips and Chatter)</author>
      <guid>https://youtube.com/watch?v=00cK8iTGtW8</guid>
      <pubDate>Tue, 10 Dec 2024 16:02:12 GMT</pubDate>
    </item>
    <item>
      <title>The Shepherd 1.0.0 released! — The GNU Shepherd</title>
      <link>https://www.gnu.org/software/shepherd/news/2024/12/the-shepherd-1.0.0-released/</link>
      <description>Finally, twenty-one years after its
inception
(twenty-one!), the Shepherd leaves ZeroVer
territory to enter a glorious 1.0 era.  This 1.0.0 release is published
today because we think Shepherd has become a solid tool, meeting user
experience standards one has come to expect since systemd changed the
game of free init systems and service managers alike.  It’s also a major
milestone for Guix, which has been relying on
the Shepherd from a time when doing so counted as dogfooding.</description>
      <author> ()</author>
      <guid>https://www.gnu.org/software/shepherd/news/2024/12/the-shepherd-1.0.0-released/</guid>
      <pubDate>Tue, 10 Dec 2024 14:01:44 GMT</pubDate>
    </item>
    <item>
      <title>5 Apps for 2025 that I’ve Been Using Lately</title>
      <link>https://youtube.com/watch?v=QpdtvXPw500</link>
      <description>Let me share with you 5 applications I&amp;#39;ve been using as a Developer, and I will definitely keep using them in 2025.

⏲️ CHAPTERS
00:00 Intro
00:13 App 1
03:42 App 2
06:38 App 3
09:34 App 4
11:20 App 5</description>
      <author> (Gui Ferreira)</author>
      <guid>https://youtube.com/watch?v=QpdtvXPw500</guid>
      <pubDate>Tue, 10 Dec 2024 14:01:41 GMT</pubDate>
    </item>
    <item>
      <title>The Right Way To Build Async APIs in ASP.NET Core</title>
      <link>https://youtube.com/watch?v=piESqhWbAFQ</link>
      <description>Want to master Clean Architecture? Go here: https://bit.ly/3PupkOJ
Want to unlock Modular Monoliths? Go here: https://bit.ly/3SXlzSt
Join a community of 1000+ .NET developers: https://www.patreon.com/milanjovanovic

Learn how to properly implement asynchronous APIs in ASP.NET Core to maximize performance and efficiency. This video covers best practices for async APIs, common pitfalls to avoid, and proven techniques to make your APIs faster and more scalable. We&amp;#39;ll dive into real-world examples demonstrating how to structure your async code correctly, with practical tips for handling concurrent requests and managing server resources effectively. Whether you&amp;#39;re new to async programming or looking to optimize your existing APIs, you&amp;#39;ll learn the right way to implement asynchronous operations in your ASP.NET Core APIs.

Building Async APIs in ASP.NET Core - The Right Way
https://www.milanjovanovic.tech/blog/building-async-apis-in-aspnetcore-the-right-way

Check out my courses:
https://www.milanjovanovic.tech/courses

Read my Blog here:
https://www.milanjovanovic.tech/blog

Join my weekly .NET newsletter:
https://www.milanjovanovic.tech

Chapters
0:00 The Problem
3:05 Background processing delay
4:25 Async APIs with Channel
7:55 Tracking background job status
8:51 Building Async APIs
10:54 Adding the status endpoint
13:43 Creating the background worker
16:38 Testing our Async API</description>
      <author> (Milan Jovanović)</author>
      <guid>https://youtube.com/watch?v=piESqhWbAFQ</guid>
      <pubDate>Tue, 10 Dec 2024 14:01:41 GMT</pubDate>
    </item>
    <item>
      <title>.NET 9 &amp;#128640; &amp;#128165; - EF Core Soft Delete</title>
      <link>https://youtube.com/watch?v=Uk6iOl_0aI8</link>
      <description>In this video we will discuss the concept of soft delete and how we can implement it in our .NET Web Api

Support me on Patreon to access the source code:
https://www.patreon.com/mohamadlawand

Let us connect:
&amp;#127757;  My website  - https://mohamadlawand.com
&amp;#128248;  Instagram - https://www.instagram.com/mohamadlawand087/
&amp;#128038;  Twitter - https://twitter.com/moe23
♯ Github - https://github.com/mohamadlawand087
&amp;#127915; LinkedIn - https://www.linkedin.com/in/mlawand
&amp;#128165; LinkTree - https://linktr.ee/mohamadlawand

Gear I use  (affiliate link): https://amzn.to/3EbT8Jw

Support my work:
https://www.patreon.com/mohamadlawand
https://www.buymeacoffee.com/mohamadlawand

Hire Me:
https://transactions.sendowl.com/products/78999951/625477F1/view

WHO AM I:
I&amp;#39;m Mohamad, an Enterprise Architect working in Manchester, UK. I make videos about web, cloud, desktop and mobile development.

GET IN TOUCH:
If you’d like to talk, I’d love to hear from you. Tweeting @moe23 directly will be the quickest way to get a response, but if your question is very long, feel free to email me at hello@mohamadlawand.com.

#dotnet  #efcore   #optimisation</description>
      <author> (Mohamad Lawand)</author>
      <guid>https://youtube.com/watch?v=Uk6iOl_0aI8</guid>
      <pubDate>Tue, 10 Dec 2024 13:01:38 GMT</pubDate>
    </item>
    <item>
      <title>Using the YamlDotNet source generator for Native AOT</title>
      <link>https://andrewlock.net/using-the-yamldotnet-source-generator-for-native-aot/</link>
      <description>In this post I show how you can use the YamlDotNet source generator to do strongly-typed serialization and deserialization, even in Native AOT apps</description>
      <author> ()</author>
      <guid>https://andrewlock.net/using-the-yamldotnet-source-generator-for-native-aot/</guid>
      <pubDate>Tue, 10 Dec 2024 12:01:39 GMT</pubDate>
    </item>
    <item>
      <title>Tree Calculus</title>
      <link>https://treecalcul.us/</link>
      <description>One operator. Trivial semantics. Turing complete. Intensional.</description>
      <author> ()</author>
      <guid>https://treecalcul.us/</guid>
      <pubDate>Tue, 10 Dec 2024 12:01:39 GMT</pubDate>
    </item>
    <item>
      <title>Execution Context Management with AsyncLocal and ThreadLocal in .NET Core</title>
      <link>https://goatreview.com/execution-context-asynclocal-threadlocal-dotnet/</link>
      <description>Introduction


In modern distributed .NET applications, managing context across execution boundaries is a critical architectural concern. While both AsyncLocal&amp;lt;T&amp;gt; and ThreadLocal&amp;lt;T&amp;gt; provide mechanisms for maintaining contextual data, their implementations and use cases differ significantly in ways that impact system architecture, performance, and maintainability. This comprehensive guide explores both</description>
      <author> ()</author>
      <guid>https://goatreview.com/execution-context-asynclocal-threadlocal-dotnet/</guid>
      <pubDate>Tue, 10 Dec 2024 11:01:43 GMT</pubDate>
    </item>
    <item>
      <title>ChatGPT vs. Advent of Code 2024 Day 10: Hoof It</title>
      <link>https://youtube.com/watch?v=b9wfv6bg_oE</link>
      <description>AIs can&amp;#39;t hike, but they can code. Can ChatGPT code its way through trailheads in day 10 of Advent of Code?

#openai #chatgpt #python #ai #codeinterpreter #adventofcode 

Contents:
0:00 - Intro
0:10 - Part 1
2:00 - Part 2
5:05 - Summary</description>
      <author> (Martin Zikmund)</author>
      <guid>https://youtube.com/watch?v=b9wfv6bg_oE</guid>
      <pubDate>Tue, 10 Dec 2024 11:01:38 GMT</pubDate>
    </item>
    <item>
      <title>I can now run a GPT-4 class model on my laptop</title>
      <link>https://simonwillison.net/2024/Dec/9/llama-33-70b/</link>
      <description>Meta’s new Llama 3.3 70B is a genuinely GPT-4 class Large Language Model that runs on my laptop. Just 20 months ago I was amazed to see something that felt …</description>
      <author> ()</author>
      <guid>https://simonwillison.net/2024/Dec/9/llama-33-70b/</guid>
      <pubDate>Tue, 10 Dec 2024 09:01:42 GMT</pubDate>
    </item>
    <item>
      <title>[Monkey Conf 2024] Debugging memory leaks in .NET MAUI</title>
      <link>https://youtube.com/watch?v=4XScV4HkU0U</link>
      <description>During your career, you have probably had to deal with memory leaks, and you likely didn&amp;#39;t find the best references to help you with this task. In this hands-on presentation, I will show you how to debug and fix a memory leak.

Become a channel member to enjoy benefits and access more content.
https://www.youtube.com/channel/UCKnuLHRlK_zhrpaTWvNOdMA/join</description>
      <author> (Javier Su&amp;#225;rez)</author>
      <guid>https://youtube.com/watch?v=4XScV4HkU0U</guid>
      <pubDate>Tue, 10 Dec 2024 09:01:32 GMT</pubDate>
    </item>
    <item>
      <title>Structured 3D Latents for Scalable and Versatile 3D Generation</title>
      <link>https://trellis3d.github.io/</link>
      <description>Structured 3D Latents
                for Scalable and Versatile 3D Generation</description>
      <author> ()</author>
      <guid>https://trellis3d.github.io/</guid>
      <pubDate>Tue, 10 Dec 2024 08:01:34 GMT</pubDate>
    </item>
    <item>
      <title>Memory-safe PNG decoders now vastly outperform C PNG libraries</title>
      <link>https://old.reddit.com/r/rust/comments/1ha7uyi/memorysafe_png_decoders_now_vastly_outperform_c/</link>
      <description>**TL;DR:** Memory-safe implementations of PNG ([png](https://crates.io/crates/png), [zune-png](https://crates.io/crates/zune-png),...</description>
      <author> ()</author>
      <guid>https://old.reddit.com/r/rust/comments/1ha7uyi/memorysafe_png_decoders_now_vastly_outperform_c/</guid>
      <pubDate>Tue, 10 Dec 2024 06:01:47 GMT</pubDate>
    </item>
    <item>
      <title>Acquired</title>
      <link>https://podcasts.apple.com/us/podcast/acquired/id1050462261</link>
      <description>Technology Podcast &amp;#183; 15 Seasons &amp;#183; Updated Biweekly</description>
      <author> ()</author>
      <guid>https://podcasts.apple.com/us/podcast/acquired/id1050462261</guid>
      <pubDate>Tue, 10 Dec 2024 06:01:46 GMT</pubDate>
    </item>
    <item>
      <title>Making Tea</title>
      <link>https://xkcd.com/3022/</link>
      <description></description>
      <author> ()</author>
      <guid>https://xkcd.com/3022/</guid>
      <pubDate>Tue, 10 Dec 2024 05:01:37 GMT</pubDate>
    </item>
    <item>
      <title>Refracting Pixels | Froyok - L&amp;#233;na Piquet</title>
      <link>https://www.froyok.fr/blog/2024-12-refraction/</link>
      <description>What started this article is that I wanted to support refraction in my realtime game engine (which you can learn more about here). I didn&amp;#39;t find a lot of clear documentation on the subject, so I went ...</description>
      <author> ()</author>
      <guid>https://www.froyok.fr/blog/2024-12-refraction/</guid>
      <pubDate>Tue, 10 Dec 2024 01:02:17 GMT</pubDate>
    </item>
    <item>
      <title>Intel on the Brink of Death | Culture Rot, Product Focus Flawed, Foundry Must Survive</title>
      <link>https://semianalysis.com/2024/12/09/intel-on-the-brink-of-death/</link>
      <description>Intel’s board is incompetent and its horrible decisions over the decades are going to push it towards death. The decision to fire Pat Gelsinger, put in charge a CFO + career sales and marketing lea…</description>
      <author> ()</author>
      <guid>https://semianalysis.com/2024/12/09/intel-on-the-brink-of-death/</guid>
      <pubDate>Tue, 10 Dec 2024 01:02:16 GMT</pubDate>
    </item>
    <item>
      <title>November 2024 Earnings</title>
      <link>https://www.tropianhs.com/diary/2024/12/03/november-report.html</link>
      <description>The video of this post is here

</description>
      <author> ()</author>
      <guid>https://www.tropianhs.com/diary/2024/12/03/november-report.html</guid>
      <pubDate>Tue, 10 Dec 2024 01:02:15 GMT</pubDate>
    </item>
    <item>
      <title>Say What You Mean… Sometimes – Dylan Castillo</title>
      <link>https://dylancastillo.co/posts/say-what-you-mean-sometimes.html</link>
      <description></description>
      <author> ()</author>
      <guid>https://dylancastillo.co/posts/say-what-you-mean-sometimes.html</guid>
      <pubDate>Tue, 10 Dec 2024 01:02:15 GMT</pubDate>
    </item>
    <item>
      <title>Homemade incremental programming, part 1: how and why to abolish update code, and what React has to do with anything</title>
      <link>https://tmewett.com/homemade-incremental-pt-1/</link>
      <description>This is a series about a research rabbit hole I&amp;#39;ve been going down over the last year or so, about a kind of incremental programming approach for games, UIs, and more [...]</description>
      <author> ()</author>
      <guid>https://tmewett.com/homemade-incremental-pt-1/</guid>
      <pubDate>Tue, 10 Dec 2024 01:02:14 GMT</pubDate>
    </item>
    <item>
      <title>Becoming (more) Afraid To Post Online</title>
      <link>https://www.alanwsmith.com/en/2p/wv/cm/si/</link>
      <description>a post from alan w. smith</description>
      <author> ()</author>
      <guid>https://www.alanwsmith.com/en/2p/wv/cm/si/</guid>
      <pubDate>Tue, 10 Dec 2024 01:02:13 GMT</pubDate>
    </item>
    <item>
      <title>Parsing HTML with PHP 8.4</title>
      <link>https://blog.keyvan.net/p/parsing-html-with-php-84</link>
      <description>A look at the new HTML5 parser, CSS selector support, and new DOM classes</description>
      <author> ()</author>
      <guid>https://blog.keyvan.net/p/parsing-html-with-php-84</guid>
      <pubDate>Tue, 10 Dec 2024 01:02:11 GMT</pubDate>
    </item>
    <item>
      <title>The Pi 500 is much faster, but lacks M.2</title>
      <link>https://www.jeffgeerling.com/blog/2024/pi-500-much-faster-lacks-m2</link>
      <description>Raspberry Pi this morning launched the Pi 500 and a new 15.6&amp;quot; Pi Monitor, for $90 and $100, respectively.</description>
      <author> ()</author>
      <guid>https://www.jeffgeerling.com/blog/2024/pi-500-much-faster-lacks-m2</guid>
      <pubDate>Tue, 10 Dec 2024 01:02:11 GMT</pubDate>
    </item>
    <item>
      <title>Modern Staff Engineering at a Startup ~ chadxz.dev</title>
      <link>https://chadxz.dev/startup/</link>
      <description>Exploring how startup culture shapes the application of DevOps principles as well as Staff and Platform Engineering techniques.
</description>
      <author> ()</author>
      <guid>https://chadxz.dev/startup/</guid>
      <pubDate>Tue, 10 Dec 2024 01:02:08 GMT</pubDate>
    </item>
    <item>
      <title>Using vectorization in C# to boost performance</title>
      <link>https://btburnett.com/csharp/2024/12/09/using-vectorization-in-csharp-to-boost-performance</link>
      <description>This blog is one of The December 9th entries on the 2024 C# Advent Calendar. Thanks for having me again!</description>
      <author> ()</author>
      <guid>https://btburnett.com/csharp/2024/12/09/using-vectorization-in-csharp-to-boost-performance</guid>
      <pubDate>Tue, 10 Dec 2024 01:02:07 GMT</pubDate>
    </item>
    <item>
      <title>A letter to open-source maintainers</title>
      <link>https://xuanwo.io/2024/10-a-letter-to-open-source-maintainers/</link>
      <description>An infrastructure engineer, focused on distributed storage system</description>
      <author> ()</author>
      <guid>https://xuanwo.io/2024/10-a-letter-to-open-source-maintainers/</guid>
      <pubDate>Tue, 10 Dec 2024 01:02:06 GMT</pubDate>
    </item>
    <item>
      <title>Ways to use torch.compile : ezyang’s blog</title>
      <link>http://blog.ezyang.com/2024/11/ways-to-use-torch-compile/</link>
      <description>On the surface, the value proposition of torch.compile is simple: compile your PyTorch model and it runs X% faster.  But after having spent a lot of time helping users from all walks of life use torch.compile, I have found that actually understanding how this value proposition applies to your situation can be quite subtle!  In this post, I want to walk through the ways to use torch.compile, and within these use cases, what works and what doesn&amp;#39;t. By the way, some of these gaps are either served by export, or by missing features we are actively working on, those will be some other posts!</description>
      <author> ()</author>
      <guid>http://blog.ezyang.com/2024/11/ways-to-use-torch-compile/</guid>
      <pubDate>Tue, 10 Dec 2024 01:02:06 GMT</pubDate>
    </item>
    <item>
      <title>Regular People Are Becoming Machine Learning Engineers</title>
      <link>https://blog.kasperjunge.com/regular-people-are-becoming-nlp-engineers</link>
      <description>My colleague came by my desk last weekend and mentioned that he’d seen ChatGPT being used to detect fraud in invoice images. Apparently, it could identify small inconsistencies that suggested...</description>
      <author> ()</author>
      <guid>https://blog.kasperjunge.com/regular-people-are-becoming-nlp-engineers</guid>
      <pubDate>Tue, 10 Dec 2024 01:02:06 GMT</pubDate>
    </item>
    <item>
      <title>How Does Ollama&amp;#39;s Structured Outputs Work?</title>
      <link>https://blog.danielclayton.co.uk/posts/ollama-structured-outputs/</link>
      <description>Digging into what Ollama is doing under the hood to produce structured outputs</description>
      <author> ()</author>
      <guid>https://blog.danielclayton.co.uk/posts/ollama-structured-outputs/</guid>
      <pubDate>Tue, 10 Dec 2024 01:02:06 GMT</pubDate>
    </item>
    <item>
      <title>All that is SOLID melts into air…</title>
      <link>https://blog.tietokone.io/all-that-is-SOLID/</link>
      <description>Every software developer (hopefully) strives to write code which is robust and maintainable. We’ve all worked on projects where a simple code-change broke a million seemingly unconnected features, or random bugs kept popping up in production as soon as the system was used by more than three people, or vast swathes of the codebase were deemed untouchable because nobody could understand how they worked. Over the past three decades, a number of architectural principles, design patterns, cure-alls and get-rich-quick schemes have emerged, promising a life free of production bugs and technical debt.</description>
      <author> ()</author>
      <guid>https://blog.tietokone.io/all-that-is-SOLID/</guid>
      <pubDate>Tue, 10 Dec 2024 01:02:06 GMT</pubDate>
    </item>
    <item>
      <title>VisGraphVar: A Benchmark Generator for Assessing Variability in Graph Analysis Using Large Vision-Language Models</title>
      <link>https://camilochs.github.io/visgraphvar-website/</link>
      <description>A Benchmark Generator for Assessing Variability in Graph Analysis Using Large Vision-Language Models</description>
      <author> ()</author>
      <guid>https://camilochs.github.io/visgraphvar-website/</guid>
      <pubDate>Tue, 10 Dec 2024 01:02:06 GMT</pubDate>
    </item>
    <item>
      <title>How to think - Kashif</title>
      <link>https://yakashif.com/how-to-think</link>
      <description>Just like being fit is a lifestyle decision, thinking better is also a lifestyle decision. It&amp;#39;s hard work but gets easy over time. The good news is that the returns are exponential, not linear.</description>
      <author> ()</author>
      <guid>https://yakashif.com/how-to-think</guid>
      <pubDate>Tue, 10 Dec 2024 01:02:06 GMT</pubDate>
    </item>
    <item>
      <title>Trust = Intent + Expertise: On Founder Fit</title>
      <link>https://rosslazer.com/posts/founder-fit/</link>
      <description>Startups run on trust, and founders need intent and expertise to gain it.</description>
      <author> ()</author>
      <guid>https://rosslazer.com/posts/founder-fit/</guid>
      <pubDate>Tue, 10 Dec 2024 01:02:06 GMT</pubDate>
    </item>
    <item>
      <title>My Gripes With Tech Talks</title>
      <link>https://gpfault.net/posts/gripes-with-presos.txt.html</link>
      <description>I often go to conferences (have been to three this year), and watch a lot of
 technical presentations on YouTube. In other words, I watch a lot of people
 engage in public speaking. It brings me no joy to say that many people doing
 these talks (at conferences or in other contexts), struggle with giving a
 proper technical presentation.</description>
      <author> ()</author>
      <guid>https://gpfault.net/posts/gripes-with-presos.txt.html</guid>
      <pubDate>Tue, 10 Dec 2024 01:02:06 GMT</pubDate>
    </item>
    <item>
      <title>Is ChatGPT Today Like Wikipedia of the Past?</title>
      <link>https://matanabudy.com/is-chatgpt-today-like-wikipedia-of-the-past/</link>
      <description>When I was in third grade, I was given an essay to write. I don’t remember what it was about, but I do remember the teacher explicitly saying, “Do not use Wi...</description>
      <author> ()</author>
      <guid>https://matanabudy.com/is-chatgpt-today-like-wikipedia-of-the-past/</guid>
      <pubDate>Tue, 10 Dec 2024 01:02:06 GMT</pubDate>
    </item>
    <item>
      <title>Drivers Are Getting Sent to Africa</title>
      <link>https://chebykin.org/posts/drivers-are-getting-sent-to-africa</link>
      <description>Ivan Chebykin</description>
      <author> ()</author>
      <guid>https://chebykin.org/posts/drivers-are-getting-sent-to-africa</guid>
      <pubDate>Tue, 10 Dec 2024 01:02:06 GMT</pubDate>
    </item>
    <item>
      <title>Use of PipelinePolicies in Azure.AI.OpenAI.AzureOpenAIClient</title>
      <link>https://jaliyaudagedara.blogspot.com/2024/12/use-of-pipelinepolicies-in.html</link>
      <description>.NET, ASP.NET Core, Visual Studio, Azure, Jaliya Udagedara</description>
      <author> ()</author>
      <guid>https://jaliyaudagedara.blogspot.com/2024/12/use-of-pipelinepolicies-in.html</guid>
      <pubDate>Mon, 09 Dec 2024 21:02:49 GMT</pubDate>
    </item>
  </channel>
</rss>