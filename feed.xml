<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>How do you do, fellow web developers? A growing disconnect.</title>
      <link>https://rakhim.exotext.com/web-developers-a-growing-disconnect</link>
      <description>How do you do, fellow web developers? A growing disconnect. | exotext</description>
      <author> ()</author>
      <guid>https://rakhim.exotext.com/web-developers-a-growing-disconnect</guid>
      <pubDate>Thu, 19 Dec 2024 22:01:47 GMT</pubDate>
    </item>
    <item>
      <title>Optimizing Your Repository for Speed and Efficiency</title>
      <link>https://dev.to/this-is-learning/optimizing-your-repository-for-speed-and-efficiency-5co2</link>
      <description>In the last few weeks one of my repository started to be very slow and bloated. I try to commit all...</description>
      <author> ()</author>
      <guid>https://dev.to/this-is-learning/optimizing-your-repository-for-speed-and-efficiency-5co2</guid>
      <pubDate>Thu, 19 Dec 2024 21:01:45 GMT</pubDate>
    </item>
    <item>
      <title>ChatGPT vs. Advent of Code 2024 Day 16: Reindeer Maze</title>
      <link>https://youtube.com/watch?v=3ruBcpbJPH0</link>
      <description>ChatGPT participates in Reindeer Olympics, let&amp;#39;s see if it has the required powers!

#openai #chatgpt #python #ai #codeinterpreter #adventofcode 

Contents:
0:00 - Intro
0:05 - Part 1
2:08 - Part 2
3:25 - Summary</description>
      <author> (Martin Zikmund)</author>
      <guid>https://youtube.com/watch?v=3ruBcpbJPH0</guid>
      <pubDate>Thu, 19 Dec 2024 21:01:36 GMT</pubDate>
    </item>
    <item>
      <title>GitHub Plagued by 4.5 Million Fake Stars Problem Misleading Users</title>
      <link>https://cyberinsider.com/github-plagued-by-4-5-million-fake-stars-problem-misleading-users/</link>
      <description>GitHub faces a growing issue of fake star campaigns, which artificially inflate repository popularity metrics and introduce risks to users.</description>
      <author> ()</author>
      <guid>https://cyberinsider.com/github-plagued-by-4-5-million-fake-stars-problem-misleading-users/</guid>
      <pubDate>Thu, 19 Dec 2024 19:01:47 GMT</pubDate>
    </item>
    <item>
      <title>Managing Complexity in Modern Software Systems</title>
      <link>https://youtube.com/watch?v=spkpxteJKu8</link>
      <description>Congratulations on becoming a developer for Plant-Based Pizza!

I&amp;#39;m James Eastham, here to guide you through a modern approach to software architecture and systems design, emphasizing simplicity, evolvability, and portability.

You&amp;#39;ll learn about essential vs. accidental complexity, the core components of modern software systems, and how to minimize complexity.

Watch as we explore the evolution from a monolithic application to a microservices architecture, including caching, messaging, orchestration, and observability integration.

00:00 Welcome to Plant-Based Pizza
00:59 Understanding Essential and Accidental Complexity
02:02 Building Blocks of Modern Software Systems
02:25 Synchronous and Asynchronous Processes
04:28 Minimizing Accidental Complexity
05:26 Evolution of Plant-Based Pizza&amp;#39;s Architecture
07:26 Transition to Microservices
08:05 Core Components of Modern Software Architecture
10:52 Conclusion and Next Steps

PlantBasedPizza Codebase: https://github.com/jeastham1993/PlantBasedPizza

Web: https://jameseastham.co.uk
LinkedIn: https://www.linkedin.com/in/james-eastham/
Bluesky: https://bsky.app/profile/jameseastham.co.uk</description>
      <author> (James Eastham)</author>
      <guid>https://youtube.com/watch?v=spkpxteJKu8</guid>
      <pubDate>Thu, 19 Dec 2024 18:01:41 GMT</pubDate>
    </item>
    <item>
      <title>What&amp;#39;s next: the Fluent UI Blazor library v5</title>
      <link>https://baaijte.net/blog/microsoft-fluentui-aspnetcore.components-5/</link>
      <description>If you&amp;#39;re curious on what we are doing for the next major version of the library, read on...</description>
      <author> ()</author>
      <guid>https://baaijte.net/blog/microsoft-fluentui-aspnetcore.components-5/</guid>
      <pubDate>Thu, 19 Dec 2024 16:01:50 GMT</pubDate>
    </item>
    <item>
      <title>Interactive C# WebDev</title>
      <link>https://youtube.com/watch?v=LEJnHFPNh8U</link>
      <description>Turn your videos into live streams with https://restream.io

Fritz is working on an open source application that YOU can get the source code to and follow along.  Check out SharpSite https://github.com/FritzAndFriends/SharpSite</description>
      <author> (Fritz&amp;#39;s Tech Tips and Chatter)</author>
      <guid>https://youtube.com/watch?v=LEJnHFPNh8U</guid>
      <pubDate>Thu, 19 Dec 2024 16:01:46 GMT</pubDate>
    </item>
    <item>
      <title>fish-shell 4.0b1, now in Rust</title>
      <link>https://fishshell.com/blog/fish-4b/</link>
      <description>A smart and user-friendly command line shell</description>
      <author> ()</author>
      <guid>https://fishshell.com/blog/fish-4b/</guid>
      <pubDate>Thu, 19 Dec 2024 15:01:09 GMT</pubDate>
    </item>
    <item>
      <title>What Did Ada Lovelace&amp;#39;s Program Actually Do?</title>
      <link>https://twobithistory.org/2018/08/18/ada-lovelace-note-g.html</link>
      <description>In 1843, Ada Lovelace published the first nontrivial program. How did it work?
</description>
      <author> ()</author>
      <guid>https://twobithistory.org/2018/08/18/ada-lovelace-note-g.html</guid>
      <pubDate>Thu, 19 Dec 2024 09:01:35 GMT</pubDate>
    </item>
    <item>
      <title>Factory Design Pattern in C#</title>
      <link>https://youtube.com/watch?v=urvoINv_94Q</link>
      <description>Unlock the power of the Factory Design Pattern in C# with this comprehensive tutorial! Learn how to implement flexible object creation and enhance your software architecture. Perfect for C# developers looking to master design patterns and improve code maintainability. In this video, you&amp;#39;ll discover: 

• The core concepts of the Factory Design Pattern
• Step-by-step implementation in C# with real-world examples
• How to create objects without exposing the creation logic
• Best practices for using Factory Pattern in your projects 

Whether you&amp;#39;re a beginner or an experienced developer, this guide will help you leverage the Factory Pattern to build more robust and scalable C# applications. Boost your skills in object-oriented programming, design patterns, and C# development.

Key Benefits of the Factory Pattern:
• Encapsulation: It hides the complexities of object creation from the client code
• Flexibility: Allows for easy addition of new product types without modifying existing code
• Improved maintainability: Centralizes object creation logic, making it easier to manage and update

Enhance your C# programming skills and learn how to create more flexible and maintainable code with the Factory Design Pattern. Perfect for developers looking to level up their software design expertise. Don&amp;#39;t miss out on this opportunity to master a crucial design pattern in C#. Watch now and take your coding skills to the next level!

Linkedin: https://www.linkedin.com/in/remigiusz-zalewski

#csharp #dotnet #aspnetcore #programming</description>
      <author> (Remigiusz Zalewski)</author>
      <guid>https://youtube.com/watch?v=urvoINv_94Q</guid>
      <pubDate>Thu, 19 Dec 2024 07:01:51 GMT</pubDate>
    </item>
    <item>
      <title>GitHub - pwr-Solaar/Solaar: Linux device manager for Logitech devices</title>
      <link>https://github.com/pwr-Solaar/Solaar</link>
      <description>Linux device manager for Logitech devices. Contribute to pwr-Solaar/Solaar development by creating an account on GitHub.</description>
      <author> ()</author>
      <guid>https://github.com/pwr-Solaar/Solaar</guid>
      <pubDate>Thu, 19 Dec 2024 03:01:58 GMT</pubDate>
    </item>
    <item>
      <title>Go&amp;#39;s Weird Little Iterators &amp;#183; mcyoung</title>
      <link>https://mcyoung.xyz/2024/12/16/rangefuncs/</link>
      <description>A second post on Go silliness (Miguel, aren’t you a C++ programmer?): in 1.23, Go finally added custom iterators. Now, back when I was at Google and involved in the Go compiler as “the annoying Rust guy who gets lunch with us”, there were proposals suggesting adding something like this, implemented as either an interface or a func:</description>
      <author> ()</author>
      <guid>https://mcyoung.xyz/2024/12/16/rangefuncs/</guid>
      <pubDate>Thu, 19 Dec 2024 02:01:55 GMT</pubDate>
    </item>
  </channel>
</rss>