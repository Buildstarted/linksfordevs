<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>Mastering DataBinding in Uno Platform for Figma Plugin | Uno Tech Bites</title>
      <link>https://youtube.com/watch?v=Xk5K8NgnF_8</link>
      <description>Discover the role of the DataContext tab in the Uno Figma Plugin. We&amp;#39;ll guide you step-by-step on how to set up and utilize DataBinding, transforming how you...</description>
      <author> (Uno Platform
  
  
  
    Uno Platform
  






    •)</author>
      <guid>https://youtube.com/watch?v=Xk5K8NgnF_8</guid>
      <pubDate>Mon, 26 Feb 2024 21:03:33 GMT</pubDate>
    </item>
    <item>
      <title>The FAST and the Fluent: A Blazor story - .NET Blog</title>
      <link>https://devblogs.microsoft.com/dotnet/the-fast-and-the-fluent-a-blazor-story/</link>
      <description>Learn about the origin of the building blocks of the Fluent UI Blazor library. We&amp;#39;ll talk about FAST, Web Components, Fluent Design, and more.</description>
      <author> (Vincent Baaij)</author>
      <guid>https://devblogs.microsoft.com/dotnet/the-fast-and-the-fluent-a-blazor-story/</guid>
      <pubDate>Mon, 26 Feb 2024 21:03:31 GMT</pubDate>
    </item>
    <item>
      <title>About Ideas Now | Search 1000s of personal sites</title>
      <link>https://aboutideasnow.com/</link>
      <description>Find people to collaborate with by searching through the /about, /ideas and /now pages of 1000s of personal sites</description>
      <author> ()</author>
      <guid>https://aboutideasnow.com/</guid>
      <pubDate>Mon, 26 Feb 2024 21:03:31 GMT</pubDate>
    </item>
    <item>
      <title>Learn C# with CSharpFritz - Get Started with Blazor in .NET 8</title>
      <link>https://youtube.com/watch?v=sWTpxFcHbfY</link>
      <description>Fritz is back with a new series of Learn C# with CSharpFritz.  This time we&amp;#39;re looking at the new version of Blazor that ships with .NET 8.  Let&amp;#39;s get starte...</description>
      <author> (dotnet
  
  
  
    dotnet
  






    •)</author>
      <guid>https://youtube.com/watch?v=sWTpxFcHbfY</guid>
      <pubDate>Mon, 26 Feb 2024 20:04:06 GMT</pubDate>
    </item>
    <item>
      <title>How to find the AWS Account ID of any S3 Bucket</title>
      <link>https://tracebit.com/blog/2024/02/finding-aws-account-id-of-any-s3-bucket/</link>
      <description>A technique to find the Account ID of a private S3 bucket.</description>
      <author> (Sam Cox)</author>
      <guid>https://tracebit.com/blog/2024/02/finding-aws-account-id-of-any-s3-bucket/</guid>
      <pubDate>Mon, 26 Feb 2024 20:04:04 GMT</pubDate>
    </item>
    <item>
      <title>GitHub - zksecurity/zkBank: zkBank is the most secure banking system in the world, powered by ZK, gnark, and GKR!</title>
      <link>https://github.com/zksecurity/zkBank</link>
      <description>zkBank is the most secure banking system in the world, powered by ZK, gnark, and GKR! - zksecurity/zkBank</description>
      <author> (zksecurity)</author>
      <guid>https://github.com/zksecurity/zkBank</guid>
      <pubDate>Mon, 26 Feb 2024 20:04:04 GMT</pubDate>
    </item>
    <item>
      <title>2023’s Top 10 New Features for .NET in Visual Studio - Visual Studio Blog</title>
      <link>https://devblogs.microsoft.com/visualstudio/2023s-top-10-new-features-for-net-in-visual-studio/</link>
      <description>Discover the top 10 new Visual Studio features of 2023 for .NET developers. Enhance your development experience with these exciting updates.</description>
      <author> (Jason Chlus)</author>
      <guid>https://devblogs.microsoft.com/visualstudio/2023s-top-10-new-features-for-net-in-visual-studio/</guid>
      <pubDate>Mon, 26 Feb 2024 20:04:04 GMT</pubDate>
    </item>
    <item>
      <title>Delegated read and application write access to blob storage using ASP.NET Core with Entra ID authentication</title>
      <link>https://damienbod.com/2024/02/26/delegated-read-and-application-write-access-to-blob-storage-using-asp-net-core-with-entra-id-authentication/</link>
      <description>This article shows how an ASP.NET Core application can control the write access to an Azure blob storage container using an application app registration. Microsoft Entra ID is used to control the u…</description>
      <author> (damienbod)</author>
      <guid>https://damienbod.com/2024/02/26/delegated-read-and-application-write-access-to-blob-storage-using-asp-net-core-with-entra-id-authentication/</guid>
      <pubDate>Mon, 26 Feb 2024 20:04:04 GMT</pubDate>
    </item>
    <item>
      <title>Agile Cult</title>
      <link>https://milestones.dothub.cloud/blog/agile-1/</link>
      <description>The biggest harm for agile does not come from heretics, it comes from zealots.</description>
      <author> (Join the Dots BV)</author>
      <guid>https://milestones.dothub.cloud/blog/agile-1/</guid>
      <pubDate>Mon, 26 Feb 2024 20:04:04 GMT</pubDate>
    </item>
    <item>
      <title>Welcome | Superset</title>
      <link>https://superset.apache.org/</link>
      <description>Community website for Apache Superset™, a data visualization and data exploration platform</description>
      <author> ()</author>
      <guid>https://superset.apache.org/</guid>
      <pubDate>Mon, 26 Feb 2024 20:04:03 GMT</pubDate>
    </item>
    <item>
      <title>A C# LINQ one-liner to check if exactly one of a set of conditions is met - The Old New Thing</title>
      <link>https://devblogs.microsoft.com/oldnewthing/20240226-00/?p=109451</link>
      <description>Maybe not the most efficient, but it&amp;#39;s easy to write.</description>
      <author> (Raymond Chen)</author>
      <guid>https://devblogs.microsoft.com/oldnewthing/20240226-00/?p=109451</guid>
      <pubDate>Mon, 26 Feb 2024 19:03:53 GMT</pubDate>
    </item>
    <item>
      <title>Devops: Supercharging your mobile app CI/CD Pipeline with Bitbucket &amp;amp; Expo Application Services</title>
      <link>https://iwritecodesometimes.net/2024/02/26/devops-supercharging-your-mobile-app-ci-cd-pipeline-with-bitbucket-expo-application-services/</link>
      <description>I was tasked with optimizing our CI/CD flow on a recent project following months of incremental changes. We had started the product using Expo Application Services (EAS) and migrated to Azure, befo…</description>
      <author> (Published by Joe Meyer)</author>
      <guid>https://iwritecodesometimes.net/2024/02/26/devops-supercharging-your-mobile-app-ci-cd-pipeline-with-bitbucket-expo-application-services/</guid>
      <pubDate>Mon, 26 Feb 2024 18:02:33 GMT</pubDate>
    </item>
    <item>
      <title>Goodhart&amp;#39;s Law</title>
      <link>https://xkcd.com/2899/</link>
      <description></description>
      <author> (About)</author>
      <guid>https://xkcd.com/2899/</guid>
      <pubDate>Mon, 26 Feb 2024 18:02:32 GMT</pubDate>
    </item>
    <item>
      <title>Uno Platform Live Coding: Spacing in StackPanel</title>
      <link>https://youtube.com/watch?v=Ossz87yWRNg</link>
      <description>Because WinUI has fixed a very common problem with Spacing, let&amp;#39;s fix the same thing in Uno Platform!</description>
      <author> (Uno Platform
  
  
  
    Uno Platform
  






    •)</author>
      <guid>https://youtube.com/watch?v=Ossz87yWRNg</guid>
      <pubDate>Mon, 26 Feb 2024 17:03:40 GMT</pubDate>
    </item>
    <item>
      <title>Uno Platform Live Coding: Spacing in StackPanel</title>
      <link>https://youtube.com/watch?v=4zFew0WaKYI</link>
      <description>Because WinUI has fixed a very common problem with Spacing, let&amp;#39;s fix the same thing in Uno Platform!</description>
      <author> (Martin Zikmund
  
  
  
    Martin Zikmund
  






    •)</author>
      <guid>https://youtube.com/watch?v=4zFew0WaKYI</guid>
      <pubDate>Mon, 26 Feb 2024 17:03:40 GMT</pubDate>
    </item>
    <item>
      <title>C# Level Up! - How To Check Type Data with Reflection in C#</title>
      <link>https://youtube.com/watch?v=7xWaSuPn2I8</link>
      <description>If you&amp;#39;re just starting out programming in C#, you may not have even come across reflection yet! Reflection is a powerful tool that we have access to in C# w...</description>
      <author> (Dev Leader
  
  
  
    Dev Leader
  






    •)</author>
      <guid>https://youtube.com/watch?v=7xWaSuPn2I8</guid>
      <pubDate>Mon, 26 Feb 2024 16:05:31 GMT</pubDate>
    </item>
    <item>
      <title>Microsoft Mesh: Now available for creating innovative multi-user 3D experiences for the workplace - Microsoft 365 Developer Blog</title>
      <link>https://devblogs.microsoft.com/microsoft365dev/microsoft-mesh-now-available-for-creating-innovative-multi-user-3d-experiences-for-the-workplace/</link>
      <description>Microsoft Mesh is now generally available, providing a new 3D immersive experience for the workplace.</description>
      <author> (Tyler Adams)</author>
      <guid>https://devblogs.microsoft.com/microsoft365dev/microsoft-mesh-now-available-for-creating-innovative-multi-user-3d-experiences-for-the-workplace/</guid>
      <pubDate>Mon, 26 Feb 2024 16:05:29 GMT</pubDate>
    </item>
    <item>
      <title>Au Large</title>
      <link>https://mistral.ai/news/mistral-large/</link>
      <description>Mistral Large is our flagship model, with top-tier reasoning capacities. It is also available on Azure AI.</description>
      <author> (Mistral AI)</author>
      <guid>https://mistral.ai/news/mistral-large/</guid>
      <pubDate>Mon, 26 Feb 2024 16:05:29 GMT</pubDate>
    </item>
    <item>
      <title>Important Change in Prism Pre-Release 9.0.401-pre - ChecoX</title>
      <link>https://checox.com/important-change-in-prism-pre-release-9-0-401-pre/</link>
      <description>Hey Prism Users, I wanted to give you a heads-up about a significant change in the latest pre-release version of Prism (9.0.401-pre). In this release, Prism has renamed the method OnAppStart to CreateWindow. You might notice this change when updating your applications, and I’m here to explain why. Prism is taking steps to align itself […]</description>
      <author> (steven.checo.19)</author>
      <guid>https://checox.com/important-change-in-prism-pre-release-9-0-401-pre/</guid>
      <pubDate>Mon, 26 Feb 2024 15:04:21 GMT</pubDate>
    </item>
    <item>
      <title>Reflection in C#: 4 Code Simple But Powerful Code Examples</title>
      <link>https://www.devleader.ca/2024/02/26/reflection-in-c-4-code-simple-but-powerful-code-examples/</link>
      <description>Reflection in C# is powerful, but with great power comes great responsibility. Check out these 4 quick examples of reflection in C# to see it in action!</description>
      <author> (https://www.facebook.com/devleaderca)</author>
      <guid>https://www.devleader.ca/2024/02/26/reflection-in-c-4-code-simple-but-powerful-code-examples/</guid>
      <pubDate>Mon, 26 Feb 2024 14:03:29 GMT</pubDate>
    </item>
    <item>
      <title>This Is How To Mock Your Service for Unit Testing</title>
      <link>https://youtube.com/watch?v=DLgGqviaXyM</link>
      <description></description>
      <author> (Milan Jovanović
  
  
  
    Milan Jovanović
  






    •)</author>
      <guid>https://youtube.com/watch?v=DLgGqviaXyM</guid>
      <pubDate>Mon, 26 Feb 2024 13:03:56 GMT</pubDate>
    </item>
    <item>
      <title>Home Screen Advantage - Infrequently Noted</title>
      <link>https://infrequently.org/2024/02/home-screen-advantage/</link>
      <description>Cupertino&amp;#39;s attempt to scuttle Progressive Web Apps under cover of chaos is exactly what it appears to be: a shocking attempt to keep the web from ever emerging as a true threat to the App Store and blame regulators for Apple&amp;#39;s own malicious choices. By hook or by crook, Apple&amp;#39;s going to maintain its home screen advantage.</description>
      <author> ()</author>
      <guid>https://infrequently.org/2024/02/home-screen-advantage/</guid>
      <pubDate>Mon, 26 Feb 2024 13:03:54 GMT</pubDate>
    </item>
    <item>
      <title>Every Single PLINQ (Parallel LINQ) Extension Method with Examples | .NET &amp;amp; C# Essentials</title>
      <link>https://youtube.com/watch?v=E98p-sABx2I</link>
      <description>In today&amp;#39;s video we&amp;#39;re going to cover every single PLINQ (Parallel LINQ) extension method with examples.PLINQ is a powerful and can make your LINQ queries ex...</description>
      <author> (Amichai Mantinband
  
  
  
    Amichai Mantinband
  






    •)</author>
      <guid>https://youtube.com/watch?v=E98p-sABx2I</guid>
      <pubDate>Mon, 26 Feb 2024 12:04:21 GMT</pubDate>
    </item>
    <item>
      <title>Mastering Tuples&amp;#160;in .NET</title>
      <link>https://dotnettips.wordpress.com/2024/02/26/mastering-tuples-in-net/</link>
      <description>This article explores the use of tuples in .NET, highlighting their lightweight nature for grouping multiple values of different types. It discusses creating tuples with the Tuple class or shorthan…</description>
      <author> (Published by dotNetDave)</author>
      <guid>https://dotnettips.wordpress.com/2024/02/26/mastering-tuples-in-net/</guid>
      <pubDate>Mon, 26 Feb 2024 12:04:20 GMT</pubDate>
    </item>
    <item>
      <title>String Performance: Comparing Strings with Globalization</title>
      <link>https://dotnettips.wordpress.com/2024/02/26/string-performance-tips-for-microsoft-net-comparing-strings-with-globalization/</link>
      <description>In the String Performance chapter of the code performance book, the author demonstrates the usage of string.Compare() with StringComparison. Benchmark results are provided, along with a recommendat…</description>
      <author> (Published by dotNetDave)</author>
      <guid>https://dotnettips.wordpress.com/2024/02/26/string-performance-tips-for-microsoft-net-comparing-strings-with-globalization/</guid>
      <pubDate>Mon, 26 Feb 2024 11:03:11 GMT</pubDate>
    </item>
    <item>
      <title>How Does BlueSky Work?</title>
      <link>https://steveklabnik.com/writing/how-does-bluesky-work</link>
      <description>Home Blog</description>
      <author> ()</author>
      <guid>https://steveklabnik.com/writing/how-does-bluesky-work</guid>
      <pubDate>Mon, 26 Feb 2024 10:03:57 GMT</pubDate>
    </item>
    <item>
      <title>Update: Some applications are experiencing connectivity issues.</title>
      <link>https://status.changehealthcare.com/incidents/hqpjz25fn3n7</link>
      <description>Optum Solutions&amp;#39;s Status Page - Update: Some applications are experiencing connectivity issues..</description>
      <author> ()</author>
      <guid>https://status.changehealthcare.com/incidents/hqpjz25fn3n7</guid>
      <pubDate>Mon, 26 Feb 2024 08:03:58 GMT</pubDate>
    </item>
    <item>
      <title>Coroutines in C</title>
      <link>https://www.chiark.greenend.org.uk/~sgtatham/coroutines.html</link>
      <description>by Simon Tatham</description>
      <author> ()</author>
      <guid>https://www.chiark.greenend.org.uk/~sgtatham/coroutines.html</guid>
      <pubDate>Mon, 26 Feb 2024 08:03:57 GMT</pubDate>
    </item>
    <item>
      <title>nekoweb</title>
      <link>https://nekoweb.org/</link>
      <description>cuz internet is for the cats</description>
      <author> ()</author>
      <guid>https://nekoweb.org/</guid>
      <pubDate>Mon, 26 Feb 2024 07:04:16 GMT</pubDate>
    </item>
    <item>
      <title>Persisting the ASP.NET Core Data Protection Key Ring in Azure Key Vault – Tore Nestenius</title>
      <link>https://nestenius.se/2024/02/22/persisting-the-asp-net-core-data-protection-key-ring-in-azure-key-vault/</link>
      <description></description>
      <author> ()</author>
      <guid>https://nestenius.se/2024/02/22/persisting-the-asp-net-core-data-protection-key-ring-in-azure-key-vault/</guid>
      <pubDate>Mon, 26 Feb 2024 06:03:56 GMT</pubDate>
    </item>
    <item>
      <title>A Swag at the Critter Stack Road Map for Early 2024</title>
      <link>https://jeremydmiller.com/2024/02/24/a-swag-at-the-critter-stack-road-map-for-early-2024/</link>
      <description>From some notes that Oskar, Babu, and I banged out this past week, so keep your expectations for the quality of prose here! Notes in bold are my updates since this original document was banged out …</description>
      <author> (jeremydmiller)</author>
      <guid>https://jeremydmiller.com/2024/02/24/a-swag-at-the-critter-stack-road-map-for-early-2024/</guid>
      <pubDate>Mon, 26 Feb 2024 06:03:54 GMT</pubDate>
    </item>
    <item>
      <title>Blazor and .NET 8: How I Built a Fast and Flexible Website</title>
      <link>https://jeffreyfritz.com/2024/02/blazor-and-net-8-how-i-build-a-fast-and-flexible-website/</link>
      <description>I&amp;#39;ve been working on a new website for my series CSharp in the Cards. I built this website in a way that was easy to maintain, flexible and most importantly would respond quickly to requests from visitors.&amp;#160; I knew that Blazor with .NET 8 had a static server rendering feature and decided that I wanted to put it to the test. I recently published a new lesson to the website and included a web assembly component to allow for paging and filtering the list of lessons I was pleasantly surprised when I saw the performance dashboards on azure showing that it was handling requests and responding very very quickly.

[caption id=attachment_11620 align=aligncenter width=957] Response times of C# in the Cards after the new episode[/caption]

In this blog post, let&amp;#39;s talk about how I&amp;#39;ve optimized the website for speed and some of the finishing touches that you can put on your Blazor website to make it screaming fast running on a very small instance of Azure App Service.
Static Site Rendering - Its Blazor, but easier
With .NET 8 there&amp;#39;s a new render mode for Blazor and it&amp;#39;s called static site rendering or SSR. This new render mode ditches all interactivity that we previously had with Blazor server side and Blazor Web Assembly and instead favors delivering HTML and other content from the server to browsers in a high speed manner. We can bolt on other techniques that we know from SEO and website optimization to make this even faster and deliver a great experience for our visitors.



The About page is configured to output a bunch of HTML headers for the SEO folks and the social media pages to be able to present good information about the site.&amp;#160; Notice the headers that are added to satisfy the search engines:

 	a canonical link element that identifies where the page should be served from
 	a keywords meta element with information about what you can find here
 	a robots element that tells the search engine crawlers what they can do with the page
 	open graph and Twitter meta tags that instruct Twitter, Facebook, LinkedIn, Discord, and other sites about the images, titles, and description of the page

That&amp;#39;s fine... but there are two other features to notice:

 	This is a static page with no data being presented.&amp;#160; I&amp;#39;ve tagged it on line 2 with an attribute to allow output caching for 600 seconds (10 minutes).&amp;#160; This way the web server doesn&amp;#39;t have to render a new copy when its requested within 10 minutes of a previous request.
 	The images references are in webp format.&amp;#160; Let&amp;#39;s not overlook this super-compressed format for displaying high-quality images.&amp;#160; It might be 2024, but every bit we deliver over the network still matters for performance and the 600x600 portrait picture of myself on this page was compressed nicely:




Original
Compressed
# Difference


PNG
WEBP


450kb
30kb
-93.3%



93% savings...&amp;#160; that&amp;#39;s crazy good and means that your browser is not downloading an extra 420kb it doesn&amp;#39;t need.
Data is stored in static files on disk
For this simple website I don&amp;#39;t need a big fancy database like SQL Server or Postgres or even MySQL. For this site, I&amp;#39;ve stored all of the data in a simple CSV file on disk.&amp;#160; That means that I can edit the list of articles that are available and the metadata that goes with them by just opening the file in Excel and writing new content. This means that when it comes time for me to read data about the list of content that&amp;#39;s available I&amp;#39;m only reading from a very small file on disk and I don&amp;#39;t need to worry about any kind of contention. I also don&amp;#39;t need to worry about any service that&amp;#39;s running to deliver that data because it&amp;#39;s only coming out of a small file on disk that&amp;#39;s read only.



In this repository class I use the LinqToCSV library to open and read all of the content from the file into a Post object in the first method, GetPostsFromDisk.&amp;#160; Later, in a public method called GetPosts, you see where I use the in memory cache feature of ASP.NET Core to fetch data from the cache if its available or get it from disk and store it in cache for 30 minutes.&amp;#160; I could probably extend this timeout to several hours or even days since the website doesn&amp;#39;t get any new content without uploading a new version of the site.

The key here is that the meta data about the lessons on the site is loaded and kept in memory.&amp;#160; As of episode 9 of the series, the posts.csv file is only 1.4kb so I have no worries about loading its entire contents into memory.

Don&amp;#39;t forget, in order to add the MemoryCache to your ASP.NET Core application, you need to add this line to your site configuration in the Program.cs file:
builder.Services.AddMemoryCache();
I could add other cache options like Redis to the site, but with how small the data I want to cache is, I don&amp;#39;t need that sophistication at this point.
Pre-rendered Interactive Web Assembly Content is fast... REALLY fast
I wanted to add a subset of the lessons to the front page of the website so that you could see the latest six episodes in the video series and scroll back and forth to the other episodes. This should be an interactive component but I still wanted the home page to render quickly and have a fresh speedy response time as you page through and look at the various episodes that are available. The natural way to do this with Blazor is to build a web assembly component that will run on the client and render data as users click on the buttons for that collection of articles.

I wrote a simple pager component that would receive a collection of lesson data and render cards for each lesson.&amp;#160; Since we already know that the collection of lesson data is less than 2kb in size I don&amp;#39;t have a problem sending the entire collection of data into the browser to be rendered.


When I use the @rendermode attribute in this code, it forces the render mode to web assembly and ASP.NET will pre-render as well as cache a version of that component&amp;#39;s resultant HTML with the home page. After viewers download the Web Assembly content it will hand control over to web assembly and it will be a fully interactive component for them to be able to work with.

[caption id=attachment_11623 align=aligncenter width=300] Lesson Pager on the C# in the Cards website[/caption]

Blazor lets me build content to be rendered on the web and I get to choose where exactly it should run. It can run in the browser with web assembly it can run statically on the server it can run interactively on the server if I want it to. In this case running as web assembly gives a really nice usability effect that makes it easy for viewers to locate the content they want to watch.
Compress the Content from Kestrel
By default content that&amp;#39;s delivered from the asp.net kestrel web server is uncompressed. We can add broadly compression to the Web server and deliver content in a much smaller package to our visitors with just a few simple lines of code in program cs. This is something that I think everybody should do with their Internet facing websites:
#if (!DEBUG)
builder.Services.AddResponseCompression(options =&amp;gt;
{
options.EnableForHttps = true;
});
#endif
Add response compression figures the server so that it will deliver broadly compressed content. In this application I wrap it with the conditional debug detection because hot reload does not work with compression enabled.&amp;#160; When we deliver the website to the production web host it will be running in release mode and compression will be enabled.
Optimize all the JavaScript and CSS
CSS AND JavaScript can be minified and combined to reduce the number and size of downloads for this static content that makes our websites look good.&amp;#160; For this website I installed and used the WebOptimizer package available on NuGet.&amp;#160; My configuration for this looks like the following:



This script bundles the CSS files that were delivered with my website template and minifies the one JavaScript file that I manage with my project.
Set long cache-control headers for static content
The last thing that I did was set long duration cash dash control headers for static content like images CSS and Javascript files. This is easy to do with just a few more lines of optional configuration when I configure the static file feature inside of ASP.NET Core:


Summary
This website&amp;#39;s been easy for me to build because I can rely on my normal HTML skills and the plethora of HTML templates and CSS libraries out there to make my website look good. Blazor helps me to make it interactive render quickly and grow as I add more content to it. my cost in interaction with azure is minimal, as I&amp;#39;m using a Basic-2 instance of Azure App Service running Linux to deliver this site.</description>
      <author> (by Jeff)</author>
      <guid>https://jeffreyfritz.com/2024/02/blazor-and-net-8-how-i-build-a-fast-and-flexible-website/</guid>
      <pubDate>Mon, 26 Feb 2024 06:03:53 GMT</pubDate>
    </item>
    <item>
      <title>Armchair Architects: Large Language Models (LLMs) &amp;amp; Vector Databases</title>
      <link>https://techcommunity.microsoft.com/t5/azure-architecture-blog/armchair-architects-large-language-models-llms-amp-vector/ba-p/4066276</link>
      <description>
This blog will be focusing on large language models (LLMs) and vector databases&amp;#160; and their role in fueling AI, ML, and LLMs.</description>
      <author> (https://techcommunity.microsoft.com/t5/user/viewprofilepage/user-id/1718159)</author>
      <guid>https://techcommunity.microsoft.com/t5/azure-architecture-blog/armchair-architects-large-language-models-llms-amp-vector/ba-p/4066276</guid>
      <pubDate>Mon, 26 Feb 2024 06:03:53 GMT</pubDate>
    </item>
    <item>
      <title>GraphQL vs. REST—Which is Better for API Design?</title>
      <link>https://www.telerik.com/blogs/graphql-vs-rest-which-better-api-design</link>
      <description>GraphQL allows clients to query specific and certain data. REST leverages HTTP caching and integrates easily with other APIs. Learn more about these approaches.</description>
      <author> ()</author>
      <guid>https://www.telerik.com/blogs/graphql-vs-rest-which-better-api-design</guid>
      <pubDate>Mon, 26 Feb 2024 06:03:52 GMT</pubDate>
    </item>
    <item>
      <title>Implementing the decorator pattern using System. Reflection.DispatchProxy</title>
      <link>https://bartwullems.blogspot.com/2024/02/implementing-decorator-pattern-using.html</link>
      <description>If you are new to the decorator pattern, let me start with a short explanation:      Decorator  is a structural design pattern that lets you...</description>
      <author> (Share)</author>
      <guid>https://bartwullems.blogspot.com/2024/02/implementing-decorator-pattern-using.html</guid>
      <pubDate>Mon, 26 Feb 2024 06:03:52 GMT</pubDate>
    </item>
    <item>
      <title>Challenges in Migrating ASP.NET Apps to Containers #1 – Multiple Active Result Sets</title>
      <link>https://www.codeproject.com/Tips/5378079/Challenges-in-Migrating-ASP-NET-Apps-to-Containers</link>
      <description>One of the major issues encountered when connecting to databases after porting ASP.NET app to Docker Linux containers.</description>
      <author> (Mohammad Elsheimy)</author>
      <guid>https://www.codeproject.com/Tips/5378079/Challenges-in-Migrating-ASP-NET-Apps-to-Containers</guid>
      <pubDate>Mon, 26 Feb 2024 06:03:52 GMT</pubDate>
    </item>
    <item>
      <title>Easily ask questions about your Linux, Windows, and macOS infrastructure</title>
      <link>https://osquery.io/</link>
      <description>osquery/osquery</description>
      <author> ()</author>
      <guid>https://osquery.io/</guid>
      <pubDate>Mon, 26 Feb 2024 06:03:52 GMT</pubDate>
    </item>
    <item>
      <title>.NET JsonElement Error Handling | endjin</title>
      <link>https://endjin.com/blog/2024/02/dotnet-jsonelement-parse-errors</link>
      <description>.NET&amp;#39;s System.Text.Json offers very high performance JSON parsing. However, JsonElement&amp;#39;s text parsing methods offer a trap for the unwary</description>
      <author> (Ian Griffiths)</author>
      <guid>https://endjin.com/blog/2024/02/dotnet-jsonelement-parse-errors</guid>
      <pubDate>Mon, 26 Feb 2024 06:03:51 GMT</pubDate>
    </item>
    <item>
      <title>Chaotic Thoughts About Order</title>
      <link>https://garethstack.wordpress.com/2024/02/18/chaotic-thoughts-about-order/</link>
      <description>“The law demands that we atoneWhen we take things we do not ownBut leaves the lords and ladies fineWho take things that are yours and mine.” Anonymous (17th century) “Moloch whose love is endless o…</description>
      <author> (Gareth Stack)</author>
      <guid>https://garethstack.wordpress.com/2024/02/18/chaotic-thoughts-about-order/</guid>
      <pubDate>Mon, 26 Feb 2024 00:03:37 GMT</pubDate>
    </item>
    <item>
      <title>A Map is Not a Blueprint: Why Fixing Nature Fails</title>
      <link>https://blog.nateliason.com/p/map-not-a-blueprint</link>
      <description>Ozempic, Fertilizer, Lobotomies, and the dangers of hubris</description>
      <author> (Nat Eliason)</author>
      <guid>https://blog.nateliason.com/p/map-not-a-blueprint</guid>
      <pubDate>Mon, 26 Feb 2024 00:03:35 GMT</pubDate>
    </item>
    <item>
      <title>Framing is Everything</title>
      <link>https://danielmiessler.com/p/framing-is-everything</link>
      <description>We&amp;#39;re framing differently, and living in different worlds because of it</description>
      <author> (Daniel Miessler)</author>
      <guid>https://danielmiessler.com/p/framing-is-everything</guid>
      <pubDate>Mon, 26 Feb 2024 00:03:35 GMT</pubDate>
    </item>
    <item>
      <title>Vim for Hacker News – Quentin Santos</title>
      <link>https://qsantos.fr/2024/02/24/vihn-vim-for-hacker-news/</link>
      <description>tl;dr: I made ViHN to read Hacker News without having to move my hands away from the keyboard. It’s freely available on Firefox and Chrome.</description>
      <author> ()</author>
      <guid>https://qsantos.fr/2024/02/24/vihn-vim-for-hacker-news/</guid>
      <pubDate>Mon, 26 Feb 2024 00:03:34 GMT</pubDate>
    </item>
    <item>
      <title>Gitlab Ephemeral Environments for Pull Requests  &amp;#183; Blog - MattBits </title>
      <link>https://blog.mattsbit.co.uk/2024/02/22/gitlab-ephemeral-environments-for-pull-requests/</link>
      <description></description>
      <author> ()</author>
      <guid>https://blog.mattsbit.co.uk/2024/02/22/gitlab-ephemeral-environments-for-pull-requests/</guid>
      <pubDate>Mon, 26 Feb 2024 00:03:34 GMT</pubDate>
    </item>
    <item>
      <title>How to Work on Legacy Systems - Making Smaller Circles</title>
      <link>https://makingsmallercircles.com/articles/how-to-work-on-legacy-systems-a-5-step-guide/</link>
      <description>The first system I worked on, at my first job out of college, was a&amp;#160; legacy PHP application. The code was like a piled up plate of spaghetti.&amp;#160;</description>
      <author> ()</author>
      <guid>https://makingsmallercircles.com/articles/how-to-work-on-legacy-systems-a-5-step-guide/</guid>
      <pubDate>Mon, 26 Feb 2024 00:03:33 GMT</pubDate>
    </item>
    <item>
      <title>Scheduling Internals</title>
      <link>https://tontinton.com/posts/scheduling-internals/</link>
      <description>A sneak peek to what&amp;#39;s coming!</description>
      <author> ()</author>
      <guid>https://tontinton.com/posts/scheduling-internals/</guid>
      <pubDate>Mon, 26 Feb 2024 00:03:33 GMT</pubDate>
    </item>
    <item>
      <title>My First Time Building with SST was a Disaster</title>
      <link>https://www.amanazad.xyz/my-first-time-building-with-sst-was-a-disaster/</link>
      <description>Classic programmer mistake, SST is actually really, really good.</description>
      <author> ()</author>
      <guid>https://www.amanazad.xyz/my-first-time-building-with-sst-was-a-disaster/</guid>
      <pubDate>Mon, 26 Feb 2024 00:03:33 GMT</pubDate>
    </item>
    <item>
      <title>It&amp;#39;s OK to abandon your side-project - Robb Owen </title>
      <link>https://robbowen.digital/wrote-about/abandoned-side-projects/</link>
      <description>In an industry that pressures developers to always be shipping side-projects, it can be helpful to be retrospective with the projects that don&amp;#39;t make the cut</description>
      <author> (22nd February 2024)</author>
      <guid>https://robbowen.digital/wrote-about/abandoned-side-projects/</guid>
      <pubDate>Mon, 26 Feb 2024 00:03:33 GMT</pubDate>
    </item>
    <item>
      <title>Unified diffs make GPT-4 Turbo 3X less lazy</title>
      <link>https://aider.chat/2023/12/21/unified-diffs.html</link>
      <description>GPT-4 Turbo has a problem with lazy coding, which can be signiciantly improved by asking for code changes formatted as unified diffs.</description>
      <author> ()</author>
      <guid>https://aider.chat/2023/12/21/unified-diffs.html</guid>
      <pubDate>Mon, 26 Feb 2024 00:03:32 GMT</pubDate>
    </item>
    <item>
      <title>A dedicated site for Blog-Doc&amp;#39;s documentation!</title>
      <link>https://lebcit.github.io/posts/a-dedicated-site-for-blog-docs-documentation/</link>
      <description>This post is about the newly created site for Blog-Doc&amp;#39;s documentation</description>
      <author> (SYA,
		
		LebCit.)</author>
      <guid>https://lebcit.github.io/posts/a-dedicated-site-for-blog-docs-documentation/</guid>
      <pubDate>Mon, 26 Feb 2024 00:03:32 GMT</pubDate>
    </item>
    <item>
      <title>Designing Personal Software</title>
      <link>https://alexsci.com/blog/personal-apps/</link>
      <description>I&amp;#39;ve been thinking a lot about the type of software I want to build and use.
    I spend so much of my screen time using large feature-heavy software, which are one-size-fits-none at best or outright hostile.
    I&amp;#39;m left frustrated, distracted, and wanting something better.</description>
      <author> ()</author>
      <guid>https://alexsci.com/blog/personal-apps/</guid>
      <pubDate>Mon, 26 Feb 2024 00:03:32 GMT</pubDate>
    </item>
    <item>
      <title>That will never change. Not here.</title>
      <link>https://jimmyhmiller.github.io/never-change</link>
      <description>I remember starting my first job, excited that this hobby I had as a kid could pay so well. 55k, more than double what my parents had ever made. Diving into code written by other people for the first time was exciting. Hundreds of thousands of lines of hastily written code, a lot of C# some VB, every javascript framework that had ever existed, and a sprinkling of Delphi. To me at 20 years old, the whole thing felt like possibilities. So much we could do and change. So much to improve. But quickly I found out how wrong I was:</description>
      <author> (Jimmy Miller)</author>
      <guid>https://jimmyhmiller.github.io/never-change</guid>
      <pubDate>Mon, 26 Feb 2024 00:03:32 GMT</pubDate>
    </item>
    <item>
      <title>AAC and Debian</title>
      <link>https://tookmund.com/2024/02/aac-and-debian</link>
      <description>Currently, in a default installation of Debian with the GNOME desktop,
Bluetooth headphones that require the AAC codec1 cannot be used.
As the Debian wiki outlines,
using the AAC codec over Bluetooth, while technically supported by
PipeWire, is explicitly disabled in Debian at this time.
This is because the fdk-aac library needed to enable this support is currently
in the non-free component of the repository, meaning that PipeWire, which
is in the main component, cannot depend on it.


  
    
      Such as, for example, any Apple AirPods, which only support AAC AFAICT.&amp;#160;↩
    
  

</description>
      <author> (Tookmund)</author>
      <guid>https://tookmund.com/2024/02/aac-and-debian</guid>
      <pubDate>Mon, 26 Feb 2024 00:03:32 GMT</pubDate>
    </item>
  </channel>
</rss>