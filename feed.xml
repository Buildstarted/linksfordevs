<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>The Microsoft 365 Copilot launch was a total disaster</title>
      <link>https://www.zdnet.com/home-and-office/work-life/the-microsoft-365-copilot-launch-was-a-total-disaster/</link>
      <description>At the start of the New Year, with no warning, Microsoft gives its flagship productivity app a name change and a huge price increase. Why would the company make this mess? I asked Copilot, who explained it very well.</description>
      <author> ()</author>
      <guid>https://www.zdnet.com/home-and-office/work-life/the-microsoft-365-copilot-launch-was-a-total-disaster/</guid>
      <pubDate>Mon, 27 Jan 2025 00:02:14 GMT</pubDate>
    </item>
    <item>
      <title>The Management Paradox</title>
      <link>https://bloomt.org/p/the-management-paradox</link>
      <description>Everything simple is wrong. Everything complex is unusable.</description>
      <author> ()</author>
      <guid>https://bloomt.org/p/the-management-paradox</guid>
      <pubDate>Sun, 26 Jan 2025 22:01:57 GMT</pubDate>
    </item>
    <item>
      <title>The Lost Futures of Computing: How We Got Boxed Into the Desktop Metaphor - Andr&amp;#233; Klein Dot Net</title>
      <link>https://andreklein.net/the-lost-futures-of-computing-how-we-got-boxed-into-the-desktop-metaphor/</link>
      <description>In the late 1960s, Xerox was the undisputed king of the copier world, practically printing money with its revolutionary machines. With a stranglehold on 95% of the U.S. copier market, the company wasn’t just thriving—it was reshaping how the world handled information. Not out of an immediate fear for their paper-centric business, but with visionary... Continue reading →</description>
      <author> ()</author>
      <guid>https://andreklein.net/the-lost-futures-of-computing-how-we-got-boxed-into-the-desktop-metaphor/</guid>
      <pubDate>Sun, 26 Jan 2025 22:01:56 GMT</pubDate>
    </item>
    <item>
      <title>Unit Testing Principles</title>
      <link>https://olano.dev/blog/unit-testing-principles/</link>
      <description>If we backtrack to the foundation of our discipline, we’ll land on what testing and design have in common: the pursuit of sustainable software.</description>
      <author> ()</author>
      <guid>https://olano.dev/blog/unit-testing-principles/</guid>
      <pubDate>Sun, 26 Jan 2025 22:01:56 GMT</pubDate>
    </item>
    <item>
      <title>What happened to Only Paranoid Survives?</title>
      <link>https://yuhao.app/blog/what-happened-to-only-paranoid-survives</link>
      <description>Here’s the revised version with typos and grammar fixed, while keeping the language intact:

I am halfway through Tae Kim’s&amp;#160;The Nvidia Way, and it’s the 2007 to early 2010s. Nvidia has introduced CUDA and worked with companies like Adobe and Autodesk to enable parallel computing to massively make their applications faster. And I just can’t stop thinking — Oh my god, how is Intel letting this happen? It’s absurd that it’s Intel’s Andy Grove who coined the term&amp;#160;Only the Paranoid Survive, and one C</description>
      <author> ()</author>
      <guid>https://yuhao.app/blog/what-happened-to-only-paranoid-survives</guid>
      <pubDate>Sun, 26 Jan 2025 22:01:56 GMT</pubDate>
    </item>
    <item>
      <title>The first perfect computer</title>
      <link>https://celso.io/posts/2025/01/26/the-first-perfect-computer/</link>
      <description>This is a story about restoring and upgrading a Commodore Amiga 1000, the first model of the Amiga series.
Many of you might be familiar with the popular Amiga 500 or later models, but the Commodore Amiga 1000 was actually the first model of the Amiga series produced.
I consider the A1000 a significant piece of computing history. Arguably one of the most important machines of the 16-bit revolution period, considered by many to be the first multimedia computer, it marked the beginning of Commodore’s last cycle, after the huge success of the C64, in the history of personal computing.</description>
      <author> ()</author>
      <guid>https://celso.io/posts/2025/01/26/the-first-perfect-computer/</guid>
      <pubDate>Sun, 26 Jan 2025 22:01:55 GMT</pubDate>
    </item>
    <item>
      <title>What&amp;#39;s OAuth2 Anyway? - Blog by Roman Glushko</title>
      <link>https://www.romaglushko.com/blog/whats-aouth2/</link>
      <description>Why the OAuth2 protocol was designed the way it is and how it works.</description>
      <author> ()</author>
      <guid>https://www.romaglushko.com/blog/whats-aouth2/</guid>
      <pubDate>Sun, 26 Jan 2025 22:01:55 GMT</pubDate>
    </item>
    <item>
      <title>MOS brings macOS&amp;#39; smooth scrolling to any mouse</title>
      <link>https://notes.ghed.in/posts/2025/mos-smooth-scrolling-mouse-macos/</link>
      <description>The biggest (only?) issue with using a non-Apple mouse on macOS is losing that smooth scrolling, also known as kinetic scrolling.</description>
      <author> ()</author>
      <guid>https://notes.ghed.in/posts/2025/mos-smooth-scrolling-mouse-macos/</guid>
      <pubDate>Sun, 26 Jan 2025 22:01:55 GMT</pubDate>
    </item>
    <item>
      <title>Python: re-creating async in 10 lines using generators</title>
      <link>https://lucasoshiro.github.io/software-en/2025-01-25-python_async_iterators/</link>
      <description>Iterators + threads will be enough, blessed by functors</description>
      <author> ()</author>
      <guid>https://lucasoshiro.github.io/software-en/2025-01-25-python_async_iterators/</guid>
      <pubDate>Sun, 26 Jan 2025 22:01:55 GMT</pubDate>
    </item>
    <item>
      <title>How to work for Microsoft without getting hired</title>
      <link>https://anasismail.com/how-to-work-for-microsoft-without-getting-hired</link>
      <description>I’ve been a fan of open-source longer than I have been an adult. The moment I first switched to Linux in 2012, I knew it would remain my daily driver until I could afford to buy a Mac. As I, both voluntarily and involuntarily, continued to ditch my usual programs in favor of free and open-source alternatives, the deeper I dove into the world of open-source and the stronger became my desire to contribute to it. I didn’t have to wait long because between the Septembers of 2014 and 2015, I led the development of Emu-OS — An ubuntu-based distro for retro-gaming. This was a short-lived but two-pronged high because by then, building an operating system had also already been my dream for a couple of years. Sadly, just when Emu-OS started gaining popularity, my team abandoned me and I was too young to know how to continue on my own. Since then, I’ve come a long way, both as a developer and a professional, but Emu-OS remained my sole open-source contribution until just a few months ago. Last May, I started architecting a project in C# which revolved around OData — a standard maintained primarily by Microsoft for building RESTful APIs with powerful querying capabilities. In fact, I particularly chose to build it in C# because of that. It was the right decision because while there’s fairly official OData libraries for both Java and Javascript, they are ridiculously lacking when compared to Microsoft.AspNetCore.OData. It was practically our first day taking that library for a test-drive when a fellow coder showed me a bug. Remember when I said earlier that OData has powerful querying capabilities? randomapi.com/Products?$select=ProductID,ProductName,Price,Category&amp;amp;$filter=Price gt 20 and Category eq &amp;#39;Electronics&amp;#39;&amp;amp;$orderby=Price desc&amp;amp;$top=10&amp;amp;$skip=5&amp;amp;$expand=Supplier&amp;amp;$count=true The above query would fetch the ID, Name, Price and Category of the top 10 Electronic Products whose price exceeds $20, sorted from highest to lowest price. Notice the part that says $expand=Supplier? That’s a join with the Suppliers table. Powerful stuff right? Now let’s talk about the bug. My teammate noticed that if you try to $select a field that was housing a Collection&amp;lt;String&amp;gt;, it would crash. I recreated the bug and immediately noticed that the problem was specific to SQL databases. If you had a mock database in-memory, or if you were to convert the IQueryable to a List it would work fine. I also noticed that while on SQL Server it was happening only with string collections, on SQLite it was happening with numeric types too. This made perfect sense since Primitive Collections were not even supported before EF Core 8, however it was also clear that this wasn’t defined behavior. I decided to clone the repo for Microsoft.AspNetCore.OData, use a package reference in my project and debug through its lines. As early as the first run, I was able to isolate the problematic part of the code because a quick glance at the variables in the debugger showed me exactly the kind of LINQ that was part of the error message. Long story short, here’s what was happening: While collections were handled separately there was absolutely no discrimination in terms of base types. The same code was powering collections of navigations, complex and primitives. For each element of the collection it was performing a nested select like this: collection.Select(field =&amp;gt; field.Select(d=&amp;gt; d)) While this makes perfect sense for navigations and complex types, for primitives it meant absolutely nothing and theoretically couldn’t even be executed. What’s weird to me is that on SQL Server, integers could handle this when strings couldn’t despite the fact that on a spectrum of scalar to collection, strings lean towards the collection side. I grabbed a list of all the primitive types as defined in the release notes for EF Core 8 and added a condition where if the underlying type in the collection was any of those, it should proceed without the nested select. Worked like a charm. I opened my PR on July 16th 2024. When it failed to catch attention, I created an issue for the bug two days later. That did the trick. Throughout August, I worked with the maintainers to make sure the code was up-to-standards, and that all tests were passing and everything was well-documented and more importantly, correctly documented. While I got approved a couple of times in September, it wasn’t until the latter half of October that the nitpicking stopped. In November, I reached out to them and requested that they merge it because my project depended on it and they heeded my request. 10 days later, the first release with my commits came out. Those of you who have made it this far, I want to thank you for taking the time to read this. As I finished typing the last paragraph, I realized that it reads like an excited child wrote it. But that’s exactly how I feel. I’ve been a developer for the past 13 years, worked with people from various countries, written code in every major language, and made a lot of money, but very few experiences have felt as rewarding as this.</description>
      <author> ()</author>
      <guid>https://anasismail.com/how-to-work-for-microsoft-without-getting-hired</guid>
      <pubDate>Sun, 26 Jan 2025 22:01:55 GMT</pubDate>
    </item>
    <item>
      <title>Hard numbers in the Wayland vs X11 input latency discussion</title>
      <link>https://mort.coffee/home/wayland-input-latency/</link>
      <description>Date: 2025-01-26 
Git: https://gitlab.com/mort96/blog/blob/published/content/00000-home/00016-wayland-input-latency.md</description>
      <author> ()</author>
      <guid>https://mort.coffee/home/wayland-input-latency/</guid>
      <pubDate>Sun, 26 Jan 2025 21:01:40 GMT</pubDate>
    </item>
    <item>
      <title>No bitcoin ETFs at Vanguard? Here’s why</title>
      <link>https://corporate.vanguard.com/content/corporatesite/us/en/corp/articles/no-bitcoin-etfs-at-vanguard-heres-why.html</link>
      <description>Vanguard leaders explain why we’re not offering bitcoin ETFs or other crypto products on our brokerage platform.</description>
      <author> ()</author>
      <guid>https://corporate.vanguard.com/content/corporatesite/us/en/corp/articles/no-bitcoin-etfs-at-vanguard-heres-why.html</guid>
      <pubDate>Sun, 26 Jan 2025 20:01:40 GMT</pubDate>
    </item>
    <item>
      <title>Programming Better Shops for my Farming Game</title>
      <link>https://youtube.com/watch?v=kq6HdJzpzCU</link>
      <description>Devlog video about &amp;quot;Homegrown&amp;quot;, the casual farming game I&amp;#39;m creating using my own engine.

Support the channel on Patreon and get access to the game &amp;amp; code for Homegrown, the city-builder, and Equilinox:
https://www.patreon.com/thinmatrix

Play my previous game &amp;quot;Equilinox&amp;quot;:
https://store.steampowered.com/app/853550/Equilinox/

Follow the game&amp;#39;s progress on my social media:
Instagram: https://www.instagram.com/thinmatrix/
Twitter: https://twitter.com/ThinMatrix
Bluesky: https://bsky.app/profile/thinmatrix.bsky.social
Trello: https://trello.com/b/W3zkIJTM/farm
Email: thinmatrix@gmail.com

Background music by Jamal Green:
https://open.spotify.com/artist/50jTMgIPZrjKFgHbCvoeRt?si=Z-xfUXEXQCuGdGRy7qf9Ug&amp;amp;dl_branch=1

Outro music by Dannek Studio:
https://www.youtube.com/user/DannekStudio

Equipment (Amazon Affiliate Links):
Keyboard: https://amzn.to/4fX0hOf
Mouse: https://amzn.to/40dyvXX
Camera: https://amzn.to/491ayFZ
Desk Microphone: https://amzn.to/40jOELk
Camera Mic: https://amzn.to/48ZcRcE

#devlog #Homegrown</description>
      <author> (ThinMatrix)</author>
      <guid>https://youtube.com/watch?v=kq6HdJzpzCU</guid>
      <pubDate>Sun, 26 Jan 2025 19:01:28 GMT</pubDate>
    </item>
    <item>
      <title>Daily links from Cory Doctorow</title>
      <link>https://pluralistic.net/2025/01/25/potatotrac/#carbo-loading</link>
      <description></description>
      <author> ()</author>
      <guid>https://pluralistic.net/2025/01/25/potatotrac/#carbo-loading</guid>
      <pubDate>Sun, 26 Jan 2025 18:01:39 GMT</pubDate>
    </item>
    <item>
      <title>Compiled Models: The Fast Lane for EF Core Performance - Chris Woody Woodruff</title>
      <link>https://woodruff.dev/compiled-models-the-fast-lane-for-ef-core-performance/</link>
      <description>Let’s talk about startup time. Not the Silicon Valley kind, but the time it takes for your EF Core app to boot up, stretch its legs, and actually start handling requests. If your app is dragging its feet like a teenager on a Monday morning, you need a secret weapon: Compiled Models.</description>
      <author> ()</author>
      <guid>https://woodruff.dev/compiled-models-the-fast-lane-for-ef-core-performance/</guid>
      <pubDate>Sun, 26 Jan 2025 16:01:13 GMT</pubDate>
    </item>
    <item>
      <title>&amp;#39;First AI software engineer&amp;#39; is bad at its job</title>
      <link>https://www.theregister.com/2025/01/23/ai_developer_devin_poor_reviews/</link>
      <description>Nailed just 15% of assigned tasks</description>
      <author> ()</author>
      <guid>https://www.theregister.com/2025/01/23/ai_developer_devin_poor_reviews/</guid>
      <pubDate>Sun, 26 Jan 2025 16:01:11 GMT</pubDate>
    </item>
    <item>
      <title>Every HTML Element</title>
      <link>https://iamwillwang.com/dollar/every-html-element/</link>
      <description>There are over a hundred HTML elements. This page uses all of them.
        You&amp;#39;re looking at &amp;lt;p&amp;gt;&amp;lt;/p&amp;gt; right now.</description>
      <author> ()</author>
      <guid>https://iamwillwang.com/dollar/every-html-element/</guid>
      <pubDate>Sun, 26 Jan 2025 07:01:41 GMT</pubDate>
    </item>
    <item>
      <title>No screen, no controller, and absolutely no sense, just a power button and a USB port.</title>
      <link>https://crastinator-pro.github.io/steam-brick/</link>
      <description>Brick your Steam Deck - one way or another…</description>
      <author> ()</author>
      <guid>https://crastinator-pro.github.io/steam-brick/</guid>
      <pubDate>Sun, 26 Jan 2025 02:01:36 GMT</pubDate>
    </item>
    <item>
      <title>But But, You Were Supposed to Be a GPT Wrapper?!</title>
      <link>https://www.nicolasbustamante.com/p/but-but-you-were-supposed-to-be-a</link>
      <description>The technical details behind our AI Financial Agent: Fintool, Warren Buffett as a service.</description>
      <author> ()</author>
      <guid>https://www.nicolasbustamante.com/p/but-but-you-were-supposed-to-be-a</guid>
      <pubDate>Sun, 26 Jan 2025 01:01:32 GMT</pubDate>
    </item>
    <item>
      <title>&amp;#187; The CRPG Renaissance, Part 1: Fallout The Digital Antiquarian</title>
      <link>https://www.filfre.net/2025/01/the-crpg-renaissance-part-1-fallout/</link>
      <description></description>
      <author> ()</author>
      <guid>https://www.filfre.net/2025/01/the-crpg-renaissance-part-1-fallout/</guid>
      <pubDate>Sun, 26 Jan 2025 01:01:30 GMT</pubDate>
    </item>
    <item>
      <title>testtrim: The Testing Tool That Couldn’t Test Itself (Until Now)</title>
      <link>https://mathieu.fenniak.net/testtrim-2025-01-nested-syscall-tracing/</link>
      <description>Today, we’re going to deep-dive into the kind of thing you can only “invest” time on if you’re a single engineer working on a project with no supervision. I just finished a crazy complicated development effort in my project, testtrim, and all I want to do is talk about how surprised I am that it actually worked.</description>
      <author> ()</author>
      <guid>https://mathieu.fenniak.net/testtrim-2025-01-nested-syscall-tracing/</guid>
      <pubDate>Sun, 26 Jan 2025 01:01:29 GMT</pubDate>
    </item>
    <item>
      <title>I had different agents play ‘The Password Game’ - they didn’t do so well</title>
      <link>https://www.jerpint.io/blog/agents-password-game/</link>
      <description>Comparing multimodal agents and how they struggle on ‘The Password Game’</description>
      <author> (jerpint)</author>
      <guid>https://www.jerpint.io/blog/agents-password-game/</guid>
      <pubDate>Sun, 26 Jan 2025 01:01:29 GMT</pubDate>
    </item>
    <item>
      <title>A Global Design System</title>
      <link>https://bradfrost.com/blog/post/a-global-design-system/</link>
      <description>TL;DR: This is a call to action to create a Global Design System that provides the world&amp;#39;s web designers &amp;amp; developers a library of common UI components. A Global Design System would improve the quality and accessibility of the world&amp;#39;s web experiences, save the world&amp;#39;s web designers and developer</description>
      <author> ()</author>
      <guid>https://bradfrost.com/blog/post/a-global-design-system/</guid>
      <pubDate>Sun, 26 Jan 2025 01:01:29 GMT</pubDate>
    </item>
    <item>
      <title>Bridging the Moat</title>
      <link>https://wq6e.com/posts/2025-01-24_openai-isnt-unique/</link>
      <description>OpenAI has long held the belief that they have a unique position in the market and therefore a very wide and deep moat protecting them from any competition coming along and eating their lunch. That moat, seemingly, is due only to the massive and ever-increasing cost of training one of their AI models. Their belief, then, was that they were so far ahead of everyone else and had so much more capital available to them that they could withstand any onslaught and simply outspend the competition. They could therefore justify any capital expenditure as a means to keep the moat filled and sustain their market “leadership”.
That’s all changed in the past few weeks.</description>
      <author> ()</author>
      <guid>https://wq6e.com/posts/2025-01-24_openai-isnt-unique/</guid>
      <pubDate>Sun, 26 Jan 2025 01:01:29 GMT</pubDate>
    </item>
    <item>
      <title>Digital Signature Algorithms - Ronkathon: Cryptography Educational Foundations</title>
      <link>https://ronkathon.pluto.xyz/src/dsa/index.html</link>
      <description>Cryptography Educational Foundations</description>
      <author> ()</author>
      <guid>https://ronkathon.pluto.xyz/src/dsa/index.html</guid>
      <pubDate>Sun, 26 Jan 2025 01:01:29 GMT</pubDate>
    </item>
    <item>
      <title>Compressing By Writing</title>
      <link>https://lifeandmoneyandscience.oliverpartridge.workers.dev/2025-01-19~Vectors-and-added-value</link>
      <description>Money is a token. The token represents quantified work that added value. This value is qualitative in nature, but to tokenize it, we link human perception of that value to a number we call price. Price is the numerical representation of how humans perceive the utility or impact of added value in the real world.</description>
      <author> ()</author>
      <guid>https://lifeandmoneyandscience.oliverpartridge.workers.dev/2025-01-19~Vectors-and-added-value</guid>
      <pubDate>Sun, 26 Jan 2025 01:01:29 GMT</pubDate>
    </item>
    <item>
      <title>Composable SQL</title>
      <link>https://borretti.me/article/composable-sql</link>
      <description>Better SQL through typed, composable query fragments.</description>
      <author> ()</author>
      <guid>https://borretti.me/article/composable-sql</guid>
      <pubDate>Sun, 26 Jan 2025 01:01:29 GMT</pubDate>
    </item>
    <item>
      <title>Running NATS on a FreeBSD Jail</title>
      <link>https://simonevellei.com/blog/posts/running-nats-on-a-freebsd-jail/</link>
      <description>Last few months I played with FreeBSD and my Rock64 embedded boards [1] [2]. I really enjoyed the experience and I wanted to go to the next level and experiment with FreeBSD jails. I was surprised how easy (and logical) it was to create and manage an isolated environment. I also noticed that the low level commands have been wrapped into a more user friendly interfaces (like bastille) making the whole experience more enjoyable.</description>
      <author> ()</author>
      <guid>https://simonevellei.com/blog/posts/running-nats-on-a-freebsd-jail/</guid>
      <pubDate>Sun, 26 Jan 2025 01:01:29 GMT</pubDate>
    </item>
    <item>
      <title>Working fast and slow</title>
      <link>https://www.seangoedecke.com/working-fast-and-slow/</link>
      <description>How I deal with being way more productive on some days than others</description>
      <author> ()</author>
      <guid>https://www.seangoedecke.com/working-fast-and-slow/</guid>
      <pubDate>Sun, 26 Jan 2025 01:01:29 GMT</pubDate>
    </item>
    <item>
      <title>McLarens and CarPlay | Adam Bell</title>
      <link>https://blog.adambell.ca/posts/20250116-McLarens-And-CarPlay/</link>
      <description>building / breaking things</description>
      <author> ()</author>
      <guid>https://blog.adambell.ca/posts/20250116-McLarens-And-CarPlay/</guid>
      <pubDate>Sun, 26 Jan 2025 01:01:29 GMT</pubDate>
    </item>
    <item>
      <title>Things I learned building a model validation library – Wilsons Blog</title>
      <link>https://wilsoniumite.com/2025/01/24/things-i-learned-building-a-model-validation-library/</link>
      <description>I spent a few years designing and partially building a library used for the validation of front office models at a financial institution, and I thought it might be a good idea to write down what I learned during that time. It was my first ever big project and happened to some degree by accident, building something that I just thought was neat turned into a modest project with its own team. But before we get to all that, let’s first talk briefly about what model validation is.</description>
      <author> ()</author>
      <guid>https://wilsoniumite.com/2025/01/24/things-i-learned-building-a-model-validation-library/</guid>
      <pubDate>Sun, 26 Jan 2025 01:01:27 GMT</pubDate>
    </item>
    <item>
      <title>Writing a tech blog people want to read</title>
      <link>https://www.seangoedecke.com/on-writing/</link>
      <description>What I think about when I write blog posts</description>
      <author> ()</author>
      <guid>https://www.seangoedecke.com/on-writing/</guid>
      <pubDate>Sun, 26 Jan 2025 01:01:27 GMT</pubDate>
    </item>
    <item>
      <title>Service Reliability Mathematics</title>
      <link>https://addyosmani.com/blog/service-reliability/</link>
      <description>Service reliability is often reduced to a simple percentage but the reality is far more nuanced than those decimal points suggest. Lets explore what these nu...</description>
      <author> ()</author>
      <guid>https://addyosmani.com/blog/service-reliability/</guid>
      <pubDate>Sun, 26 Jan 2025 01:01:26 GMT</pubDate>
    </item>
    <item>
      <title>Crushing JIRA tickets is a party trick, not a path to impact</title>
      <link>https://www.seangoedecke.com/party-tricks/</link>
      <description>Tech companies care about projects, not tickets</description>
      <author> ()</author>
      <guid>https://www.seangoedecke.com/party-tricks/</guid>
      <pubDate>Sun, 26 Jan 2025 01:01:26 GMT</pubDate>
    </item>
  </channel>
</rss>