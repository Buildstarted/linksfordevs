<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/feed.xml" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/feed.xml</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>Structured Concurrency in Robot Control</title>
      <link>https://max.xz.ax/blog/structured-concurrency-robot-control/</link>
      <description>Robots need a way to control their various mechanisms to perform tasks, either step-by-step, or in parallel. Most FTC teams do this in a similar way. You might occasionally see some teams playing around with custom task queues and callbacks, but they usually have the same idea at the core: they allow the robot to work on a specific task repeatedly in a non-blocking manner and return so that the caller can run some other logic in parallel while the mechanisms make progress. But our new library, Shuttle, is weird. If we wanted to execute two tasks in parallel, we would write this:</description>
      <guid>https://max.xz.ax/blog/structured-concurrency-robot-control/</guid>
      <pubDate>Fri, 30 May 2025 23:03:00 GMT</pubDate>
    </item>
    <item>
      <title>Split Keyboards Are Superior - Aftermath</title>
      <link>https://aftermath.site/best-split-keyboards-diy-qmk-zmk-corne</link>
      <description>Split keyboards are the best, but no company offered one that satisfied me completely. What followed changed my life as a writer forever.</description>
      <guid>https://aftermath.site/best-split-keyboards-diy-qmk-zmk-corne</guid>
      <pubDate>Fri, 30 May 2025 23:02:57 GMT</pubDate>
    </item>
    <item>
      <title>Three weeks in Japan with a toddler</title>
      <link>https://www.laktek.com/travelling-japan-toddler</link>
      <description>In May 2025, my wife and I spent 3-weeks in Japan with our 3-year-old son. These are my notes from the trip.</description>
      <guid>https://www.laktek.com/travelling-japan-toddler</guid>
      <pubDate>Fri, 30 May 2025 23:02:56 GMT</pubDate>
    </item>
    <item>
      <title>Kafka: The End of the Beginning</title>
      <link>https://materializedview.io/p/kafka-end-of-beginning</link>
      <description>A decade of focus on adoption has payed off. Now it's time to innovate.</description>
      <guid>https://materializedview.io/p/kafka-end-of-beginning</guid>
      <pubDate>Fri, 30 May 2025 23:02:56 GMT</pubDate>
    </item>
    <item>
      <title>TinyAPL part 1: Introduction &amp; Arrays</title>
      <link>https://blog.rubenverg.com/tinyapl_1_arrays</link>
      <description>In this series of articles, I will implement a simple APL dialect named TinyAPL in Haskell.</description>
      <guid>https://blog.rubenverg.com/tinyapl_1_arrays</guid>
      <pubDate>Fri, 30 May 2025 23:02:56 GMT</pubDate>
    </item>
    <item>
      <title>Joe LaChance</title>
      <link>https://www.jlchnc.com/n/jit</link>
      <description>Founder and developer.</description>
      <guid>https://www.jlchnc.com/n/jit</guid>
      <pubDate>Fri, 30 May 2025 23:02:56 GMT</pubDate>
    </item>
    <item>
      <title>Chain-of-Zoom</title>
      <link>https://bryanswkim.github.io/chain-of-zoom/</link>
      <description>Project Page for Chain-of-Zoom</description>
      <guid>https://bryanswkim.github.io/chain-of-zoom/</guid>
      <pubDate>Fri, 30 May 2025 23:02:56 GMT</pubDate>
    </item>
    <item>
      <title>Kevin Boone: AppImage from scratch</title>
      <link>https://kevinboone.me/appimage.html</link>
      <description>%%DESC%%</description>
      <guid>https://kevinboone.me/appimage.html</guid>
      <pubDate>Fri, 30 May 2025 23:02:55 GMT</pubDate>
    </item>
    <item>
      <title>100 days from noob to hired: my mid-career pivot into coding</title>
      <link>https://eriklonnroth.com/100-days/</link>
      <description>How I became an engineer at 38 thanks to AI</description>
      <guid>https://eriklonnroth.com/100-days/</guid>
      <pubDate>Fri, 30 May 2025 23:02:53 GMT</pubDate>
    </item>
    <item>
      <title>Revolutionize Your Enterprise: Unleashing the Power of ILM</title>
      <link>https://colhountech.com/2025/05/30/revolutionize-your-enterprise-unleashing-the-power-of-ilm/</link>
      <description>Disruption isn’t just change—it’s the bold reinvention of enterprise systems with cutting-edge technologies.</description>
      <guid>https://colhountech.com/2025/05/30/revolutionize-your-enterprise-unleashing-the-power-of-ilm/</guid>
      <pubDate>Fri, 30 May 2025 23:02:53 GMT</pubDate>
    </item>
    <item>
      <title>Kinesis mWave Mac Mechanical Keyboard: A Short Review</title>
      <link>https://davidgomes.com/kinesis-mwave-mac-mechanical-keyboard-a-short-review/</link>
      <description>My favorite keyboard of all time is probably the Microsoft Sculpt. I actually own four (yes, 4) of them because I was afraid that Microsoft would stop selling them, and I wanted enough for a lifetime.

However, around a year ago, I switched to a MacBook and so I stopped</description>
      <guid>https://davidgomes.com/kinesis-mwave-mac-mechanical-keyboard-a-short-review/</guid>
      <pubDate>Fri, 30 May 2025 23:02:52 GMT</pubDate>
    </item>
    <item>
      <title>Thoughts of SaaS services</title>
      <link>https://openinx.github.io/posts/2025-05-11-us-saas/</link>
      <description>I have been working at a US company for almost a month recently. An interesting fact is that I have counted the SaaS services I have used for specific scenarios since joining, and surprisingly, there are as many as 23 of them. All of these SaaS services are provided by third-party companies. In other words, Databricks is a customer of all these companies. This aroused my curiosity and made me want to learn about the situation of these companies.</description>
      <guid>https://openinx.github.io/posts/2025-05-11-us-saas/</guid>
      <pubDate>Fri, 30 May 2025 23:02:52 GMT</pubDate>
    </item>
    <item>
      <title>I Miss My Fan Regulator</title>
      <link>https://rishikeshs.com/fan-regulator/</link>
      <description>A short rant on why I hate BLDC fans — they killed the fan regulator and now I have to deal with a stupid remote.</description>
      <guid>https://rishikeshs.com/fan-regulator/</guid>
      <pubDate>Fri, 30 May 2025 23:02:49 GMT</pubDate>
    </item>
    <item>
      <title>Jeremy A Boyd | YAML Tool Calls</title>
      <link>https://jeremyaboyd.com/post/yaml-tool-calls</link>
      <description>So, I'm assuming that if you are reading this, you use an LLM and probably use their Completions API to handle tool calls.</description>
      <guid>https://jeremyaboyd.com/post/yaml-tool-calls</guid>
      <pubDate>Fri, 30 May 2025 23:02:48 GMT</pubDate>
    </item>
    <item>
      <title>Ensloppification</title>
      <link>https://dbushell.com/2025/05/30/ensloppification/</link>
      <description>The one where I try to add reason to riot</description>
      <guid>https://dbushell.com/2025/05/30/ensloppification/</guid>
      <pubDate>Fri, 30 May 2025 23:02:48 GMT</pubDate>
    </item>
    <item>
      <title>Threads of Abstraction</title>
      <link>https://duing.dev/posts/abstractionthreads/</link>
      <description>One of the most common takes you see around, being it a joke or serious, is that the software development industry sucks. And I&amp;rsquo;m not talking about it bei</description>
      <author> (Eduardo Lemos Rocha)</author>
      <guid>https://duing.dev/posts/abstractionthreads/</guid>
      <pubDate>Fri, 30 May 2025 23:02:48 GMT</pubDate>
    </item>
    <item>
      <title>Would Somebody Please Just Build This Browser</title>
      <link>https://andrewchilds.com/posts/please-build-this-browser</link>
      <description>Seriously, just build it.</description>
      <guid>https://andrewchilds.com/posts/please-build-this-browser</guid>
      <pubDate>Fri, 30 May 2025 23:02:47 GMT</pubDate>
    </item>
    <item>
      <title>Can IOPS Be Estimated from fsync?</title>
      <link>https://justincartwright.com/2025/03/13/iops-and-fsync.html</link>
      <description>Introduction</description>
      <guid>https://justincartwright.com/2025/03/13/iops-and-fsync.html</guid>
      <pubDate>Fri, 30 May 2025 23:02:47 GMT</pubDate>
    </item>
    <item>
      <title>Four Things I've Changed My Mind About in Engineering</title>
      <link>https://www.jakeworth.com/posts/things-ive-changed-my-mind-about/</link>
      <description>I think a mark of a great engineer is being willing to change one’s mind when presented with new information. Here are four technological things I’ve changed my mind about.</description>
      <guid>https://www.jakeworth.com/posts/things-ive-changed-my-mind-about/</guid>
      <pubDate>Fri, 30 May 2025 23:02:47 GMT</pubDate>
    </item>
    <item>
      <title>A nice round ball</title>
      <link>https://jfmengels.net/a-nice-round-ball/</link>
      <description>A nice round ball</description>
      <guid>https://jfmengels.net/a-nice-round-ball/</guid>
      <pubDate>Fri, 30 May 2025 23:02:47 GMT</pubDate>
    </item>
    <item>
      <title>My Experience with PSP Development</title>
      <link>https://samueleamato.xyz/post/my-experience-with-psp-development</link>
      <description>The console that has stayed with me even twenty years later is the PlayStation Portable. I still love this mobile device for various reasons.
        PSP is small enough to fit in a pocket and can be used on the move, which makes it incredibly convenient. In addition to that, it also
        has audio outputs and excellent multimedia features. It serves as an MP3 player, thus making it a versatile entertainment gadget.
        In terms of hardware, the device itself is impressive because of its bright screen, long-lasting battery, and expandable storage via Memory Stick Duo cards.
        All these features make the PSP stand out till now.</description>
      <guid>https://samueleamato.xyz/post/my-experience-with-psp-development</guid>
      <pubDate>Fri, 30 May 2025 23:02:45 GMT</pubDate>
    </item>
    <item>
      <title>You Just Don't Need Tox</title>
      <link>https://lukasatkinson.de/2025/just-dont-tox/</link>
      <description>Tox is a neat tool for helping test Python projects.
It automatically creates “virtual environments” that include the necessary dependencies,
and can then run user-defined tools for testing.
Multiple environments can be created in a declarative manner to test different combinations of Python versions + dependencies.
Tox will also build packages in an isolated environment.</description>
      <guid>https://lukasatkinson.de/2025/just-dont-tox/</guid>
      <pubDate>Fri, 30 May 2025 23:02:44 GMT</pubDate>
    </item>
    <item>
      <title>Systems Correctness Practices at Amazon Web Services – Communications of the ACM</title>
      <link>https://cacm.acm.org/practice/systems-correctness-practices-at-amazon-web-services/</link>
      <description>Amazon Web Services (AWS) strives to deliver reliable services that customers can trust completely. This requires maintaining the highest standards of security, durability, integrity, and availability—with systems correctness serving as the cornerstone for achieving these priorities. An April 2015 article published in Communications of the ACM, titled “How Amazon Web Services Uses Formal Methods,” highlighted the approach for ensuring the correctness of critical services that have since become among the most widely used by AWS customers.21</description>
      <guid>https://cacm.acm.org/practice/systems-correctness-practices-at-amazon-web-services/</guid>
      <pubDate>Fri, 30 May 2025 22:02:17 GMT</pubDate>
    </item>
    <item>
      <title>LLMs Will Not Replace You</title>
      <link>https://www.davidhaney.io/llms-will-not-replace-you/</link>
      <description>“Any sufficiently advanced technology is indistinguishable from magic” - Arthur C. Clarke
Today I’d like to talk about LLMs. But first, I’d like to talk about an impressive invention from the late 1700s.
The Mechanical Turk The Mechanical Turk
- or “The Turk” as people called it - was an autonomous chess-playing machine. Built in 1770, it went on tour across parts of the world for 84 years as a robot playing chess against human opponents.</description>
      <guid>https://www.davidhaney.io/llms-will-not-replace-you/</guid>
      <pubDate>Fri, 30 May 2025 19:02:43 GMT</pubDate>
    </item>
    <item>
      <title>My Complete CQRS and Domain Events Setup in .NET</title>
      <link>https://youtube.com/watch?v=5yLIzis9Qr0</link>
      <description>Get the free Clean Architecture template: https://dub.sh/ca-template
Want to master Clean Architecture? Go here: https://bit.ly/3PupkOJ
Want to unlock Modular Monoliths? Go here: https://bit.ly/3SXlzSt
Get the source code here: https://www.patreon.com/milanjovanovic

In this video, I show how I improved my custom domain event dispatcher in .NET by removing reflection and making it fully strongly-typed.

The result? A cleaner, faster, and more extensible foundation for CQRS and domain events — perfect for Clean Architecture.

You’ll learn:
- How domain events work across aggregates and handlers
- How to improve dispatch performance using caching and generics
- How to use handler wrappers to eliminate reflection
- Building a full CQRS setup with command/query handlers and decorators
- Extending with validation, logging, retries, and telemetry

This system is part of my free Clean Architecture template (link below).

Check out my courses:
https://www.milanjovanovic.tech/courses

Read my Blog here:
https://www.milanjovanovic.tech/blog

Join my weekly .NET newsletter:
https://www.milanjovanovic.tech

Chapters
0:00 Improving DomainEventsDispatcher
8:35 Testing the improved version
10:16 Reviewing custom CQRS setup</description>
      <author> (Milan Jovanović)</author>
      <guid>https://youtube.com/watch?v=5yLIzis9Qr0</guid>
      <pubDate>Fri, 30 May 2025 13:02:39 GMT</pubDate>
    </item>
    <item>
      <title>ReSharper for VS Code is here and it’s BAD</title>
      <link>https://youtube.com/watch?v=YCoULbQ92gg</link>
      <description>Get my REST API course for free: https://dometrain.com/course/from-zero-to-hero-rest-apis-in-asp-net-core/ 
Subscribe to my weekly newsletter: https://nickchapsas.com

Hello, everybody. I'm Nick, and in this video, I will talk about the new JetBrains ReSharper extension that was launched for Visual Studio code and compare it to the C# Dev Kit to see which one is worth your time. Spoiler, it's bad.

Workshops: https://bit.ly/nickworkshops

Don't forget to comment, like and subscribe :)

Social Media:
Follow me on GitHub: https://github.com/Elfocrash
Follow me on Twitter: https://twitter.com/nickchapsas
Connect on LinkedIn: https://www.linkedin.com/in/nick-chapsas

#csharp #dotnet</description>
      <author> (Nick Chapsas)</author>
      <guid>https://youtube.com/watch?v=YCoULbQ92gg</guid>
      <pubDate>Fri, 30 May 2025 11:02:03 GMT</pubDate>
    </item>
    <item>
      <title>.NET Aspire: How Maddy Montaquila and the .NET Team Are Revolutionizing Development</title>
      <link>https://youtube.com/watch?v=NpvjTBAZP5c</link>
      <description>RJJ Software's Software Development Service This episode of The Modern .NET Show is supported, in part, by RJJ Software's Software Development Services, whether your company is looking to elevate its UK operations or reshape its US strategy, we can provide tailored solutions that exceed expectations.

 Show Notes "If your app has a backend, it's Aspire-able. And so it's tools, templates, and packages for really any type of app… So just being able to walk up to a repo, clone it, and hit F5. When was the last time we were able to do that? Like, ten years ago, maybe?"— Maddy Montaquila

 Welcome friends to The Modern .NET Show; the premier .NET podcast, focusing entirely on the knowledge, tools, and frameworks that all .NET developers should have in their toolbox. We are the go-to podcast for .NET developers worldwide, and I am your host: Jamie “GaProgMan” Taylor.

 In this episode, we talk with Maddy Montaquila about .NET Aspire, what it is, how it's not just for .NET developers, and how it can help you to run a repo by simply hitting F5, regardless of what's in there.

 "To me, it really is just a dev tool in a bunch of different ways. It makes you just hit F5 again, no matter how many containers, or local, or deployed services you have to deal with, or projects, or languages, or if you're in VS, or VS Code, or on a Mac, or on a command line, or on a Linux machine. Like Aspire just makes all that magical without replatforming"— Maddy Montaquila

 Along the way, we also talk about the importance of reducing the complexity of going from, "I have an idea," to, "my app is running in the cloud." And Maddy drops a wonderful metaphor for .NET Aspire using a Logo-based metaphor. And we address the community invented elephant in the room: that .NET Aspire, somehow, locks you into using one vendor.

 Spoiler alert: it can deploy to any cloud vendor, and even to on-prem servers.

 Anyway, without further ado, let's sit back, open up a terminal, type in `dotnet new podcast` and we'll dive into the core of Modern .NET.

 Supporting the Show If you find this episode useful in any way, please consider supporting the show by either leaving a review (check our review page for ways to do that), sharing the episode with a friend or colleague, buying the host a coffee, or considering becoming a Patron of the show.

 Full Show Notes The full show notes, including links to some of the things we discussed and a full transcription of this episode, can be found at:  https://dotnetcore.show/season-7/net-aspire-how-maddy-montaquila-and-the-net-team-are-revolutionizing-development/

 Maddy's Links:  Maddy on Bluesky  Other Links:  CNCF OpenTelemetry Helm Codespaces Podman Devcontainers Vim GDB FreeBSD Jail  .NET Aspire Community Toolkit CORS MCP  Phi-4 Four stages of competence dot.net  Cloud features of .NET   Customer Stories:  customers.microsoft.com dot.net/customers   Ollama  Supporting the show:  Leave a rating or review Buy the show a coffee Become a patron  Getting in Touch:  Via the contact page Joining the Discord  Remember to rate and review the show on  Apple Podcasts, Podchaser, or wherever you find your podcasts, this will help the show's audience grow. Or you can just share the show with a friend.

 And don't forget to reach out via our Contact page. We're very interested in your opinion of the show, so please get in touch.

 You can support the show by making a monthly donation on the show's Patreon page at: https://www.patreon.com/TheDotNetCorePodcast.

 Music created by Mono Memory Music, licensed to RJJ Software for use in The Modern .NET Show</description>
      <author> (Jamie Taylor)</author>
      <guid>https://youtube.com/watch?v=NpvjTBAZP5c</guid>
      <pubDate>Fri, 30 May 2025 10:01:53 GMT</pubDate>
    </item>
    <item>
      <title>Exclusive: US Airlines Are Quietly Hitting Solo &amp; Biz Travelers with Higher Fares</title>
      <link>https://thriftytraveler.com/news/airlines/airlines-charging-solo-travelers-higher-fares/</link>
      <description>It's not just Delta. The country's three largest airlines are charging some solo travelers higher fares than groups of two or more.</description>
      <guid>https://thriftytraveler.com/news/airlines/airlines-charging-solo-travelers-higher-fares/</guid>
      <pubDate>Fri, 30 May 2025 04:02:12 GMT</pubDate>
    </item>
    <item>
      <title>Black Forest Labs - Frontier AI Lab</title>
      <link>https://bfl.ai/models/flux-kontext</link>
      <description>Amazing AI models from the Black Forest.</description>
      <guid>https://bfl.ai/models/flux-kontext</guid>
      <pubDate>Fri, 30 May 2025 02:02:08 GMT</pubDate>
    </item>
    <item>
      <title>Stop Using new in C#! Learn Dependency Injection the Right Way - Simple C# Tutorial</title>
      <link>https://youtube.com/watch?v=wFDAJv6h7tw</link>
      <description>Are you still using new to create dependencies in your C# apps? It’s time to level up your code with Dependency Injection!

In this beginner-friendly tutorial, I’ll show you how DI works, why it matters, and how to set it up in a simple C# console app using Microsoft.Extensions.DependencyInjection. You’ll learn how to write cleaner, more testable, and more maintainable code — fast.

💡 We’ll also compare the old way (tight coupling with new) vs the modern way (DI), and how easy it is to switch implementations.

🔧 Tools &amp; Concepts Covered:
– Interfaces &amp; loose coupling
– Swapping implementations

👇 Drop a comment if you want a follow-up on advanced DI patterns or testing with mocks!

🔔 Subscribe for more C# tutorials: https://youtube.com/@UC231HSjku3orEpc60Rfm3nw</description>
      <author> (Nick Proud)</author>
      <guid>https://youtube.com/watch?v=wFDAJv6h7tw</guid>
      <pubDate>Fri, 30 May 2025 02:02:04 GMT</pubDate>
    </item>
    <item>
      <title>Why did Microsoft-backed $1.3bn Builder.ai collapse? Accused of using Indian coders for 'AI' work - Start Ups News | The Financial Express</title>
      <link>https://www.financialexpress.com/business/start-ups/why-did-microsoft-backed-1-3bn-builderai-collapse-accused-of-using-indian-codersforaiwork/3854944/</link>
      <description>Over the next eight years, it raised over $445 million, counted Microsoft and the Qatar Investment Authority as investors, and crossed the $1.3 billion valuation mark.
By May 2025, it has gone bankrupt.</description>
      <guid>https://www.financialexpress.com/business/start-ups/why-did-microsoft-backed-1-3bn-builderai-collapse-accused-of-using-indian-codersforaiwork/3854944/</guid>
      <pubDate>Fri, 30 May 2025 00:02:01 GMT</pubDate>
    </item>
  </channel>
</rss>