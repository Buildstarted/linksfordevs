<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>Jujutsu VCS Introduction and Patterns</title>
      <link>https://kubamartin.com/posts/introduction-to-the-jujutsu-vcs/</link>
      <description>Jujutsu (jj), a new version control system written in Rust, has popped up on my radar a few times over the past year. Looked interesting based on a cursory look, but being actually pretty satisfied with Git, and not having major problems with it, I haven’t checked it out.
That is, until last week, when I finally decided to give it a go! I dived into a couple blog posts for a few of hours, and surprisingly (noting that we’re talking about a VCS) I found myself enjoying it a lot, seeing the consistent design, and overall simplicity it managed to achieve.</description>
      <author> ()</author>
      <guid>https://kubamartin.com/posts/introduction-to-the-jujutsu-vcs/</guid>
      <pubDate>Sun, 02 Feb 2025 11:01:46 GMT</pubDate>
    </item>
    <item>
      <title>Avoid ISP routers - RouterSecurity.org</title>
      <link>https://routersecurity.org/ISProuters.php</link>
      <description>Avoid ISP routers</description>
      <author> ()</author>
      <guid>https://routersecurity.org/ISProuters.php</guid>
      <pubDate>Sun, 02 Feb 2025 11:01:45 GMT</pubDate>
    </item>
    <item>
      <title>GitHub - kspalaiologos/bzip3: A better and stronger spiritual successor to BZip2.</title>
      <link>https://github.com/kspalaiologos/bzip3</link>
      <description>A better and stronger spiritual successor to BZip2. - kspalaiologos/bzip3</description>
      <author> ()</author>
      <guid>https://github.com/kspalaiologos/bzip3</guid>
      <pubDate>Sun, 02 Feb 2025 10:01:41 GMT</pubDate>
    </item>
    <item>
      <title>BREAKING NEWS: CDC orders mass retraction and revision of submitted research across all science and medicine journals. Banned terms must be scrubbed.</title>
      <link>https://insidemedicine.substack.com/p/breaking-news-cdc-orders-mass-retraction</link>
      <description>Any unpublished manuscript mentioning certain topics, including gender and &amp;quot;LGBT,&amp;quot; must be pulled or revised.</description>
      <author> ()</author>
      <guid>https://insidemedicine.substack.com/p/breaking-news-cdc-orders-mass-retraction</guid>
      <pubDate>Sun, 02 Feb 2025 08:01:35 GMT</pubDate>
    </item>
    <item>
      <title>The Singleton Pattern in C# Today Is Not Your Dad&amp;#39;s One!</title>
      <link>https://blog.postsharp.net/singleton-pattern</link>
      <description>How to implement the Singleton pattern in C#? How to avoid its pitfalls by using dependency injection and architectural validation? Find out in this article.</description>
      <author> ()</author>
      <guid>https://blog.postsharp.net/singleton-pattern</guid>
      <pubDate>Sun, 02 Feb 2025 07:01:57 GMT</pubDate>
    </item>
    <item>
      <title>Flavors of overfitting</title>
      <link>https://www.argmin.net/p/flavors-of-overfitting</link>
      <description>Contextual overfitting and the Soviet Tank Problem</description>
      <author> ()</author>
      <guid>https://www.argmin.net/p/flavors-of-overfitting</guid>
      <pubDate>Sun, 02 Feb 2025 00:02:32 GMT</pubDate>
    </item>
    <item>
      <title>Does O3 beat a specalized numeric compiler?</title>
      <link>https://pavpanchekha.com/blog/o3-herbie.html</link>
      <description>ChatGPT 3.5, and even o1-preview, would sometimes make programs worse than they started, basically by making math errors and simply changing the real-valued program. That rarely happens with o1 and basically not at all with o3, so that&amp;#39;s a big improvement. Also, o3-mini-high basically crushes the &amp;quot;easy&amp;quot; problems like expq2, at times getting better results than Herbie. For example, expq2 is the program:</description>
      <author> ()</author>
      <guid>https://pavpanchekha.com/blog/o3-herbie.html</guid>
      <pubDate>Sun, 02 Feb 2025 00:02:31 GMT</pubDate>
    </item>
    <item>
      <title>I found every international flight in the world*</title>
      <link>https://www.pranayvarada.com/pvp/i-found-every-international-flight/</link>
      <description>The five-year odyssey to answer a question no one asked</description>
      <author> (Pranay Varada)</author>
      <guid>https://www.pranayvarada.com/pvp/i-found-every-international-flight/</guid>
      <pubDate>Sun, 02 Feb 2025 00:02:29 GMT</pubDate>
    </item>
    <item>
      <title>Everyone knows your location</title>
      <link>https://timsh.org/tracking-myself-down-through-in-app-ads/</link>
      <description>How I tracked myself down using leaked location data in the in-app ads, and what I found along the way.</description>
      <author> ()</author>
      <guid>https://timsh.org/tracking-myself-down-through-in-app-ads/</guid>
      <pubDate>Sun, 02 Feb 2025 00:02:29 GMT</pubDate>
    </item>
    <item>
      <title>1 million Lazygit downloads, one embarrassment at a time</title>
      <link>https://jesseduffield.com/Embarrassment/</link>
      <description>

</description>
      <author> ()</author>
      <guid>https://jesseduffield.com/Embarrassment/</guid>
      <pubDate>Sun, 02 Feb 2025 00:02:28 GMT</pubDate>
    </item>
    <item>
      <title>Do Lake Names Reflect Their Properties?</title>
      <link>https://ivanludvig.dev/tech/lake-colors</link>
      <description>A few months ago, I did a hike to a lake called “Lac Vert” (Green Lake) in France. It’s a mountain lake located close to the Italian border. I found it remarkable how vividly green the lake was. Although the name describes its appearance well, I was still surprised.</description>
      <author> ()</author>
      <guid>https://ivanludvig.dev/tech/lake-colors</guid>
      <pubDate>Sun, 02 Feb 2025 00:02:27 GMT</pubDate>
    </item>
    <item>
      <title>It&amp;#39;s OK to hardcode feature flags</title>
      <link>https://code.mendhak.com/hardcode-feature-flags/</link>
      <description>The safest and most reliable way to deal with feature flags is to hardcode them</description>
      <author> ()</author>
      <guid>https://code.mendhak.com/hardcode-feature-flags/</guid>
      <pubDate>Sun, 02 Feb 2025 00:02:27 GMT</pubDate>
    </item>
    <item>
      <title>How to Store and Dry Your 3D Filament: Full Guide</title>
      <link>https://syntaxglow.com/2025/02/01/how-to-store-and-dry-your-3d-filament-a-complete-guide/</link>
      <description>Improve 3D print quality by drying filament before use. This complete guide covers everything you need to know for optimal results.</description>
      <author> ()</author>
      <guid>https://syntaxglow.com/2025/02/01/how-to-store-and-dry-your-3d-filament-a-complete-guide/</guid>
      <pubDate>Sun, 02 Feb 2025 00:02:27 GMT</pubDate>
    </item>
    <item>
      <title>Starflate: Deflate decompression in C++23</title>
      <link>https://www.garymm.org/blog/2025/01/31/starflate/</link>
      <description>In this post I describe some things I learned while working on Starflate, an implementation of Deflate decompression in C++23 that I wrote with my friend Oliver Lee.</description>
      <author> ()</author>
      <guid>https://www.garymm.org/blog/2025/01/31/starflate/</guid>
      <pubDate>Sun, 02 Feb 2025 00:02:27 GMT</pubDate>
    </item>
    <item>
      <title>Minimising Dependencies</title>
      <link>https://blog.anirudha.dev/cyberspace-os</link>
      <description>Breaking Free from Digital Dependencies</description>
      <author> (https://hashnode.com/@anirudha)</author>
      <guid>https://blog.anirudha.dev/cyberspace-os</guid>
      <pubDate>Sun, 02 Feb 2025 00:02:27 GMT</pubDate>
    </item>
    <item>
      <title>What is SwiGLU?</title>
      <link>https://jcarlosroldan.com/post/348</link>
      <description>Most recent language models have switched from the typical ReLU and GELU activation functions to so</description>
      <author> ()</author>
      <guid>https://jcarlosroldan.com/post/348</guid>
      <pubDate>Sun, 02 Feb 2025 00:02:27 GMT</pubDate>
    </item>
    <item>
      <title>Announcing qv - Quadratic Voting for everyday things</title>
      <link>https://blog.dlmw.ch/en/posts/announcing_qv/</link>
      <description>Dylan&amp;#39;s blog</description>
      <author> ()</author>
      <guid>https://blog.dlmw.ch/en/posts/announcing_qv/</guid>
      <pubDate>Sun, 02 Feb 2025 00:02:26 GMT</pubDate>
    </item>
    <item>
      <title>Using eqn for Website Equation Formatting</title>
      <link>https://douglasrumbaugh.com/post/eqn-mathml/</link>
      <description>Last year, I began the process of writing a
        static site generator to replace Hugo for my personal website. One
        major goal of this process was to remove all Javascript
        [1]. This meant that I could not continue
        to use MathJax for rendering mathematics, and instead had to
        devise a way of formatting equations statically. I had the
        beginnings of an idea to use eqn(1) for this, and published a YouTube
        video going over a first pass at a script for doing just
        that. The basic idea was to embed eqn
        code into the page and use a script to replace that code with
        a rendered SVG file during site generation.</description>
      <author> ()</author>
      <guid>https://douglasrumbaugh.com/post/eqn-mathml/</guid>
      <pubDate>Sun, 02 Feb 2025 00:02:26 GMT</pubDate>
    </item>
    <item>
      <title>The Era of Tab Continuation</title>
      <link>https://allenpike.com/2025/tab-continuation-completion</link>
      <description>Press tab to complete your work.</description>
      <author> ()</author>
      <guid>https://allenpike.com/2025/tab-continuation-completion</guid>
      <pubDate>Sun, 02 Feb 2025 00:02:25 GMT</pubDate>
    </item>
    <item>
      <title>The case against CS master’s degrees</title>
      <link>https://ozwrites.com/masters/</link>
      <description>Around half of all software engineers are
self-taught,One way to approximate this number is via the Stack
Overflow developer
survey. Another rough approximation comes from the fact that over
the last decade, typically only 40-60K students graduated each year with
a CS major from a US university, whereas the total number of software
engineers is roughly 4 million. Assuming uniform attrition over 30
years, and adjusting both for foreign CS degree holders and local
graduates who don’t enter the industry, again we see that
roughly half of incoming software engineers have CS
degrees. including yours
truly.I learned to code at a young age, well before I
attended university, where I majored in mathematics and took only a few
computer science courses. On a good day, we the
uncredentialed feel grateful (even proud!) to be able to work in this
industry without formal qualifications. But in our darker hours, we
wonder: where would I be if I had a CS degree?</description>
      <author> ()</author>
      <guid>https://ozwrites.com/masters/</guid>
      <pubDate>Sun, 02 Feb 2025 00:02:25 GMT</pubDate>
    </item>
    <item>
      <title>Coffee Beans of India, Varieties and Taste Profiles</title>
      <link>https://pankajpipada.com/posts/2025-02-01-indian-coffee-beans/</link>
      <description>Different types of coffee bean varieties available in India, their flavour profiles, and associated processing.</description>
      <author> ()</author>
      <guid>https://pankajpipada.com/posts/2025-02-01-indian-coffee-beans/</guid>
      <pubDate>Sun, 02 Feb 2025 00:02:25 GMT</pubDate>
    </item>
    <item>
      <title>Our Craft is Changing</title>
      <link>https://alexkondov.com/our-craft-is-changing/</link>
      <description>In the last couple of years, AI went from something I disregarded as a fancy recommendation algorithm to a source of existential dread. I saw programming work…</description>
      <author> ()</author>
      <guid>https://alexkondov.com/our-craft-is-changing/</guid>
      <pubDate>Sun, 02 Feb 2025 00:02:25 GMT</pubDate>
    </item>
    <item>
      <title>The Next Chapter in Swift Build Technologies</title>
      <link>https://www.swift.org/blog/the-next-chapter-in-swift-build-technologies/</link>
      <description>Swift continues to grow in popularity as a cross-platform language supporting a wide variety of use cases, with support on a variety of embedded devices, form factors that encompass wearables to server, and a wide variety of operating systems. As Swift expands, there’s value in investing in matching cross-platform build tools that provide a powerful, consistent, and flexible experience across the ecosystem.
</description>
      <author> ()</author>
      <guid>https://www.swift.org/blog/the-next-chapter-in-swift-build-technologies/</guid>
      <pubDate>Sat, 01 Feb 2025 22:01:47 GMT</pubDate>
    </item>
    <item>
      <title>What productivity tips do you have for VS Code and .NET MAUI development?</title>
      <link>https://youtube.com/watch?v=QG1Es1EhP08</link>
      <description>James Montemagno shares his favorite tips for boosting productivity with VS Code and .NET MAUI. Dive into the extension ecosystem for tons of tools. Experiment with feature flags for even more productivity boosts! #OneDevQuestion
Learn more here: https://msft.it/6057Up9nv</description>
      <author> (dotnet)</author>
      <guid>https://youtube.com/watch?v=QG1Es1EhP08</guid>
      <pubDate>Sat, 01 Feb 2025 21:01:39 GMT</pubDate>
    </item>
    <item>
      <title>Batching Updates and Inserts: Making EF Core Work Smarter, Not Harder - Chris Woody Woodruff</title>
      <link>https://woodruff.dev/batching-updates-and-inserts-making-ef-core-work-smarter-not-harder/</link>
      <description>Let’s face it: making multiple database calls is like running back and forth between the kitchen and dining room to serve dinner one plate at a time. It’s inefficient, exhausting, and makes your app look like it’s stuck in the Stone Age. But with batching in EF Core, you can wave goodbye to this inefficiency. It&amp;#39;s the magic trick that lets you update or insert multiple records in a single trip to the database, making you and your app more productive and efficient. Batching is all about doing more with less. It minimizes round trips to the database, saves resources, and makes your app faster. Understanding and implementing batching in EF Core is like gaining a superpower-it makes your app work smarter, not harder, and gives you a sense of control and confidence in your development process.</description>
      <author> ()</author>
      <guid>https://woodruff.dev/batching-updates-and-inserts-making-ef-core-work-smarter-not-harder/</guid>
      <pubDate>Sat, 01 Feb 2025 20:01:57 GMT</pubDate>
    </item>
    <item>
      <title>Visualizing all books of the world in ISBN-Space - phiresky&amp;#39;s blog</title>
      <link>https://phiresky.github.io/blog/2025/visualizing-all-books-in-isbn-space/</link>
      <description>Libraries have been trying to collect humanity’s knowledge almost since the invention of writing. In the digital age, it might actually be possible to create a comprehensive collection of all human writing that meets certain criteria. That’s what shadow libraries do - collect and share as many</description>
      <author> ()</author>
      <guid>https://phiresky.github.io/blog/2025/visualizing-all-books-in-isbn-space/</guid>
      <pubDate>Sat, 01 Feb 2025 20:01:56 GMT</pubDate>
    </item>
    <item>
      <title>How To Run Deepseek R1 671b Fully Locally On a $2000 EPYC Server – Digital Spaceport</title>
      <link>https://digitalspaceport.com/how-to-run-deepseek-r1-671b-fully-locally-on-2000-epyc-rig/</link>
      <description>Let’s start with the good news. I got very solid performance off the same baseline AMD EPYC Rome system that has been at the core of our entire journey  That initial parts selection has remained fantastic! Owners of that system are going to get some great news today also as they can hit between 4.25 to 3.5 TPS (tokens per second) on the Q4 671b full model. This is important as the distilled versions are simply not the same at all. They are vastly inferior and other models out perform them handily. Running the full model, with a 16K or greater context window, is indeed the pathway to the real experience and it is worthwhile. Since this runs decent enough on CPU alone it also can hang out while you run smaller models, like vision models, at the same time. To reiterate, this will not fully run in only GPU VRAM alone unless you have a massive rig. I will show you all the tips and tricks to get this working. It is not “easy” but if you like tech tinkering it is a lot of fun.</description>
      <author> ()</author>
      <guid>https://digitalspaceport.com/how-to-run-deepseek-r1-671b-fully-locally-on-2000-epyc-rig/</guid>
      <pubDate>Sat, 01 Feb 2025 16:01:43 GMT</pubDate>
    </item>
    <item>
      <title>Harnessing DeepSeek-R1 distilled model with .NET Aspire and Ollama locally</title>
      <link>https://laurentkempe.com/2025/02/01/harnessing-deepseek-r1-with-dotnet-aspire-and-ollama-locally/</link>
      <description>In my earlier posts, I’ve demonstrated how to install Ollama using the Windows installer. However, for developers, there’s a more streamlined method to set up Ollama on your machine. In this blog post</description>
      <author> (Laurent Kemp&amp;#233;)</author>
      <guid>https://laurentkempe.com/2025/02/01/harnessing-deepseek-r1-with-dotnet-aspire-and-ollama-locally/</guid>
      <pubDate>Sat, 01 Feb 2025 15:01:54 GMT</pubDate>
    </item>
    <item>
      <title>Programming At School vs Work - Dev Leader Weekly 81</title>
      <link>https://devleader.ca/2025/02/01/programming-at-school-vs-work-dev-leader-weekly-81</link>
      <description>Welcome to another issue of Dev Leader Weekly! In this issue, I discuss the differences between coding at work vs coding at school.
</description>
      <author> ()</author>
      <guid>https://devleader.ca/2025/02/01/programming-at-school-vs-work-dev-leader-weekly-81</guid>
      <pubDate>Sat, 01 Feb 2025 14:01:40 GMT</pubDate>
    </item>
    <item>
      <title>Introducing Werk</title>
      <link>https://simonask.github.io/introducing-werk/</link>
      <description>Table of contents</description>
      <author> ()</author>
      <guid>https://simonask.github.io/introducing-werk/</guid>
      <pubDate>Sat, 01 Feb 2025 12:01:41 GMT</pubDate>
    </item>
  </channel>
</rss>