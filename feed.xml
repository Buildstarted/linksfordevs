<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>Announcing TypeScript 4.2 RC | TypeScript</title>
      <link>https://devblogs.microsoft.com/typescript/announcing-typescript-4-2-rc/</link>
      <description>Today we’re excited to announce our Release Candidate of TypeScript 4.2! Between now and the stable release of TypeScript 4.2, we expect no further changes apart from critical bug fixes. To get started using the RC, you can get it through NuGet,</description>
      <author> (Daniel Rosenwasser Program Manager, TypeScript Follow)</author>
      <guid>https://devblogs.microsoft.com/typescript/announcing-typescript-4-2-rc/</guid>
      <pubDate>Mon, 15 Feb 2021 06:04:38 GMT</pubDate>
    </item>
    <item>
      <title>Half Doses of Moderna Produce Neutralizing Antibodies - Marginal REVOLUTION</title>
      <link>https://marginalrevolution.com/marginalrevolution/2021/02/half-doses-of-moderna-produce-neutralizing-antibodies.html</link>
      <description>A new phase II study from Moderna shows that half-doses (50 μg) appear to be as good as full doses (100 ug) at generating correlates of protection such as neutralizing antibodies. In this randomized, controlled phase 2 trial, the SARS-CoV-2 vaccine candidate mRNA-1273, administered as a two-dose vaccination regimen at 50 and 100 μg, exhibited […]</description>
      <author> ()</author>
      <guid>https://marginalrevolution.com/marginalrevolution/2021/02/half-doses-of-moderna-produce-neutralizing-antibodies.html</guid>
      <pubDate>Mon, 15 Feb 2021 06:04:35 GMT</pubDate>
    </item>
    <item>
      <title>Microsoft Ignite</title>
      <link>https://myignite.microsoft.com/home</link>
      <description>Microsoft Ignite | Microsoft’s annual gathering of technology leaders and practitioners delivered as a digital event experience this March.</description>
      <author> (Microsoft)</author>
      <guid>https://myignite.microsoft.com/home</guid>
      <pubDate>Mon, 15 Feb 2021 06:04:33 GMT</pubDate>
    </item>
    <item>
      <title>WinUI 3 Preview 4 (February 2021) - WinUI</title>
      <link>https://docs.microsoft.com/en-us/windows/apps/winui/winui3/</link>
      <description>Overview of the WinUI 3 Preview 4 release.</description>
      <author> (Karl-Bridge-Microsoft)</author>
      <guid>https://docs.microsoft.com/en-us/windows/apps/winui/winui3/</guid>
      <pubDate>Mon, 15 Feb 2021 06:04:29 GMT</pubDate>
    </item>
    <item>
      <title>OOPs, I did it again – Webinar recording – .NET Tools Blog | JetBrains</title>
      <link>https://blog.jetbrains.com/dotnet/2021/02/12/oops-i-did-it-again-webinar-recording/</link>
      <description>The recording of our webinar, OOPs, I did it again (untangling the mess we are making of object-oriented programming), with Jo&amp;#227;o Antunes, is now available.&amp;#160;Subscribe to our community newsletter&amp;#160;to rec</description>
      <author> (Maarten Balliauw)</author>
      <guid>https://blog.jetbrains.com/dotnet/2021/02/12/oops-i-did-it-again-webinar-recording/</guid>
      <pubDate>Mon, 15 Feb 2021 06:04:26 GMT</pubDate>
    </item>
    <item>
      <title>Creating a Windows Service with C#/.NET5 | #ifdef Windows</title>
      <link>https://devblogs.microsoft.com/ifdef-windows/creating-a-windows-service-with-c-net5/</link>
      <description>Windows Services Windows Services have been a foundation of Windows since Windows NT. They help users, or system admins, manage long-running programs that execute in their own Windows sessions. It is fairly trivial to set them up and start whenever the computer boots,</description>
      <author> (Alexandre Zollinger Chohfi Senior Software Developer Engineer, Windows Follow)</author>
      <guid>https://devblogs.microsoft.com/ifdef-windows/creating-a-windows-service-with-c-net5/</guid>
      <pubDate>Mon, 15 Feb 2021 06:04:23 GMT</pubDate>
    </item>
    <item>
      <title>How to Upgrade a UWP Application to WinUI 3.0 - Nick&amp;#39;s .NET Travels</title>
      <link>https://nicksnettravels.builttoroam.com/upgrade-uwp-to-winui/</link>
      <description>As we get close to preview 4 of WinUI 3.0 (it’s Feb 2021 already so where’s my WinUI preview4!), now’s the time to start looking at how you’re going to upgrade your UWP application to WinUI3.0. In this post we’ll look at a migration approach that will allow you to keep your UWP app running … Continue reading &amp;quot;How to Upgrade a UWP Application to WinUI 3.0&amp;quot;</description>
      <author> ()</author>
      <guid>https://nicksnettravels.builttoroam.com/upgrade-uwp-to-winui/</guid>
      <pubDate>Mon, 15 Feb 2021 06:04:20 GMT</pubDate>
    </item>
    <item>
      <title>Running custom availability tests using Azure Functions</title>
      <link>https://dotnetthoughts.net/running-custom-availability-tests-azure-functions/</link>
      <description>This article shows you how create and run custom availability tests using Azure Functions. This is an update to the blog post about monitoring WebJobs using Application Insights, since Microsoft is deprecating the Load Test and Performance features, this is the recommended alternative for monitoring availability. To get started you need to create an Azure function in C# with Timer Trigger. You can choose the trigger interval based on your requirement. This is one of the main advantage compared to Application Insights availability test feature. Next you need to add following packages.</description>
      <author> (Anuraj)</author>
      <guid>https://dotnetthoughts.net/running-custom-availability-tests-azure-functions/</guid>
      <pubDate>Mon, 15 Feb 2021 05:04:20 GMT</pubDate>
    </item>
    <item>
      <title>Hangfire - BuiltWithDot.Net</title>
      <link>https://builtwithdot.net/project/55/hangfire</link>
      <description>Hangfire is an easy way to perform fire-and-forget, delayed and recurring jobs inside ASP.NET applications. CPU and I/O intensive, long-running and short-running jobs are supported. No Windows Service / Task Scheduler required. Backed by Redis, SQL Server, SQL Azure and MSMQ. Hangfire provides a un…</description>
      <author> (Corstiaan Hesselink)</author>
      <guid>https://builtwithdot.net/project/55/hangfire</guid>
      <pubDate>Mon, 15 Feb 2021 05:04:15 GMT</pubDate>
    </item>
    <item>
      <title>I don&amp;#39;t want to do front-end anymore</title>
      <link>https://www.askonomm.com/blog/i-dont-want-to-do-frontend-anymore/</link>
      <description>Front-end is not something that makes me happy anymore, in large part due to its complexity.</description>
      <author> ()</author>
      <guid>https://www.askonomm.com/blog/i-dont-want-to-do-frontend-anymore/</guid>
      <pubDate>Mon, 15 Feb 2021 04:04:37 GMT</pubDate>
    </item>
    <item>
      <title>Why is Python Popular?</title>
      <link>https://www.codingblocks.net/podcast/why-is-python-popular/</link>
      <description>We dig into all things Python, which Allen thinks is pretty good, and it&amp;#39;s rise in popularity, while Michael and Joe go toe-to-toe over a gripe, ahem, feature.</description>
      <author> (About Michael Outlaw)</author>
      <guid>https://www.codingblocks.net/podcast/why-is-python-popular/</guid>
      <pubDate>Mon, 15 Feb 2021 03:04:46 GMT</pubDate>
    </item>
    <item>
      <title>rand-net/khan-dl</title>
      <link>https://github.com/rand-net/khan-dl</link>
      <description>Python script for downloading khanacademy.org videos and naming them. - rand-net/khan-dl</description>
      <author> (rand-net)</author>
      <guid>https://github.com/rand-net/khan-dl</guid>
      <pubDate>Mon, 15 Feb 2021 02:04:07 GMT</pubDate>
    </item>
    <item>
      <title>Karan Sharma | Running Nomad for home server</title>
      <link>https://mrkaran.dev/posts/home-server-nomad/</link>
      <description>Setting up a single node Nomad and Consul server to deploy self hosted workloads.</description>
      <author> ()</author>
      <guid>https://mrkaran.dev/posts/home-server-nomad/</guid>
      <pubDate>Sun, 14 Feb 2021 23:04:43 GMT</pubDate>
    </item>
    <item>
      <title>Multi-asset shielded pool project (MASP)</title>
      <link>https://research.metastate.dev/multi-asset_shielded_pool/</link>
      <description>This article provides an overview of the multi-asset shielded pool (MASP) project. It has been written to be accessible to all audiences, including the ones without a deep technical background. For feedback or questions, please do not hesitate to contact us: team@metastate.dev</description>
      <author> (Metastate Team)</author>
      <guid>https://research.metastate.dev/multi-asset_shielded_pool/</guid>
      <pubDate>Sun, 14 Feb 2021 23:04:40 GMT</pubDate>
    </item>
    <item>
      <title>On Witchcraft</title>
      <link>http://acko.net/blog/on-witchcraft/</link>
      <description>Lies, damned lies, and social media.</description>
      <author> (Steven Wittens)</author>
      <guid>http://acko.net/blog/on-witchcraft/</guid>
      <pubDate>Sun, 14 Feb 2021 23:04:35 GMT</pubDate>
    </item>
    <item>
      <title>Why do we write design documents?</title>
      <link>https://blog.royalsloth.eu/posts/why-do-we-write-design-documents/</link>
      <description>Starting a greenfield project is loads of fun, but you can’t avoid
the dentist’s appointment indefinitely and at some point you will have to write
that design document your boss expects to see on their table. Despite the fact that most people
learned how to write in childhood, more often than not they are struggling
when it comes to writing lengthy documents. The big blank page is daunting
and it’s hard to get into the mood for writing, because it’s time consuming and
not as fun as programming.</description>
      <author> ()</author>
      <guid>https://blog.royalsloth.eu/posts/why-do-we-write-design-documents/</guid>
      <pubDate>Sun, 14 Feb 2021 23:04:32 GMT</pubDate>
    </item>
    <item>
      <title>What I&amp;#39;m Building in 2021</title>
      <link>https://blog.kowsheek.com/what-im-building-in-2021/</link>
      <description>Since the software development landscape is continuously evolving, I find it useful to plan the technologies to build with in the year ahead.</description>
      <author> (Kowsheek)</author>
      <guid>https://blog.kowsheek.com/what-im-building-in-2021/</guid>
      <pubDate>Sun, 14 Feb 2021 23:04:29 GMT</pubDate>
    </item>
    <item>
      <title>Don&amp;#39;t Mess with Backprop: Doubts about Biologically Plausible Deep Learning</title>
      <link>https://blog.evjang.com/2021/02/backprop.html</link>
      <description>Biologically Plausible Deep Learning (BPDL) is an active research field at the intersection of Neuroscience and Machine Learning, studying h...</description>
      <author> ()</author>
      <guid>https://blog.evjang.com/2021/02/backprop.html</guid>
      <pubDate>Sun, 14 Feb 2021 23:04:24 GMT</pubDate>
    </item>
    <item>
      <title>For the Love of Macros</title>
      <link>https://matklad.github.io/2021/02/14/for-the-love-of-macros.html</link>
      <description>I’ve been re-reading Ted Kaminski blog about software design.I highly recommend all the posts, especially the earlier ones(here’s the first).He m...</description>
      <author> ()</author>
      <guid>https://matklad.github.io/2021/02/14/for-the-love-of-macros.html</guid>
      <pubDate>Sun, 14 Feb 2021 23:04:22 GMT</pubDate>
    </item>
    <item>
      <title>A Billion Mockingbirds: The Role of Journalists in Destroyed Civilization</title>
      <link>https://macrobullshit.com/archive/billion-mockingbirds/</link>
      <description>Today, we&amp;#39;re seeing the erosion of trust in companies, governments, money, and media. It&amp;#39;s difficult to replace these four core pillars, but it is necessary. Diminishing trust in these institutions makes way for alternatives and new forms of storytelling, conversation, and analysis to accompany transactions, ledgers, and hashes. Media is</description>
      <author> ()</author>
      <guid>https://macrobullshit.com/archive/billion-mockingbirds/</guid>
      <pubDate>Sun, 14 Feb 2021 23:04:20 GMT</pubDate>
    </item>
    <item>
      <title>&amp;quot;Location-Based Pay&amp;quot; - Who Are You to Complain?</title>
      <link>https://blackshaw.substack.com/p/pay</link>
      <description>I might regret writing this if I move out of London</description>
      <author> (George Blackshaw &amp;#129304;&amp;#127928;&amp;#127988;&amp;#917607;&amp;#917602;&amp;#917605;&amp;#917614;&amp;#917607;&amp;#917631;)</author>
      <guid>https://blackshaw.substack.com/p/pay</guid>
      <pubDate>Sun, 14 Feb 2021 22:04:17 GMT</pubDate>
    </item>
    <item>
      <title>OpenCQRS - BuiltWithDot.Net</title>
      <link>https://builtwithdot.net/project/57/opencqrs</link>
      <description>OpenCQRS is a .NET Core framework that can be used in many scenarios, from a simple command/query pattern to a more complex Domain Driven Design (DDD), Command Query Responsibilty Segragation (CQRS) and Event Sourcing. It includes a support for Azure Service Bus.</description>
      <author> (Corstiaan Hesselink)</author>
      <guid>https://builtwithdot.net/project/57/opencqrs</guid>
      <pubDate>Sun, 14 Feb 2021 22:04:14 GMT</pubDate>
    </item>
    <item>
      <title>Preliminary Analysis of the Invalid Minting Bug</title>
      <link>https://medium.com/avalancheavax/preliminary-analysis-of-the-invalid-minting-bug-bee940cbd9e9</link>
      <description>The Avalanche network experienced a serious issue earlier this week. This article will describe what caused it, how it was fixed.</description>
      <author> (https://medium.com/@patrickogrady)</author>
      <guid>https://medium.com/avalancheavax/preliminary-analysis-of-the-invalid-minting-bug-bee940cbd9e9</guid>
      <pubDate>Sun, 14 Feb 2021 21:05:14 GMT</pubDate>
    </item>
    <item>
      <title>cube composer</title>
      <link>https://david-peter.de/cube-composer/</link>
      <description>A puzzle game inspired by functional programming.</description>
      <author> (David Peter)</author>
      <guid>https://david-peter.de/cube-composer/</guid>
      <pubDate>Sun, 14 Feb 2021 20:04:49 GMT</pubDate>
    </item>
    <item>
      <title>Racket v8.0</title>
      <link>https://blog.racket-lang.org/2021/02/racket-v8-0.html</link>
      <description>_posted by John Clements_  Racket version 8.0 is now available from https://racket-lang.org/.  *** Racket 8.0 is here!***  Racket 8.0 marks the first release where Racket CS is the default implementation. Creating, polishing, and adopting Racket CS has be...</description>
      <author> (The Unknown Author)</author>
      <guid>https://blog.racket-lang.org/2021/02/racket-v8-0.html</guid>
      <pubDate>Sun, 14 Feb 2021 20:04:45 GMT</pubDate>
    </item>
    <item>
      <title>The complexity that lives in the GUI</title>
      <link>https://blog.royalsloth.eu/posts/the-complexity-that-lives-in-the-gui/</link>
      <description>The user interfaces are a weird thing. There are all sorts of libraries and frameworks that
are supposed to help you on your journey of writing a GUI, but despite all the best practices and
frameworks forcing you to eat your vegetables, the GUI always ends up being a ridiculous mess.
After pondering some more about this topic, I’ve finally realized what is the cause of this problem.</description>
      <author> ()</author>
      <guid>https://blog.royalsloth.eu/posts/the-complexity-that-lives-in-the-gui/</guid>
      <pubDate>Sun, 14 Feb 2021 19:04:13 GMT</pubDate>
    </item>
    <item>
      <title>GTAmodding/re3</title>
      <link>https://github.com/GTAmodding/re3</link>
      <description>GTA III, Vice City. Contribute to GTAmodding/re3 development by creating an account on GitHub.</description>
      <author> (GTAmodding)</author>
      <guid>https://github.com/GTAmodding/re3</guid>
      <pubDate>Sun, 14 Feb 2021 19:04:09 GMT</pubDate>
    </item>
    <item>
      <title>Finding Bugs in C and C++ Compilers using YARPGen</title>
      <link>https://blog.sigplan.org/2021/01/14/finding-bugs-in-c-and-c-compilers-using-yarpgen/</link>
      <description>Find out how we discovered 220 previously unknown bugs in C and C++ compilers!</description>
      <author> (Vsevolod&amp;#160;Livinskii, Dmitry Babokin, and John Regehr on Jan 14, 2021)</author>
      <guid>https://blog.sigplan.org/2021/01/14/finding-bugs-in-c-and-c-compilers-using-yarpgen/</guid>
      <pubDate>Sun, 14 Feb 2021 17:04:46 GMT</pubDate>
    </item>
    <item>
      <title>LiteDb NoSql database - BuiltWithDot.Net</title>
      <link>https://builtwithdot.net/project/89/litedb-nosql-database</link>
      <description>LiteDB is serverless database delivered in a single DLL (less than 350kb) fully written in .NET C# managed code (compatible with .NET 3.5, 4.x, NETStandard 1.3 and 2.0).

Install via NuGet or just copy DLL to your bin project folder.</description>
      <author> (Corstiaan Hesselink)</author>
      <guid>https://builtwithdot.net/project/89/litedb-nosql-database</guid>
      <pubDate>Sun, 14 Feb 2021 17:04:40 GMT</pubDate>
    </item>
    <item>
      <title>K-9 Mail is looking for funding</title>
      <link>https://k9mail.app/2021/02/14/K-9-Mail-is-looking-for-funding</link>
      <description>K-9 Mail is an open source email client focused on making it easy to chew through large volumes of email</description>
      <author> ()</author>
      <guid>https://k9mail.app/2021/02/14/K-9-Mail-is-looking-for-funding</guid>
      <pubDate>Sun, 14 Feb 2021 17:04:36 GMT</pubDate>
    </item>
    <item>
      <title>no dogma podcast - powered by FeedBurner</title>
      <link>https://feeds.feedburner.com/NoDogmaPodcast</link>
      <description></description>
      <author> ()</author>
      <guid>https://feeds.feedburner.com/NoDogmaPodcast</guid>
      <pubDate>Sun, 14 Feb 2021 15:04:43 GMT</pubDate>
    </item>
    <item>
      <title>Secure ASP.NET Core Web API using JWT Authentication - Coding Sonata</title>
      <link>http://codingsonata.com/secure-asp-net-core-web-api-using-jwt-authentication/</link>
      <description>This is a step-by-step tutorial to learn how to secure ASP.NET Core Web API using JWT Authentication (JSON Web Token).</description>
      <author> (https://www.facebook.com/aram1987)</author>
      <guid>http://codingsonata.com/secure-asp-net-core-web-api-using-jwt-authentication/</guid>
      <pubDate>Sun, 14 Feb 2021 13:04:20 GMT</pubDate>
    </item>
    <item>
      <title>The worst of the two worlds: Excel meets Outlook | </title>
      <link>https://adepts.of0x.cc/vba-outlook/</link>
      <description>Turning Outlook into a keylogger via VBA macros</description>
      <author> ()</author>
      <guid>https://adepts.of0x.cc/vba-outlook/</guid>
      <pubDate>Sun, 14 Feb 2021 12:04:37 GMT</pubDate>
    </item>
    <item>
      <title>BTCPay Server - BuiltWithDot.Net</title>
      <link>https://builtwithdot.net/project/58/btcpay-server</link>
      <description>Open source payment processor for Bitcoin and altcoins.

The project is using:

* Entity Framework Core for Database access. 
* DBreeze for text indexing
* XUnit for unit testing
* Support both Postgres and SQLite

The deployment method support Azure Deploy Click button, which properly set…</description>
      <author> (Corstiaan Hesselink)</author>
      <guid>https://builtwithdot.net/project/58/btcpay-server</guid>
      <pubDate>Sun, 14 Feb 2021 12:04:34 GMT</pubDate>
    </item>
    <item>
      <title>Pride D20 Enamel Pins</title>
      <link>https://www.kickstarter.com/projects/aneki/pride-d20-enamel-pins</link>
      <description>Pride D20 Enamel Pins, designed by @SoMattyGameZ and brought to you by @TabletopSwag</description>
      <author> ()</author>
      <guid>https://www.kickstarter.com/projects/aneki/pride-d20-enamel-pins</guid>
      <pubDate>Sun, 14 Feb 2021 09:04:25 GMT</pubDate>
    </item>
    <item>
      <title>BuildStats.info - BuiltWithDot.Net</title>
      <link>https://builtwithdot.net/project/59/buildstats.info</link>
      <description>BuildStats.info is an open RESTful API which can generate SVG widgets for displaying build history charts and NuGet/MyGet badges in public Git repositories. It currently supports build history charts for AppVeyor, TravisCI and CircleCI builds.</description>
      <author> (Corstiaan Hesselink)</author>
      <guid>https://builtwithdot.net/project/59/buildstats.info</guid>
      <pubDate>Sun, 14 Feb 2021 08:04:24 GMT</pubDate>
    </item>
    <item>
      <title>Statement on New York Times Article</title>
      <link>https://astralcodexten.substack.com/p/statement-on-new-york-times-article</link>
      <description>...</description>
      <author> (Scott Alexander)</author>
      <guid>https://astralcodexten.substack.com/p/statement-on-new-york-times-article</guid>
      <pubDate>Sun, 14 Feb 2021 07:04:28 GMT</pubDate>
    </item>
    <item>
      <title>Azure Functions Updates Include Moving .NET Outside the Runtime </title>
      <link>https://www.infoq.com/news/2021/02/azure-functions-dotnet-runtime/</link>
      <description>Azure Functions is moving to an out-of-process model that runs a .NET worker process alongside the runtime. The Azure Functions team also announced public preview support for Node.js 14, general availability of custom handlers and Java based functions running on Linux in its January update.</description>
      <author> (Thiago Cust&amp;#243;dio
                
            
        Follow)</author>
      <guid>https://www.infoq.com/news/2021/02/azure-functions-dotnet-runtime/</guid>
      <pubDate>Sun, 14 Feb 2021 07:04:22 GMT</pubDate>
    </item>
  </channel>
</rss>