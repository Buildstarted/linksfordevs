<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>How to Save a List to a Text File in C# - Code Maze</title>
      <link>https://code-maze.com/csharp-how-to-save-a-list-to-a-text-file/</link>
      <description>Explore the ways in C# to save a list to text files, with insights on choosing the right method for our needs.</description>
      <author> (Code Maze)</author>
      <guid>https://code-maze.com/csharp-how-to-save-a-list-to-a-text-file/</guid>
      <pubDate>Tue, 16 Jan 2024 13:02:43 GMT</pubDate>
    </item>
    <item>
      <title>Stored Procedures in EFCore 8 Explained</title>
      <link>https://goatreview.com/stored-procedures-efcore-explained/</link>
      <description>In an era where data management and efficiency are paramount, understanding and utilizing stored procedures within Entity Framework Core (EFCore) and SQLServer is more crucial than ever.


From the basics of their creation in SQL to their practical application in EFCore, this article aims to enhance your database management strategies,</description>
      <author> (Pierre Belin)</author>
      <guid>https://goatreview.com/stored-procedures-efcore-explained/</guid>
      <pubDate>Tue, 16 Jan 2024 11:03:06 GMT</pubDate>
    </item>
    <item>
      <title>.NET 8 &amp;#128293;&amp;#128640; : Guide to Telemetry and Metrics - Exploring new Features</title>
      <link>https://youtube.com/watch?v=EAM506_H-vY</link>
      <description>In this video we will discussed the new features with telemetry in .NET 8Support me on Patreon to access the source code:https://www.patreon.com/mohamadlawan...</description>
      <author> (Mohamad Lawand
  
  
  
    Mohamad Lawand
  






    •)</author>
      <guid>https://youtube.com/watch?v=EAM506_H-vY</guid>
      <pubDate>Tue, 16 Jan 2024 11:03:06 GMT</pubDate>
    </item>
    <item>
      <title>Weekly Update 382</title>
      <link>https://youtube.com/watch?v=sp2KH0TMvtQ</link>
      <description>Live From Oslo; NDC Security and Sydney; USB-C Standardised; Capelli Sport Responded; Hathaway Data Breach; Sponsored by Kolidehttps://www.troyhunt.com/weekl...</description>
      <author> (Simplilearn
  
  
  
    Simplilearn
  





    •)</author>
      <guid>https://youtube.com/watch?v=sp2KH0TMvtQ</guid>
      <pubDate>Tue, 16 Jan 2024 10:02:46 GMT</pubDate>
    </item>
    <item>
      <title>How to Escape the Backslash Character in C# - Code Maze</title>
      <link>https://code-maze.com/csharp-escape-the-backslash-character/</link>
      <description>In this article, we will learn how to escape the backslash character in C# by using different techniques for achieving the same result.</description>
      <author> (Code Maze)</author>
      <guid>https://code-maze.com/csharp-escape-the-backslash-character/</guid>
      <pubDate>Tue, 16 Jan 2024 09:02:22 GMT</pubDate>
    </item>
    <item>
      <title>Bluesky has launched RSS feeds</title>
      <link>https://openrss.org/blog/bluesky-has-launched-rss-feeds</link>
      <description>Now that Bluesky&amp;#39;s got its own RSS feeds, here&amp;#39;s what you should know</description>
      <author> ()</author>
      <guid>https://openrss.org/blog/bluesky-has-launched-rss-feeds</guid>
      <pubDate>Tue, 16 Jan 2024 09:02:19 GMT</pubDate>
    </item>
    <item>
      <title>Episode 484 - Production LiveSite Review</title>
      <link>https://azpodcast.azurewebsites.net/post/Episode-484-Production-LiveSite-Review</link>
      <description>The Azure Podcast</description>
      <author> (Sujit D&amp;#39;Mello)</author>
      <guid>https://azpodcast.azurewebsites.net/post/Episode-484-Production-LiveSite-Review</guid>
      <pubDate>Tue, 16 Jan 2024 07:02:33 GMT</pubDate>
    </item>
    <item>
      <title>David Adam (@zanchey@aus.social)</title>
      <link>https://aus.social/@zanchey/111760402786767224</link>
      <description>#fishshell rewrite-it-in #rust progress, 2024-01-15

87029 rust lines added
76776 / 76776 C++ lines removed
 ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ 100%

--

So, we&amp;#39;re done? Well, yes and no.</description>
      <author> (By zanchey)</author>
      <guid>https://aus.social/@zanchey/111760402786767224</guid>
      <pubDate>Tue, 16 Jan 2024 07:02:33 GMT</pubDate>
    </item>
    <item>
      <title>An alternative to AutoMapper</title>
      <link>https://steven-giesel.com/blogPost/3368bf96-648e-4fa2-9c6c-be71e40ac4cc</link>
      <description>I am not the biggest fan of AutoMapper. It starts with good intentions but often ends up being a big mess. I have seen it used in many projects, and the configuration of the mappings is often scattered all over the place, and or they are huge!
</description>
      <author> ()</author>
      <guid>https://steven-giesel.com/blogPost/3368bf96-648e-4fa2-9c6c-be71e40ac4cc</guid>
      <pubDate>Tue, 16 Jan 2024 06:03:06 GMT</pubDate>
    </item>
    <item>
      <title>A Range kata implementation in F#</title>
      <link>https://blog.ploeh.dk/2024/01/15/a-range-kata-implementation-in-f/</link>
      <description>This time with some property-based testing.</description>
      <author> (Mark Seemann)</author>
      <guid>https://blog.ploeh.dk/2024/01/15/a-range-kata-implementation-in-f/</guid>
      <pubDate>Tue, 16 Jan 2024 06:03:06 GMT</pubDate>
    </item>
    <item>
      <title>Bug Thread</title>
      <link>https://xkcd.com/2881/</link>
      <description></description>
      <author> (About)</author>
      <guid>https://xkcd.com/2881/</guid>
      <pubDate>Tue, 16 Jan 2024 06:03:06 GMT</pubDate>
    </item>
    <item>
      <title>ZK HACK IV - Kick off &amp;amp; ZK Jargon Decoder - Jan 16 | RingCentral Events</title>
      <link>https://hopin.com/events/zkhackiv-1</link>
      <description>Get tickets to ZK HACK IV - Kick off &amp;amp; ZK Jargon Decoder, taking place 01/16/2024. Hopin is your source for engaging events and experiences.</description>
      <author> ()</author>
      <guid>https://hopin.com/events/zkhackiv-1</guid>
      <pubDate>Tue, 16 Jan 2024 04:03:35 GMT</pubDate>
    </item>
    <item>
      <title>Release History Of SQLite</title>
      <link>https://www.sqlite.org/changes.html#version_3_45_0</link>
      <description></description>
      <author> ()</author>
      <guid>https://www.sqlite.org/changes.html#version_3_45_0</guid>
      <pubDate>Tue, 16 Jan 2024 03:04:18 GMT</pubDate>
    </item>
    <item>
      <title>ABC of FSRS</title>
      <link>https://github.com/open-spaced-repetition/fsrs4anki/wiki/ABC-of-FSRS</link>
      <description>A modern Anki custom scheduling based on free spaced repetition scheduler algorithm - open-spaced-repetition/fsrs4anki</description>
      <author> (open-spaced-repetition)</author>
      <guid>https://github.com/open-spaced-repetition/fsrs4anki/wiki/ABC-of-FSRS</guid>
      <pubDate>Tue, 16 Jan 2024 02:06:04 GMT</pubDate>
    </item>
    <item>
      <title>Introducing .NET MAUI Generic Item Templates</title>
      <link>https://egvijayanand.in/2024/01/16/introducing-dotnet-maui-generic-item-templates/</link>
      <description>Create items of any type from a single template. Available for both XAML and C#.</description>
      <author> (By Vijay Anand E G)</author>
      <guid>https://egvijayanand.in/2024/01/16/introducing-dotnet-maui-generic-item-templates/</guid>
      <pubDate>Tue, 16 Jan 2024 01:05:23 GMT</pubDate>
    </item>
    <item>
      <title>Bringing the full power of Copilot to more people and businesses - The Official Microsoft Blog</title>
      <link>https://blogs.microsoft.com/blog/2024/01/15/bringing-the-full-power-of-copilot-to-more-people-and-businesses/</link>
      <description>As we kick off a new year, we’re thrilled to see people increasingly using and loving Microsoft Copilot for work and life. Our goal is to empower every person and every organization on the planet to achieve more by bringing Copilot, the everyday AI companion, to millions of people around the world. We have reached...</description>
      <author> (Yusuf Mehdi)</author>
      <guid>https://blogs.microsoft.com/blog/2024/01/15/bringing-the-full-power-of-copilot-to-more-people-and-businesses/</guid>
      <pubDate>Tue, 16 Jan 2024 01:05:22 GMT</pubDate>
    </item>
    <item>
      <title>Building Resilience: How to form lasting psychological safety - Richard Bown</title>
      <link>https://richardwbown.com/building-resilience-how-to-form-lasting-psychological-safety/</link>
      <description>You can make people happier by giving them the chance to speak up and have a say in what constitutes the work they do.</description>
      <author> (Richard W Bown)</author>
      <guid>https://richardwbown.com/building-resilience-how-to-form-lasting-psychological-safety/</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:32 GMT</pubDate>
    </item>
    <item>
      <title>Kafka vs Redpanda Performance - Part 1 - 4 vs 50 producers — Jack Vanlightly</title>
      <link>https://jack-vanlightly.com/analyses/2023/5/15/kafka-vs-redpanda-performance-part-1-4-vs-50-producers</link>
      <description>The Redpanda benchmark and  TCO analysis  claims that Redpanda needs only 3 brokers on the i3en.6xlarge to reach 1 GB/s and Apache Kafka needs 9 brokers and Kafka still shows inferior end-to-end latency to Redpanda. I decided to see if I could reproduce those claims and see if the Redpanda performan</description>
      <author> ()</author>
      <guid>https://jack-vanlightly.com/analyses/2023/5/15/kafka-vs-redpanda-performance-part-1-4-vs-50-producers</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:30 GMT</pubDate>
    </item>
    <item>
      <title>I Filed Charges Against Cumulus Media for Maintaining 17 Illegal Handbook Rules – Matt Bruenig Dot Com</title>
      <link>https://mattbruenig.com/2024/01/15/i-filed-charges-against-cumulus-media-for-maintaining-17-illegal-handbook-rules/</link>
      <description>Today, I personally filed an unfair labor practice charge against Cumulus Media, Inc. The charge alleges that the company maintains an employee handbook containing 17 rules that violate Section 8(a)(1) of the National Labor Relations Act. Below, I have uploaded the charge, a complaint from a federal district court case that helps prove the authenticity of the handbook, and a document listing all of the illegal rules and some explanation about why they are illegal and how I was able to get the handbook.</description>
      <author> ()</author>
      <guid>https://mattbruenig.com/2024/01/15/i-filed-charges-against-cumulus-media-for-maintaining-17-illegal-handbook-rules/</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:30 GMT</pubDate>
    </item>
    <item>
      <title>A Practical Guide to Modular Monoliths with .NET</title>
      <link>https://chrlschn.dev/blog/2024/01/a-practical-guide-to-modular-monoliths/</link>
      <description>Feeling too much friction from your microservices architecture? It&amp;#39;s time to revisit monoliths.</description>
      <author> ()</author>
      <guid>https://chrlschn.dev/blog/2024/01/a-practical-guide-to-modular-monoliths/</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:30 GMT</pubDate>
    </item>
    <item>
      <title>Year of the challenge (or, the tyranny of friendship)</title>
      <link>https://moxie.org/stories/year-of-the-challenge/</link>
      <description>Year of the challenge (or, the tyranny of friendship)</description>
      <author> ()</author>
      <guid>https://moxie.org/stories/year-of-the-challenge/</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:30 GMT</pubDate>
    </item>
    <item>
      <title>Super Fast Reader Mode for the Entire Web, with Dillo&amp;#160;Plus</title>
      <link>https://duncanlock.net/blog/2024/01/04/super-fast-reader-mode-for-the-entire-web-with-dillo-plus/</link>
      <description>Want </description>
      <author> (Duncan Lock)</author>
      <guid>https://duncanlock.net/blog/2024/01/04/super-fast-reader-mode-for-the-entire-web-with-dillo-plus/</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:29 GMT</pubDate>
    </item>
    <item>
      <title>On Developer Empowerment</title>
      <link>https://mattkaras.info/posts/empowerment/</link>
      <description>One word I’m always wary of is “empowerment”. The hairs on the back of my neck go up when I hear something like this.
We should make our employees feel empowered to do X. What does this mean? Can a manager empower their team with mere words?
Johnny - you should feel empowered to overcome the obstacles you&amp;#39;re currently facing. Thank you sir for that sage advice. Thanks I’m cured</description>
      <author> ()</author>
      <guid>https://mattkaras.info/posts/empowerment/</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:29 GMT</pubDate>
    </item>
    <item>
      <title>&amp;lt;span class=&amp;quot;caps&amp;quot;&amp;gt;LLM&amp;lt;/span&amp;gt; Assisted&amp;#160;Moderation</title>
      <link>https://blog.nawaz.org/posts/2024/Jan/llm-assisted-moderation/</link>
      <description>Moderating online forums is labor intensive. Burnout is common. It’s
almost a given that if a subreddit gets to a certain size, the quality
will drop, even with active moderation - moderators simply cannot
handle the&amp;#160;scale.</description>
      <author> ()</author>
      <guid>https://blog.nawaz.org/posts/2024/Jan/llm-assisted-moderation/</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:29 GMT</pubDate>
    </item>
    <item>
      <title>On Search In Space And Time</title>
      <link>https://awakari.com/articles/spacetime-search.html</link>
      <description>The role of a chance in our life
                    
                    is great.
                    It&amp;#39;s always about finding a relevant opportunity.
                    Whether it&amp;#39;s a dream job, car, home or a partner.</description>
      <author> ()</author>
      <guid>https://awakari.com/articles/spacetime-search.html</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:29 GMT</pubDate>
    </item>
    <item>
      <title>Immediate Mode GUI Programming</title>
      <link>https://eliasnaur.com/blog/immediate-mode-gui-programming</link>
      <description>Articles and programs by Elias Naur</description>
      <author> ()</author>
      <guid>https://eliasnaur.com/blog/immediate-mode-gui-programming</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:29 GMT</pubDate>
    </item>
    <item>
      <title>Not Another Technical Debt Article</title>
      <link>https://jimmyhmiller.github.io/not-another-technical-debt-article</link>
      <description>There are three types of technical debt articles:</description>
      <author> (Jimmy Miller)</author>
      <guid>https://jimmyhmiller.github.io/not-another-technical-debt-article</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:28 GMT</pubDate>
    </item>
    <item>
      <title>I Used Netscape Composer in 2024 | Pier-Luc Brault - Personal Website</title>
      <link>https://plbrault.com/blog-posts/i-used-netscape-composer-in-2024-en/</link>
      <description>The story of a geeky twist on &amp;quot;Party like it&amp;#39;s 1999&amp;quot;.</description>
      <author> (Pier-Luc Brault2024-01-14&amp;#160;7&amp;#160;minutes)</author>
      <guid>https://plbrault.com/blog-posts/i-used-netscape-composer-in-2024-en/</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:28 GMT</pubDate>
    </item>
    <item>
      <title>Long exposure images from videos</title>
      <link>https://nithinbekal.com/posts/long-exposure-video/</link>
      <description>Nithin Bekal&amp;#39;s blog about programming - Ruby, Rails, Vim, Elixir.</description>
      <author> (Nithin Bekal)</author>
      <guid>https://nithinbekal.com/posts/long-exposure-video/</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:26 GMT</pubDate>
    </item>
    <item>
      <title>Why you struggle to finish what you start - Ramblings of a Software Engineer</title>
      <link>https://rhys.me/why-you-struggle-to-finish-what-you-start/</link>
      <description>In the post, we explore why you struggle to finish all projects we start. Why we go from being over optimistic to being ready to quit and move on.</description>
      <author> ()</author>
      <guid>https://rhys.me/why-you-struggle-to-finish-what-you-start/</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:25 GMT</pubDate>
    </item>
    <item>
      <title>High-speed 10Gbps full-mesh network based on USB4 for just $47.98</title>
      <link>https://fangpenlin.com/posts/2024/01/14/high-speed-usb4-mesh-network/</link>
      <description>Fang-Pen Lin&amp;#39;s blog about programming</description>
      <author> (Fang-Pen Lin)</author>
      <guid>https://fangpenlin.com/posts/2024/01/14/high-speed-usb4-mesh-network/</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:25 GMT</pubDate>
    </item>
    <item>
      <title>Way Enough - Fine-tuning gpt-3.5-turbo to learn to play &amp;quot;Connections&amp;quot;</title>
      <link>https://www.danielcorin.com/posts/2024/fine-tuning-connections/</link>
      <description></description>
      <author> ()</author>
      <guid>https://www.danielcorin.com/posts/2024/fine-tuning-connections/</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:25 GMT</pubDate>
    </item>
    <item>
      <title>Where are the good email apps?</title>
      <link>https://notes.ghed.in/posts/2024/good-email-apps-where/</link>
      <description>Am I too comfortable using Apple Mail? After all, it’s almost a decade using it daily. After going through several other email apps this weekend, I got the i...</description>
      <author> ()</author>
      <guid>https://notes.ghed.in/posts/2024/good-email-apps-where/</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:25 GMT</pubDate>
    </item>
    <item>
      <title>Advantage and disadvantage</title>
      <link>https://pianykh.com/blog/posts/2024-01-07-advantage-and-disadvantage.html</link>
      <description>Let’s talk Dungeons &amp;amp; Dragons!
I’ve been spending a bit of time with Baldur’s Gate 3, rolling dice, passing and failing checks.
Usually, to do an ability check you roll a 20-sided die (d20), compare what you rolled with a difficulty class (DC) of the check, and if it’s greater than or equal to the DC — you succeed the check, otherwise you fail.</description>
      <author> ()</author>
      <guid>https://pianykh.com/blog/posts/2024-01-07-advantage-and-disadvantage.html</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:25 GMT</pubDate>
    </item>
    <item>
      <title>emails I received, the collection</title>
      <link>https://daniel.haxx.se/blog/2024/01/12/emails-i-received-the-collection/</link>
      <description></description>
      <author> ()</author>
      <guid>https://daniel.haxx.se/blog/2024/01/12/emails-i-received-the-collection/</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:25 GMT</pubDate>
    </item>
    <item>
      <title>The roadmap to Product/Market Fit… maybe</title>
      <link>https://longform.asmartbear.com/product-market-fit-formula/</link>
      <description>This eight-step process brought WP Engine from an idea to a Unicorn. While there are other roads to Product/Market Fit, consider copying some of these ideas.</description>
      <author> (Jason Cohen)</author>
      <guid>https://longform.asmartbear.com/product-market-fit-formula/</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:25 GMT</pubDate>
    </item>
    <item>
      <title>Debugging Tip: this is usually %rdi</title>
      <link>https://blog.kenanb.com/code/low-level/2024/01/14/debugging-tip-this-is-usually-rdi.html</link>
      <description>Assembly-level debugging tip for a C++-heavy project.</description>
      <author> (Kenan B&amp;#246;l&amp;#252;kbaşı)</author>
      <guid>https://blog.kenanb.com/code/low-level/2024/01/14/debugging-tip-this-is-usually-rdi.html</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:25 GMT</pubDate>
    </item>
    <item>
      <title>The Backwards Compatibility of Text</title>
      <link>http://www.chriswarbo.net/blog/2024-01-15-backwards_compatibility.html</link>
      <description>I was watching some of Matt Parker’s Stand-up
Maths videos recently, and a few of them involved quirks of the
modern world which are work-arounds for problems that no longer exist.
In particular, the
staggered layout of computer keyboards (to avoid the levers of a
typewriter from hitting each other), and the
29.97Hz framerate of NTSC video (to prevent colour information
interfering with black-and-white receivers).</description>
      <author> (Chris Warburton)</author>
      <guid>http://www.chriswarbo.net/blog/2024-01-15-backwards_compatibility.html</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:24 GMT</pubDate>
    </item>
    <item>
      <title>Highlighting with isearch</title>
      <link>http://yummymelon.com/devnull/highlighting-with-isearch.html</link>
      <description>Happy New Year! Here’s a follow-up to my last post on improving isearch usability using a Transient menu. Last December I had the opportunity to impromptu demo it online at the Emacs Berlin...</description>
      <author> ()</author>
      <guid>http://yummymelon.com/devnull/highlighting-with-isearch.html</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:24 GMT</pubDate>
    </item>
    <item>
      <title>The Simplest Message Bus (in python)</title>
      <link>https://albertlatham.com/the-simplest-message-bus/</link>
      <description>I came up with this awhile ago when I was playing with cooperative LLM agents. It is the simplest implementation of a message bus that I could think of. The architecture is very simple. Let&amp;#39;s start with the following barebones python.
def main(): print(&amp;quot;Hello, world.&amp;quot;) if __name__==&amp;quot;__main__&amp;quot;: main() Let&amp;#39;s begin by looking at how we interact with our bus. In the main() function, add the following:
bus = MessageBus() def callback(message: str): print(f&amp;quot;Received message &amp;#39;{message}&amp;#39;&amp;quot;) Now we need to sort out the bus.</description>
      <author> ()</author>
      <guid>https://albertlatham.com/the-simplest-message-bus/</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:24 GMT</pubDate>
    </item>
    <item>
      <title>PIDs: Creating Stable Control in Games</title>
      <link>https://azeemba.com/posts/pids-creating-stable-control-in-games.html</link>
      <description>Using a game use-case to motivate and explain PIDs</description>
      <author> (Azeem Bande-Ali)</author>
      <guid>https://azeemba.com/posts/pids-creating-stable-control-in-games.html</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:24 GMT</pubDate>
    </item>
    <item>
      <title>Generalists are rare gems | Dmytro Krasun</title>
      <link>https://dmytrokrasun.com/posts/generalists-are-rare-gems/</link>
      <description>One day I read the code of Chromium in C++ to optimize screenshot rendering. The other day, I tuned a database engine reasonably well because I wrote a toy engine myself and understood the underlying logic. I used Python to work with neural networks and recently wrote TypeScript to render UIs.</description>
      <author> ()</author>
      <guid>https://dmytrokrasun.com/posts/generalists-are-rare-gems/</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:24 GMT</pubDate>
    </item>
    <item>
      <title>Let&amp;#39;s Help Org Mode Escape From Emacs</title>
      <link>https://avi.press/posts/2024-01-15-standalone-org</link>
      <description>Avi Press | January 15, 2024</description>
      <author> (Avi Press)</author>
      <guid>https://avi.press/posts/2024-01-15-standalone-org</guid>
      <pubDate>Mon, 15 Jan 2024 23:06:24 GMT</pubDate>
    </item>
    <item>
      <title>Teach Yourself Programming in Ten Years</title>
      <link>https://norvig.com/21-days.html</link>
      <description>Why is everyone in such a rush?

Walk into any bookstore, and you&amp;#39;ll see how to Teach Yourself Java
in 24 Hours alongside endless variations offering to teach C,
SQL, Ruby, Algorithms, and so on in a few days or hours.  
The Amazon advanced search for [title: teach,
yourself, hours, since: 2000 and found 512 such books. Of the top ten, nine are programming books (the other is about bookkeeping). Similar results come from replacing &amp;quot;teach yourself&amp;quot; with &amp;quot;learn&amp;quot; or &amp;quot;hours&amp;quot; with &amp;quot;days.&amp;quot;
 

The conclusion is that either people are in a big rush to learn
about programming, or that programming is somehow fabulously easier to
learn than anything else.  
Felleisen et al.
give a nod to this trend in their book How to Design Programs, when they say
&amp;quot;Bad programming is easy. Idiots can learn it in 21 days,
even if they are dummies.&amp;quot; The Abtruse Goose comic also had their take.

Let&amp;#39;s analyze what a title like Teach Yourself C++ in 24 Hours
could mean:


Teach Yourself: In 24 hours you won&amp;#39;t have time to write several
significant programs, and learn from your successes and failures with
them.  You won&amp;#39;t have time to work with an experienced programmer and
understand what it is like to live in a C++ environment.  In short, you
won&amp;#39;t have time to learn much.  So the book can only be talking about a
superficial familiarity, not a deep understanding. As Alexander Pope said,
a little learning is a dangerous thing.C++: In 24 hours you might be able to learn some of the syntax of
C++ (if you already know another language), but you couldn&amp;#39;t
learn much about how to use the language.  In short, if you were, say, a
Basic programmer, you could learn to write programs in the style of
Basic using C++ syntax, but you couldn&amp;#39;t learn what C++ is
actually good (and bad) for.  So what&amp;#39;s the point?  Alan
Perlis once said: &amp;quot;A language that doesn&amp;#39;t affect the way you
think about programming, is not worth knowing&amp;quot;.  One possible point is
that you have to learn a tiny bit of C++ (or more likely, something
like JavaScript or Processing) because you need to interface with an
existing tool to accomplish a specific task. But then you&amp;#39;re not
learning how to program; you&amp;#39;re learning to accomplish that task.in 24 Hours: Unfortunately, this is not enough, as the next
section shows.


Teach Yourself Programming in Ten Years

Researchers (Bloom
(1985), Bryan &amp;amp; Harter (1899), Hayes
(1989), Simmon &amp;amp; Chase (1973)) have shown it
takes about ten years to develop expertise in any of a wide variety of
areas, including chess playing, music composition, telegraph
operation, painting, piano playing, swimming, tennis, and research in
neuropsychology and topology.  The key is deliberative
practice: not just doing it again and again, but challenging yourself
with a task that is just beyond your current ability, trying it,
analyzing your performance while and after doing it, and correcting
any mistakes.  Then repeat.  And repeat again.  There appear to be no
real shortcuts: even Mozart, who was a musical prodigy at age 4, took
13 more years before he began to produce world-class music.  In
another genre, the Beatles seemed to burst onto the scene with a
string of #1 hits and an appearance on the Ed Sullivan show in 1964.
But they had been playing small clubs in Liverpool and Hamburg since
1957, and while they had mass appeal early on, their first great
critical success, Sgt. Peppers, was released in 1967. 

Malcolm
Gladwell has popularized the idea, although he concentrates on 10,000 hours, not 10 years.
Henri Cartier-Bresson (1908-2004) had another metric: &amp;quot;Your first 10,000 photographs are your  worst.&amp;quot; (He didn&amp;#39;t
anticipate that with digital cameras, some people can reach that mark in a week.)
True expertise may take a lifetime:
Samuel Johnson (1709-1784) said &amp;quot;Excellence in any department can be
attained only by the labor of a lifetime; it is not to be purchased at
a lesser price.&amp;quot;  And Chaucer (1340-1400) complained &amp;quot;the lyf so short, the craft
so long to lerne.&amp;quot; Hippocrates (c. 400BC) is known for the excerpt &amp;quot;ars longa,
vita brevis&amp;quot;, which is part of the longer quotation &amp;quot;Ars longa, vita
brevis, occasio praeceps, experimentum periculosum, iudicium
difficile&amp;quot;, which in English renders as &amp;quot;Life is short, [the] craft
long, opportunity fleeting, experiment treacherous, judgment
difficult.&amp;quot;  

Of course, no single number can be the final answer: it doesn&amp;#39;t seem reasonable
to assume that all skills (e.g., programming, chess playing, checkers playing, and music playing)
could all require exactly the same amount of time to master, nor that all people
will take exactly the same amount of time. As 
Prof. 
K. Anders Ericsson puts it, &amp;quot;In most domains it&amp;#39;s remarkable how much time even the most
talented individuals need in order to reach the highest levels of performance. The 10,000 hour number just gives you a sense that we&amp;#39;re talking years of 10 to 20 hours a week which those who some people would argue are the most innately talented individuals still need to get to the highest level.&amp;quot;

So You Want to be a Programmer

Here&amp;#39;s my recipe for programming success:


 Get interested in programming, and do some because it is fun.  Make sure
that it keeps being enough fun so that you will be willing to put in your ten years/10,000 hours. Program.  The best kind of learning is learning
by doing.  To put it more technically, &amp;quot;the maximal level of
performance for individuals in a given domain is not attained
automatically as a function of extended experience, but the level of
performance can be increased even by highly experienced individuals as
a result of deliberate efforts to improve.&amp;quot; (p. 366)
and &amp;quot;the most effective learning requires a well-defined task with an
appropriate difficulty level for the particular individual,
informative feedback, and opportunities for repetition and corrections
of errors.&amp;quot; (p. 20-21)  The book 
Cognition in Practice: Mind, Mathematics, and Culture in Everyday
Life is an interesting 
reference for this viewpoint. Talk with other programmers; read other programs.  This is more important
than any book or training course. If you want, put in four years at a college (or more at a
graduate school).  This will give you access to some jobs that require
credentials, and it will give you a deeper understanding of the field,
but if you don&amp;#39;t enjoy school, you can (with some dedication) get
similar experience on your own or on the job. In any case, book learning alone won&amp;#39;t
be enough. &amp;quot;Computer science education cannot make anybody an expert
programmer any more than studying brushes and pigment can make
somebody an expert painter&amp;quot; says Eric Raymond, author of The New
Hacker&amp;#39;s Dictionary. One of the best programmers I ever hired had
only a High School degree; he&amp;#39;s produced a lot of great software, has his own news group, and made enough in stock options to buy his own nightclub. Work on projects with other programmers. Be the best programmer
on some projects; be the worst on some others.  When you&amp;#39;re the best,
you get to test your abilities to lead a project, and to inspire
others with your vision.  When you&amp;#39;re the worst, you learn what the
masters do, and you learn what they don&amp;#39;t like to do (because they
make you do it for them). Work on projects after other programmers. 
Understand a program written by someone else. See what it takes to
understand and fix it when the original programmers are not
around. Think about how to design your programs to make it easier for
those who will maintain them after you. Learn at least a half dozen programming languages.  Include one
language that emphasizes class abstractions (like Java or C++), one that
emphasizes functional abstraction (like Lisp or ML or Haskell), one
that supports syntactic abstraction (like Lisp), one
that supports declarative specifications (like Prolog or C++
templates), and
one that emphasizes parallelism (like Clojure or Go).   Remember that there is a &amp;quot;computer&amp;quot; in &amp;quot;computer science&amp;quot;. Know
how long it takes your computer to execute an instruction, fetch a
word from memory (with and without a cache miss), read consecutive words from disk, and seek to a new location on disk. (Answers here.)  Get involved in a language
standardization effort.  It could be the ANSI C++ committee, or it
could be deciding if your local coding style will have 2 or 4 space
indentation levels.  Either way, you learn about what other people
like in a language, how deeply they feel so, and perhaps even a little
about why they feel so. Have the good sense to get off the language standardization effort as
quickly as possible.


With all that in mind, its questionable how far you can get just by
book learning.  Before my first child was born, I read all the How
To books, and still felt like a clueless novice.  30 Months later,
when my second child was due, did I go back to the books for a
refresher? No.  Instead, I relied on my personal experience, which
turned out to be far more useful  and reassuring
to me than the thousands of pages written
by experts.

Fred Brooks, in his essay No Silver Bullet 
identified a three-part plan for finding great
software designers:


   Systematically identify top designers as early as possible.Assign a career mentor to be responsible for the development of the prospect and carefully keep a career file.Provide opportunities for growing designers to interact and stimulate each other.

This assumes that some people already have the qualities necessary for
being a great designer; the job is to properly coax them along.  Alan
Perlis put it more succinctly: &amp;quot;Everyone can be taught to sculpt:
Michelangelo would have had to be taught how not to. So it is with the
great programmers&amp;quot;.  Perlis is saying that the greats have some
internal quality that transcends their training.  But where does the
quality come from?  Is it innate?  Or do they develop it through
diligence?  As Auguste Gusteau (the fictional chef in
Ratatouille) puts it, &amp;quot;anyone can cook, but only the fearless
can be great.&amp;quot;  I think of it more as willingness to devote a large
portion of one&amp;#39;s life to deliberative practice.  But maybe
fearless is a way to summarize that. Or, as Gusteau&amp;#39;s critic,
Anton Ego, says: &amp;quot;Not everyone can become a great artist, but a great
artist can come from anywhere.&amp;quot;


So go ahead and buy that Java/Ruby/Javascript/PHP book; you&amp;#39;ll
probably get some use out of it.  But you won&amp;#39;t change your life, or
your real overall expertise as a programmer in 24 hours or 21 days.  
How about working hard to continually improve over 24 months?
Well, now you&amp;#39;re starting to get somewhere...

References


Bloom, Benjamin (ed.) Developing Talent in Young People, Ballantine, 1985.


Brooks, Fred, No Silver Bullets, IEEE Computer, vol. 20, no. 4, 1987, p. 10-19.


Bryan, W.L. &amp;amp; Harter, N. &amp;quot;Studies on the telegraphic language:
The acquisition of a hierarchy of habits. Psychology Review,
1899, 8, 345-375

Hayes, John R., Complete Problem Solver Lawrence Erlbaum, 1989.


Chase, William G. &amp;amp; Simon, Herbert A.  
&amp;quot;Perception in Chess&amp;quot;
Cognitive Psychology, 1973, 4, 55-81.

Lave, Jean, Cognition in Practice: Mind, Mathematics, and Culture in Everyday
Life, Cambridge University Press, 1988.


Answers

Approximate timing for various operations on a typical PC:

execute typical instruction 1/1,000,000,000 sec = 1 nanosec
fetch from L1 cache memory 0.5 nanosec
branch misprediction 5 nanosec
fetch from L2 cache memory 7 nanosec
Mutex lock/unlock 25 nanosec
fetch from main memory 100 nanosec 
send 2K bytes over 1Gbps network 20,000 nanosec
read 1MB sequentially from memory 250,000 nanosec
fetch from new disk location (seek) 8,000,000 nanosec
read 1MB sequentially from disk 20,000,000 nanosec
send packet US to Europe and back 150 milliseconds = 150,000,000 nanosec

 


Appendix: Language Choice

Several people have asked what programming language they should learn first.
There is no one answer, but consider these points:



Use your friends. When asked &amp;quot;what operating system should
I use, Windows, Unix, or Mac?&amp;quot;, my answer is usually: &amp;quot;use whatever
your friends use.&amp;quot;  The advantage you get from learning from your
friends will offset any intrinsic difference between OS, or
between programming languages.  Also consider your future friends:
the community of programmers that you will be a part of if you
continue.  Does your chosen language have a large growing community
or a small dying one?  Are there books, web sites, and online forums
to get answers from?  Do you like the people in those forums?

Keep it simple.  Programming languages such as C++
and Java are designed for professional development by large teams of
experienced programmers who are concerned about the run-time efficiency of
their code.
As a result, these languages have complicated parts designed for these circumstances.
You&amp;#39;re concerned with learning to program.  You don&amp;#39;t need that complication.
You want a language that was designed to be easy to learn and remember by a
single new programmer.

Play. Which way would you rather learn to play the piano: the
normal, interactive way, in which you hear each note as soon as you hit a key,
or &amp;quot;batch&amp;quot; mode, in which you only hear the notes after you finish a whole song?
Clearly, interactive mode makes learning easier for the piano, and also for 
programming. Insist on a language with an interactive mode and use it.



Given these criteria, my recommendations for a first programming
language would be Python or
Scheme.  
Another choice is Javascript, not because it is perfectly well-designed for beginners,
but because there are so many online tutorials for it, such as 
Khan Academy&amp;#39;s tutorial.
But your
circumstances may vary, and there are other good choices. If your
age is a single-digit, you might prefer
Alice or Squeak 
or Blockly (older learners might also enjoy these). The important
thing is that you choose and get started.



Appendix: Books and Other Resources


Several people have asked what books and web pages they should learn
from.  I repeat that &amp;quot;book learning alone won&amp;#39;t be enough&amp;quot; but I can
recommend the following:


 Scheme: Structure and
Interpretation of Computer Programs (Abelson &amp;amp; Sussman) is
probably the best introduction to computer science, and it does
teach programming as a way of understanding the computer science. 
You can see online videos of lectures on this book, as well as the complete text online. The book is
challenging and will weed out some people who perhaps could be
successful with another approach.  

 Scheme:
How to
Design Programs (Felleisen et al.) is one of the best books
on how to actually design programs in an elegant and functional way.

 Python: 
Python Programming:
An Intro to CS (Zelle) is a good introduction using Python.  

 Python: Several
online tutorials
 are available at Python.org.

 Oz: Concepts,
Techniques, and Models of Computer Programming (Van Roy &amp;amp; Haridi)
is seen by some as the modern-day successor to Abelson &amp;amp; Sussman.
It is a tour through the big ideas of programming, covering a wider
range than Abelson &amp;amp; Sussman while being perhaps easier to read and
follow.  It uses a language, Oz, that is not widely known but serves as
a basis for learning other languages.

&amp;lt;



Notes
T. Capey points out that the Complete
  Problem Solver page on Amazon now has the &amp;quot;Teach Yourself
  Bengali in 21 days&amp;quot; and &amp;quot;Teach Yourself Grammar and Style&amp;quot; books under the
  &amp;quot;Customers who shopped for this item also shopped for these items&amp;quot;
  section.  I guess that a large portion of the people who look at that
  book are coming from this page.
Thanks to Ross Cohen for help with Hippocrates.



&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;

Translations
Thanks to the
following authors,
translations of 
this page are
available in:


Arabic(Mohamed A. Yahya)



Bulgarian(Boyko Bantchev)


Chinese (Xiaogang Guo)




Croatian
(Tvrtko Bedekovic)



Esperanto
 (Federico Gobbo)



French (Etienne Beauchesne)




German (Stefan Ram)



Hebrew 
(Eric McCain)



Hindi
(Vikash Tiwari)



Hungarian
(Marton Mestyan)



Indonesian
(Tridjito Santoso)



Italian
(Fabio Z. Tessitore)



Japanese (yomoyomo)



Korean 
(John Hwang)



Persian(Mehdi Asgari)


Polish(Kuba Nowak)



Portuguese(Augusto Radtke)



Romanian(Ştefan Lazăr)



Russian(Konstantin Ptitsyn)


Serbian(Lazar Kovacevic)



Spanish (Carlos Rueda)



Slovak
(Jan Waclawek)



Turkish (&amp;#199;ağıl Uluşahin)




Ukranian
(Oleksii Molchanovskyi)</description>
      <author> ()</author>
      <guid>https://norvig.com/21-days.html</guid>
      <pubDate>Mon, 15 Jan 2024 21:03:20 GMT</pubDate>
    </item>
    <item>
      <title>Slashing Data Transfer Costs in AWS by 99%</title>
      <link>https://www.bitsand.cloud/posts/slashing-data-transfer-costs/</link>
      <description>There are lots of ways to accidentally spend too much money on AWS, and one of the easiest ways is by carelessly transferring data. As of writing, AWS charges the following rates for data transfer:
Data transfer from AWS to the public Internet ranges from $0.09/GB in us-east-1 (N. Virginia) to $0.154/GB in af-south-1 (Cape Town). Therefore a single terabyte of data transfer will run you a cool $90 - $154.</description>
      <author> (Daniel Kleinstein)</author>
      <guid>https://www.bitsand.cloud/posts/slashing-data-transfer-costs/</guid>
      <pubDate>Mon, 15 Jan 2024 20:02:59 GMT</pubDate>
    </item>
    <item>
      <title>Quick Update on Marten 7.0 (and Wolverine 2.0)</title>
      <link>https://jeremydmiller.com/2024/01/15/quick-update-on-marten-7-0-and-wolverine-2-0/</link>
      <description>There’s a new Marten 7.0 beta 4 release out today with a new round of bug fixes and some performance enhancements. We’re getting closer to getting a 7.0 release out, so I thought I&amp;amp;#821…</description>
      <author> (jeremydmiller)</author>
      <guid>https://jeremydmiller.com/2024/01/15/quick-update-on-marten-7-0-and-wolverine-2-0/</guid>
      <pubDate>Mon, 15 Jan 2024 19:03:32 GMT</pubDate>
    </item>
    <item>
      <title>API &amp;quot;Rules&amp;quot;</title>
      <link>https://youtube.com/watch?v=X7mSpq9wxTA</link>
      <description></description>
      <author> (CodeOpinion
  
  
  
    CodeOpinion
  






    •)</author>
      <guid>https://youtube.com/watch?v=X7mSpq9wxTA</guid>
      <pubDate>Mon, 15 Jan 2024 19:03:31 GMT</pubDate>
    </item>
    <item>
      <title>.NET 8 — Frozen Collections</title>
      <link>https://henriquesd.medium.com/net-8-frozen-collections-404c1d7c5240</link>
      <description>Frozen Collections is a new&amp;#160;.NET 8 feature that can be used to create dictionaries for faster read operations when you don’t need to…</description>
      <author> (https://henriquesd.medium.com)</author>
      <guid>https://henriquesd.medium.com/net-8-frozen-collections-404c1d7c5240</guid>
      <pubDate>Mon, 15 Jan 2024 19:03:28 GMT</pubDate>
    </item>
    <item>
      <title>In C++/WinRT, how can I await multiple coroutines and capture the results?, part 3 - The Old New Thing</title>
      <link>https://devblogs.microsoft.com/oldnewthing/20240112-00/?p=109267</link>
      <description>Dealing with awaitables that return void, and questioning our life choices.</description>
      <author> (Raymond Chen)</author>
      <guid>https://devblogs.microsoft.com/oldnewthing/20240112-00/?p=109267</guid>
      <pubDate>Mon, 15 Jan 2024 18:02:49 GMT</pubDate>
    </item>
    <item>
      <title>Build an ASP.NET Core Blazor Web App - End to End Video Series</title>
      <link>https://youtube.com/watch?v=nrdIyaB0ixc</link>
      <description>In this video I&amp;#39;m kicking off the video series for building an ASP.NET Core Blazor web app! We&amp;#39;ll be creating a Blazor web application together in C# to trac...</description>
      <author> (Dev Leader
  
  
  
    Dev Leader
  






    •)</author>
      <guid>https://youtube.com/watch?v=nrdIyaB0ixc</guid>
      <pubDate>Mon, 15 Jan 2024 17:03:28 GMT</pubDate>
    </item>
    <item>
      <title>Formatting, Interpolation, and Escape Characters in Strings - C# in the Cards Episode 5</title>
      <link>https://youtube.com/watch?v=W0c1pisM6X8</link>
      <description>In this fifth lesson, we&amp;#39;ll revisit working with string data types in C#.  String.Format and String Interpolation as explored as we format text.  Additionall...</description>
      <author> (tutorialsEU
  
  
  
    tutorialsEU
  






    •)</author>
      <guid>https://youtube.com/watch?v=W0c1pisM6X8</guid>
      <pubDate>Mon, 15 Jan 2024 17:03:28 GMT</pubDate>
    </item>
    <item>
      <title>Authenticating a .NET GitHub App using a JSON Web Token (JWT) - Steve Gordon - Code with Steve</title>
      <link>https://www.stevejgordon.co.uk/authenticating-a-github-app-using-a-json-web-token-in-dotnet</link>
      <description>In this post, I cover the steps required to create and sign a JWT and use it to authenticate a GitHub App built using .NET.</description>
      <author> (Steve Gordon)</author>
      <guid>https://www.stevejgordon.co.uk/authenticating-a-github-app-using-a-json-web-token-in-dotnet</guid>
      <pubDate>Mon, 15 Jan 2024 15:03:45 GMT</pubDate>
    </item>
    <item>
      <title>Building the Smallest C# Game That Doesn’t Need .NET</title>
      <link>https://youtube.com/watch?v=iHIh5WoIvks</link>
      <description>Check out my courses on Dometrain: https://dometrain.comBecome a Patreon and get special perks: https://www.patreon.com/nickchapsasHello, everybody, I&amp;#39;m Nick...</description>
      <author> (Nick Chapsas
  
  
  
    Nick Chapsas
  





    •)</author>
      <guid>https://youtube.com/watch?v=iHIh5WoIvks</guid>
      <pubDate>Mon, 15 Jan 2024 15:03:45 GMT</pubDate>
    </item>
    <item>
      <title>TypeScript Full Course   From Zero to Expert</title>
      <link>https://youtube.com/watch?v=CpRq_m1keno</link>
      <description>In this TypeScript course, you will learn from what TypeScript is, to creating your first application using TypeScript.00:00:00 What is TypeScript?00:07:14 T...</description>
      <author> (Devs School &amp;#183; Playlist
  
  
  
    Devs School &amp;#183; Playlist
  






    •)</author>
      <guid>https://youtube.com/watch?v=CpRq_m1keno</guid>
      <pubDate>Mon, 15 Jan 2024 15:03:44 GMT</pubDate>
    </item>
    <item>
      <title>C++/WinRT gotcha: Not all exceptions derive from hresult_error - The Old New Thing</title>
      <link>https://devblogs.microsoft.com/oldnewthing/20240115-00/?p=109271</link>
      <description>There are also C++ standard exceptions, particularly std::bad_alloc.</description>
      <author> (Raymond Chen)</author>
      <guid>https://devblogs.microsoft.com/oldnewthing/20240115-00/?p=109271</guid>
      <pubDate>Mon, 15 Jan 2024 15:03:43 GMT</pubDate>
    </item>
    <item>
      <title>Recording: S06E09 - From Code Generation to Revolutionary RavenDB: Unveiling the Database Secrets with Oren Eini</title>
      <link>https://ayende.com/blog/200513-B/recording-s06e09-from-code-generation-to-revolutionary-ravendb-unveiling-the-database-secrets-with-oren-eini?Key=b763c9bc-312d-4e3b-a529-d6e07a0dcfd1</link>
      <description>I spoke with Jaime recently in the Modern .NET Podcast:In this episode of The Modern .NET Show podcast, Oren Eini, a seasoned developer with over 20 years of...</description>
      <author> ()</author>
      <guid>https://ayende.com/blog/200513-B/recording-s06e09-from-code-generation-to-revolutionary-ravendb-unveiling-the-database-secrets-with-oren-eini?Key=b763c9bc-312d-4e3b-a529-d6e07a0dcfd1</guid>
      <pubDate>Mon, 15 Jan 2024 15:03:43 GMT</pubDate>
    </item>
    <item>
      <title>Difference between CultureInfo.Get and new CultureInfo - G&amp;#233;rald Barr&amp;#233;</title>
      <link>https://www.meziantou.net/difference-between-cultureinfo-get-and-new-cultureinfo.htm</link>
      <description>In this post, I describe how to get a CultureInfo object and the difference between CultureInfo.Get and new CultureInfo in .NET.</description>
      <author> (G&amp;#233;rald Barr&amp;#233;)</author>
      <guid>https://www.meziantou.net/difference-between-cultureinfo-get-and-new-cultureinfo.htm</guid>
      <pubDate>Mon, 15 Jan 2024 15:03:42 GMT</pubDate>
    </item>
    <item>
      <title>The OwningComponentBase Class of Blazor Server</title>
      <link>https://youtube.com/watch?v=H0q2_KcF1nA</link>
      <description>Hi there! Today we are going to see the OwningComponentBase Class of Blazor Server, which can allow us to have better control of the lifetime of our services...</description>
      <author> (Spyros Katsios
  
  
  
    Spyros Katsios
  






    •)</author>
      <guid>https://youtube.com/watch?v=H0q2_KcF1nA</guid>
      <pubDate>Mon, 15 Jan 2024 14:04:27 GMT</pubDate>
    </item>
    <item>
      <title>The Best C# Books For Beginner Developers: Top 6 Picks</title>
      <link>https://www.devleader.ca/2024/01/15/the-best-c-books-for-beginner-developers-top-6-picks/</link>
      <description>Are you looking for the best C# books for beginner developers? Check out this list to see my pick for best books for C# developers that are getting started.</description>
      <author> (https://www.facebook.com/devleaderca)</author>
      <guid>https://www.devleader.ca/2024/01/15/the-best-c-books-for-beginner-developers-top-6-picks/</guid>
      <pubDate>Mon, 15 Jan 2024 14:04:25 GMT</pubDate>
    </item>
  </channel>
</rss>