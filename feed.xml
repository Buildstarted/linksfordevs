<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>Constructor Overloading in C# - Code Maze</title>
      <link>https://code-maze.com/constructor-overloading-in-c/</link>
      <description>Constructor overloading in C# is used to define multiple constructors in a class with different sets of parameters to achieve polymorphism.</description>
      <author> (Code Maze)</author>
      <guid>https://code-maze.com/constructor-overloading-in-c/</guid>
      <pubDate>Wed, 26 Oct 2022 09:02:27 GMT</pubDate>
    </item>
    <item>
      <title>Making AnimationEvent safe for the CoreCLR garbage collector | Unity Blog</title>
      <link>https://blog.unity.com/technology/making-animationevent-safe-for-the-coreclr-garbage-collector</link>
      <description>As we are transitioning to .NET CoreCLR, which brings a more advanced and efficient Garbage Collector (GC), see how Unity has changed its AnimationEvent to work correctly with this new GC.</description>
      <author> ()</author>
      <guid>https://blog.unity.com/technology/making-animationevent-safe-for-the-coreclr-garbage-collector</guid>
      <pubDate>Wed, 26 Oct 2022 08:03:39 GMT</pubDate>
    </item>
    <item>
      <title>Dotnet (.NET) Performance Tracing for WinUI, Uno and Maui Applications - Nick&amp;#39;s .NET Travels</title>
      <link>https://nicksnettravels.builttoroam.com/dotnet-trace/</link>
      <description>With the transition from UWP to WinUI and from Xamarin iOS/Android to .NET for iOS and Android, we’re seeing the convergence of application development in the .NET ecosystem. This convergence shouldn’t be undervalued and is particularly evident when you realised that all of these once disparate platforms, can now take advantage of the common tooling ... Read more</description>
      <author> (Nick)</author>
      <guid>https://nicksnettravels.builttoroam.com/dotnet-trace/</guid>
      <pubDate>Wed, 26 Oct 2022 06:03:35 GMT</pubDate>
    </item>
    <item>
      <title>Real-time Charts with ASP.NET Core, SignalR, and Chart.js</title>
      <link>https://khalidabuhakmeh.com/real-time-charts-with-aspnet-core-signalr-and-chartjs</link>
      <description>Using ASP.NET Core, SignalR and Chart.js to create real-time charts in a web application</description>
      <author> (Khalid Abuhakmeh)</author>
      <guid>https://khalidabuhakmeh.com/real-time-charts-with-aspnet-core-signalr-and-chartjs</guid>
      <pubDate>Wed, 26 Oct 2022 06:03:34 GMT</pubDate>
    </item>
    <item>
      <title>Azure Cache for Redis: What’s Your Session Stability Score?</title>
      <link>https://techcommunity.microsoft.com/t5/azure-developer-community-blog/azure-cache-for-redis-what-s-your-session-stability-score/ba-p/3661833</link>
      <description>&amp;#160; Introduction A good website should provide a seamless user experience from the home page through to the&amp;#160; &amp;quot;Your order has been successfully placed&amp;quot; notification. The seamless experience is critical as only 1 in 40 visitors makes a purchase. Even being at the checkout stage doesn&amp;#39;t guarantee a succe...</description>
      <author> (https://techcommunity.microsoft.com/t5/user/viewprofilepage/user-id/1476061)</author>
      <guid>https://techcommunity.microsoft.com/t5/azure-developer-community-blog/azure-cache-for-redis-what-s-your-session-stability-score/ba-p/3661833</guid>
      <pubDate>Wed, 26 Oct 2022 06:03:34 GMT</pubDate>
    </item>
    <item>
      <title>Azure DevOps Server 2022 RC2 now available</title>
      <link>https://devblogs.microsoft.com/devops/azure-devops-server-2022-rc2-now-available/</link>
      <description>We have released Azure DevOps Server 2022 RC2. This is our last planned prerelease before our final release of Azure DevOps Server 2022. You can upgrade from Azure DevOps Server 2022 RC1 or previous versions of TFS and Azure DevOps. You can find the full details in our release notes.</description>
      <author> (Gloridel Morales)</author>
      <guid>https://devblogs.microsoft.com/devops/azure-devops-server-2022-rc2-now-available/</guid>
      <pubDate>Wed, 26 Oct 2022 06:03:32 GMT</pubDate>
    </item>
    <item>
      <title>Who is protecting the data you give over online? - ABC Radio National</title>
      <link>https://www.abc.net.au/radionational/programs/lifematters/who-is-protecting-the-data-you-give-over-online-/101571486</link>
      <description>With our data stolen, we are&amp;#160;vulnerable to potential scams and even identity theft. So how can we protect ourselves?</description>
      <author> (https://www.abc.net.au/radionational/programs/lifematters/michele-weekes/8194920)</author>
      <guid>https://www.abc.net.au/radionational/programs/lifematters/who-is-protecting-the-data-you-give-over-online-/101571486</guid>
      <pubDate>Wed, 26 Oct 2022 04:01:50 GMT</pubDate>
    </item>
    <item>
      <title>[Last Week in .NET #106] – A penny for your tweetise</title>
      <link>https://georgestocker.com/2022/10/25/last-week-in-net-106-a-penny-for-your-tweetise/</link>
      <description>I would like .NET Development (Desktop, API, and Web) to be as easy as it is to launch a web application with Django or Rails. I would love for a productive .NET ecosystem that rewards non-Microsof…</description>
      <author> ()</author>
      <guid>https://georgestocker.com/2022/10/25/last-week-in-net-106-a-penny-for-your-tweetise/</guid>
      <pubDate>Wed, 26 Oct 2022 04:01:50 GMT</pubDate>
    </item>
    <item>
      <title>Spec Changes</title>
      <link>https://youtube.com/watch?v=bzWibA7izF8</link>
      <description>Computers can&amp;#39;t be reasoned with, and sometimes even the best-laid game dev plans will require a spec change. If you run into a problem, you need to to consi...</description>
      <author> (Masahiro Sakurai on Creating Games
  
  
  
    Masahiro Sakurai on Creating Games
  





    •)</author>
      <guid>https://youtube.com/watch?v=bzWibA7izF8</guid>
      <pubDate>Wed, 26 Oct 2022 03:05:35 GMT</pubDate>
    </item>
    <item>
      <title>Windows Dev Kit 2023 (&amp;#39;Project Volterra&amp;#39;) Debuts as Arm Device for Developers -- Visual Studio Magazine</title>
      <link>https://visualstudiomagazine.com/articles/2022/10/25/windows-dev-kit.aspx</link>
      <description>  Microsoft debuted Windows Dev Kit 2023 to help developers create Windows apps to run on Arm-powered devices.
</description>
      <author> (By David Ramel10/25/2022)</author>
      <guid>https://visualstudiomagazine.com/articles/2022/10/25/windows-dev-kit.aspx</guid>
      <pubDate>Tue, 25 Oct 2022 23:02:29 GMT</pubDate>
    </item>
    <item>
      <title>Zig Is Self-Hosted Now, What&amp;#39;s Next?</title>
      <link>https://kristoff.it/blog/zig-self-hosted-now-what/</link>
      <description>Why self-host Zig? For great justice, of course… and also a few more reasons actually.</description>
      <author> (October 25, 2022 • 7 min read • by Loris Cro)</author>
      <guid>https://kristoff.it/blog/zig-self-hosted-now-what/</guid>
      <pubDate>Tue, 25 Oct 2022 23:02:20 GMT</pubDate>
    </item>
    <item>
      <title>.NET Framework October 2022 Cumulative Update Preview</title>
      <link>https://devblogs.microsoft.com/dotnet/dotnet-framework-october-2022-cumulative-update-preview/</link>
      <description>October 2022 Cumulative Update Preview for .NET Framework</description>
      <author> (Salini Agarwal)</author>
      <guid>https://devblogs.microsoft.com/dotnet/dotnet-framework-october-2022-cumulative-update-preview/</guid>
      <pubDate>Tue, 25 Oct 2022 23:02:19 GMT</pubDate>
    </item>
    <item>
      <title>Fable &amp;#183; Announcing Snake Island (Fable 4) Alpha Release</title>
      <link>https://fable.io/blog/2022/2022-06-06-Snake_Island_alpha.html</link>
      <description>Hey there everybody! It&amp;#39;s been a while without Fable news but we&amp;#39;re bringing you something today that we hope will get you excited. Today we&amp;#39;re announcing the alpha release of Snake Island, codename for Fable 4. If you&amp;#39;ve been following us on Twitter you probably know this is the most ambitious Fable release to date, extending the compilation targets for F# beyond JS, to include languages like Python, Rust or Dart. The ultimate goal is to convert F# into a super-powerful DSL you can use to design your programs and algorithms and still have the freedom to choose the platform you want to run your code on.</description>
      <author> ()</author>
      <guid>https://fable.io/blog/2022/2022-06-06-Snake_Island_alpha.html</guid>
      <pubDate>Tue, 25 Oct 2022 23:02:19 GMT</pubDate>
    </item>
    <item>
      <title>How I Almost Took Down Production Due to a Near-Empty Config File</title>
      <link>https://nickjanetakis.com/blog/how-i-almost-took-down-production-due-to-a-near-empty-config-file</link>
      <description>Some web frameworks will only load a specific environment based config file in that env, which could lead to production errors.</description>
      <author> (Nick Janetakis)</author>
      <guid>https://nickjanetakis.com/blog/how-i-almost-took-down-production-due-to-a-near-empty-config-file</guid>
      <pubDate>Tue, 25 Oct 2022 22:04:26 GMT</pubDate>
    </item>
    <item>
      <title>Rethinking Ambition</title>
      <link>https://www.schlaf.co/ambition/</link>
      <description>“Our ambition should be to rule ourselves, the true kingdom for each one of us; and true progress is to know more, and be more, and to do more.”
–John Lubbock, The Use Of Life

Ambition is a polarizing word these days. On the heels of the Great Resignation, think</description>
      <author> (https://www.facebook.com/schlaf)</author>
      <guid>https://www.schlaf.co/ambition/</guid>
      <pubDate>Tue, 25 Oct 2022 22:04:25 GMT</pubDate>
    </item>
    <item>
      <title>So long, sync.Map</title>
      <link>https://puzpuzpuz.dev/so-long-syncmap</link>
      <description>I don&amp;#39;t see any strong reason to keep using sync.Map if you&amp;#39;re a Go generics user. Instead, you should consider using xsync.MapOf, a scalable alternative.</description>
      <author> (Follow)</author>
      <guid>https://puzpuzpuz.dev/so-long-syncmap</guid>
      <pubDate>Tue, 25 Oct 2022 22:04:25 GMT</pubDate>
    </item>
    <item>
      <title>How to date a recording using background electrical noise | Robert Heaton</title>
      <link>https://robertheaton.com/enf/</link>
      <description>Three men were accused of selling firearms to South London gangs. At their 2012 trial in Croydon Crown Court, the prosecution played the jury a recording, taken undercover, of the trio allegedly arranging a sale. But the men’s lawyers claimed that the recording was a fake, and that the police had fabricated it by splicing together clips taken at different times. To prove that the evidence really was authentic, the Metropolitan Police turned to a technique called electrical network frequency (ENF) matching.</description>
      <author> ()</author>
      <guid>https://robertheaton.com/enf/</guid>
      <pubDate>Tue, 25 Oct 2022 22:04:25 GMT</pubDate>
    </item>
    <item>
      <title>It&amp;#39;s time to to thank UVM and say goodbye</title>
      <link>http://olofkindgren.blogspot.com/2022/10/its-time-to-to-thank-uvm-and-say-goodbye.html</link>
      <description>UVM has been a massive success. There&amp;#39;s no doubt about that. For the first time it showed the chip industry the benefits of having a common ...</description>
      <author> ()</author>
      <guid>http://olofkindgren.blogspot.com/2022/10/its-time-to-to-thank-uvm-and-say-goodbye.html</guid>
      <pubDate>Tue, 25 Oct 2022 22:04:25 GMT</pubDate>
    </item>
    <item>
      <title>A Potpourri of Emacs Tweaks – Tony Zorman</title>
      <link>https://tony-zorman.com/posts/2022-10-22-emacs-potpourri.html</link>
      <description>Emacs is the “extensible text editor”, and it wouldn’t be fun if one
didn’t at least try to take advantage of that, right? Having just
written a README for my Emacs configuration, I
thought it might be nice to somewhat expand on certain ideas and give a
little context to some snippets that have accumulated over time.</description>
      <author> ()</author>
      <guid>https://tony-zorman.com/posts/2022-10-22-emacs-potpourri.html</guid>
      <pubDate>Tue, 25 Oct 2022 22:04:25 GMT</pubDate>
    </item>
    <item>
      <title>Technical Debt Costs More Than You Think, or My Software Development Process</title>
      <link>https://gavinhoward.com/2022/10/technical-debt-costs-more-than-you-think-or-my-software-development-process/</link>
      <description>This post describes how I develop software and why, which is that I hate technical debt.</description>
      <author> ()</author>
      <guid>https://gavinhoward.com/2022/10/technical-debt-costs-more-than-you-think-or-my-software-development-process/</guid>
      <pubDate>Tue, 25 Oct 2022 22:04:24 GMT</pubDate>
    </item>
    <item>
      <title>Towards Totalitarianism</title>
      <link>https://mobukamal.com/towards-totalitarianism/</link>
      <description>Totalitarianism is the natural progression of collective human hypocrisy.</description>
      <author> (Mobu Kamal
                
                    Oct 24, 2022
                        • 1 min read)</author>
      <guid>https://mobukamal.com/towards-totalitarianism/</guid>
      <pubDate>Tue, 25 Oct 2022 22:04:24 GMT</pubDate>
    </item>
    <item>
      <title>On Scala 3&amp;amp;#39;s Optional Braces</title>
      <link>https://alexn.org/blog/2022/10/24/scala-3-optional-braces/</link>
      <description>I dislike Scala 3’s significant whitespace syntax. At this point it’s safe to say that I hate it, being (IMO) an unfortunate evolution of the language.</description>
      <author> (Alexandru Nedelcu)</author>
      <guid>https://alexn.org/blog/2022/10/24/scala-3-optional-braces/</guid>
      <pubDate>Tue, 25 Oct 2022 22:04:24 GMT</pubDate>
    </item>
    <item>
      <title>Linearly scalable work</title>
      <link>https://jmreiche.github.io/linearly-scalable-work</link>
      <description>Laying bricks scales almost linearly. If one guy takes 4 weeks to build a house then you can add three more for a total of four people and expect the work to be done in 1 week. This works across a lot of tasks and areas, but of course not infinitely. If we keep adding people then at some point they will get in each others way and the benefit will diminish. But for some types of work adding people not only does not help to have it completed faster - it actually takes longer to complete. If we need to translate a book, then up until the point where the distribution and merging of individual words takes longer and gets more complicated than the translation itself, we can keep adding people and expect a benefit in terms of finishing faster. If we need to build a new motorway, then we can keep adding people and machinery to finish faster until it takes longer to deploy them, than the time it takes for them to pave any stretch of road. In the physical world it is easier to keep within the boundaries of scaling and adding man-power to finish work faster. Either because it is blatantly obvious that you cannot have one stonemason per brick when constructing a house or because the cost of scaling would keep you from ever reaching the point where adding more would be detrimental. The same sadly is not true when it comes to software projects. I suspect that it is a rarity to see a construction projects with too many employees. But that is no rarity with software projects. A lot of projects have too many people and when deadlines appear they will make it worse by adding even more. There is a good old saying: What one programmer can do in a day two programmers can do in two days. It is a funny saying, but over and over it proves itself correct. And just spend a moment contemplating what it says: By adding people you are not only not finishing faster you are actually finishing even later than if you had continued with the original staffing. That is quite the statement. But sadly very true. Software projects scale non-linearly as they have “fuzzy boundaries” and involves a high degree of creativity and novelty. So what do I mean by “fuzzy boundaries”? Let us return to the example of building a house. We imagine that all the outer and inner walls have been raised. From this point it is quite easy to imagine that we can have at least 1 painter in each room without them stepping on each others toes. They have clear boundaries materialized by the walls of the room. “Fuzzy boundaries” can - keeping with the analogy of the house - probably best be personified by the electrician. If we have 8 rooms in the house and put 8 electricians in there it will be a total mess. Chances are that they will get in each others way, trip over or queue in line at the main fuse box and slow progress down substantially. Even though they each have their clearly defined physical boundaries, given by the room, they still need to interact with the same network of wires as everybody else and connect to the same fuse box as everybody else. 1 or 2 electricians will probably be the optimum number as they can actually help each other instead of getting in each others way. The same rules apply for software projects. There is an optimal number of developers, which is probably lower than you think, but almost impossible to foresee or calculate as it will depend on the product, the code base, the project and the team/company structure. The clearer the boundaries; area by area, service by service, frontend vs. backend the more people you can probably use. But my advice would always be to error on the lower side. It is better to have too few people than too many. Projects with too few people will finish faster than projects with too many people. When push comes to shove and deadlines appear, fight the temptation to “act” and add more people as much as possible. Have it be the last resort and only if rewards are to be reaped in the long run and not for short term goals. For short term goals adding people will only make it worse. You are behind and will not finish in time - accept it and have people do the best they can to finish as fast as possible. Do not make it worse by adding additional people and finishing even later.</description>
      <author> (jesper reiche)</author>
      <guid>https://jmreiche.github.io/linearly-scalable-work</guid>
      <pubDate>Tue, 25 Oct 2022 22:04:24 GMT</pubDate>
    </item>
    <item>
      <title>I broke the rules.</title>
      <link>https://www.matuzo.at/blog/2022/twitter-ban/</link>
      <description>I was permanently banned on Twitter and I don&amp;#39;t know why.</description>
      <author> (Manuel Matuzović)</author>
      <guid>https://www.matuzo.at/blog/2022/twitter-ban/</guid>
      <pubDate>Tue, 25 Oct 2022 22:04:24 GMT</pubDate>
    </item>
    <item>
      <title>GitHub Quick Reviews</title>
      <link>https://youtube.com/watch?v=KV85UmAY7iA</link>
      <description>Powered by Restream https://restream.io</description>
      <author> (.NET Foundation
  
  
  
    .NET Foundation
  






    •)</author>
      <guid>https://youtube.com/watch?v=KV85UmAY7iA</guid>
      <pubDate>Tue, 25 Oct 2022 19:02:33 GMT</pubDate>
    </item>
    <item>
      <title>Copy with proper indentation</title>
      <link>https://devblogs.microsoft.com/visualstudio/copy-with-proper-indentation/</link>
      <description>You want to share some code you’ve written with a colleague, so you select it in the editor and hit Ctrl+C to copy it. As you paste it in Outlook/Slack/Teams, you realize that the indentation levels are inconsistent due to your original selection.</description>
      <author> (Mads Kristensen)</author>
      <guid>https://devblogs.microsoft.com/visualstudio/copy-with-proper-indentation/</guid>
      <pubDate>Tue, 25 Oct 2022 17:03:34 GMT</pubDate>
    </item>
    <item>
      <title>How to Make it Through Calculus (Neil deGrasse Tyson)</title>
      <link>https://youtube.com/watch?v=NjvwWiCYLl4</link>
      <description>Neil deGrasse Tyson talks about his personal struggles taking calculus and what it took for him to ultimately become successful at it.</description>
      <author> (YaleUniversity
  
  
  
    YaleUniversity
  






    •)</author>
      <guid>https://youtube.com/watch?v=NjvwWiCYLl4</guid>
      <pubDate>Tue, 25 Oct 2022 16:04:19 GMT</pubDate>
    </item>
    <item>
      <title>How to Make it Through Calculus (Neil deGrasse Tyson)</title>
      <link>https://youtu.be/NjvwWiCYLl4</link>
      <description>Neil deGrasse Tyson talks about his personal struggles taking calculus and what it took for him to ultimately become successful at it.</description>
      <author> (Eddie Woo
  
  
  
    Eddie Woo
  





    •)</author>
      <guid>https://youtu.be/NjvwWiCYLl4</guid>
      <pubDate>Tue, 25 Oct 2022 16:04:18 GMT</pubDate>
    </item>
    <item>
      <title>Episode 1: A basic expression evaluator</title>
      <link>https://youtube.com/watch?v=wgHIkdUQbp0%3Flist%3DPLRAdsfhKI4OWNOSfS7EUu5GRAVmze1t2y</link>
      <description>The notes for this episode can be found here:https://github.com/terrajobst/minsk/blob/master/docs/episode-01.md</description>
      <author> (Fireship
  
  
  
    Fireship
  





    •)</author>
      <guid>https://youtube.com/watch?v=wgHIkdUQbp0%3Flist%3DPLRAdsfhKI4OWNOSfS7EUu5GRAVmze1t2y</guid>
      <pubDate>Tue, 25 Oct 2022 16:04:18 GMT</pubDate>
    </item>
    <item>
      <title>Computer - John Cocke: A Retrospective by Friends - 1990</title>
      <link>https://youtu.be/eYwd30iWVvw</link>
      <description>John Cocke was an eccentric genius who was one of the most beloved figures within IBM.  This video was made from interviews with prominent IBMers sharing the...</description>
      <author> ()</author>
      <guid>https://youtu.be/eYwd30iWVvw</guid>
      <pubDate>Tue, 25 Oct 2022 16:04:18 GMT</pubDate>
    </item>
    <item>
      <title>Micro Frontends in Action With ASP.NET Core - Universal Rendering With Blazor WebAssembly Based Web Components</title>
      <link>https://www.tpeczek.com/2022/10/micro-frontends-in-action-with-aspnet.html</link>
      <description>Universal rendering is next, after composition and communication, aspect of Blazor WebAssembly based Web Components in micro frontends.</description>
      <author> (Tomasz Pęczek)</author>
      <guid>https://www.tpeczek.com/2022/10/micro-frontends-in-action-with-aspnet.html</guid>
      <pubDate>Tue, 25 Oct 2022 15:01:45 GMT</pubDate>
    </item>
    <item>
      <title>Forthcoming OpenSSL Releases</title>
      <link>https://mta.openssl.org/pipermail/openssl-announce/2022-October/000238.html</link>
      <description />
      <author> ()</author>
      <guid>https://mta.openssl.org/pipermail/openssl-announce/2022-October/000238.html</guid>
      <pubDate>Tue, 25 Oct 2022 15:01:45 GMT</pubDate>
    </item>
    <item>
      <title>10 Guaranteed Ways to Improve Developer Efficiency and Focus</title>
      <link>https://youtube.com/watch?v=VItgCLZcjps</link>
      <description>Get more out of your time as a developer! Use my code &amp;quot;JAMESQUICK&amp;quot; or link http://rize.io/u/jamesquick to be the first 1000 people to get a 25% discount off ...</description>
      <author> (James Q Quick
  
  
  
    James Q Quick
  





    •)</author>
      <guid>https://youtube.com/watch?v=VItgCLZcjps</guid>
      <pubDate>Tue, 25 Oct 2022 14:05:38 GMT</pubDate>
    </item>
    <item>
      <title>Why are many Windows user interface elements positioned at multiples of 4 or 8 pixels?</title>
      <link>https://devblogs.microsoft.com/oldnewthing/20221025-00/?p=107318</link>
      <description>It depends on whose pixels you&amp;#39;re talking about.</description>
      <author> (Raymond Chen)</author>
      <guid>https://devblogs.microsoft.com/oldnewthing/20221025-00/?p=107318</guid>
      <pubDate>Tue, 25 Oct 2022 14:05:34 GMT</pubDate>
    </item>
    <item>
      <title>C# Tip: use the @ prefix when a name is reserved - Code4IT</title>
      <link>https://www.code4it.dev/csharptips/use-at-symbol-prefix/</link>
      <description>C#, as every other language, has several reserved keywords. Did you know that you can use them if you use the `@` prefix?</description>
      <author> (code4it)</author>
      <guid>https://www.code4it.dev/csharptips/use-at-symbol-prefix/</guid>
      <pubDate>Tue, 25 Oct 2022 13:03:29 GMT</pubDate>
    </item>
    <item>
      <title>After complaints, Volkswagen will ditch capacitive steering wheel controls</title>
      <link>https://arstechnica.com/cars/2022/10/after-complaints-volkswagen-will-ditch-capacitive-steering-wheel-controls/</link>
      <description>Recent VWs have shipped with capacitive multifunction steering wheels, and they&amp;#39;re bad.</description>
      <author> (Jonathan M. Gitlin
    -  10/24/2022, 10:18 AM)</author>
      <guid>https://arstechnica.com/cars/2022/10/after-complaints-volkswagen-will-ditch-capacitive-steering-wheel-controls/</guid>
      <pubDate>Tue, 25 Oct 2022 11:05:30 GMT</pubDate>
    </item>
  </channel>
</rss>