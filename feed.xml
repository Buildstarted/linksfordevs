<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/feed.xml" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/feed.xml</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>Sail Physics</title>
      <link>https://xkcd.com/3090/</link>
      <description></description>
      <guid>https://xkcd.com/3090/</guid>
      <pubDate>Fri, 16 May 2025 21:02:22 GMT</pubDate>
    </item>
    <item>
      <title>After months of coding with LLMs, I'm going back to using my brain ‚Ä¢ albertofortin.com</title>
      <link>https://albertofortin.com/writing/coding-with-ai</link>
      <description>I've been building MVPs and SaaS products for 15 years. Let's work together on your next project.</description>
      <guid>https://albertofortin.com/writing/coding-with-ai</guid>
      <pubDate>Fri, 16 May 2025 15:02:21 GMT</pubDate>
    </item>
    <item>
      <title>Ground control to Major Trial</title>
      <link>https://virtualize.sh/blog/ground-control-to-major-trial/</link>
      <description>When a $130M aerospace company chooses to endlessly abuse free trials instead of typing git pull, you start to question gravity, or at least common sense.</description>
      <guid>https://virtualize.sh/blog/ground-control-to-major-trial/</guid>
      <pubDate>Fri, 16 May 2025 14:02:23 GMT</pubDate>
    </item>
    <item>
      <title>BuyMeACoffee silently dropped support for many countries, and nobody cares</title>
      <link>https://zverok.space/blog/2024-08-08-bmac-snafu.html</link>
      <description>Silent changes in payment methods on big creator funding platforms raise some unpleasant questions.</description>
      <guid>https://zverok.space/blog/2024-08-08-bmac-snafu.html</guid>
      <pubDate>Fri, 16 May 2025 14:02:21 GMT</pubDate>
    </item>
    <item>
      <title>Building a Product, Live on Twitch üé•</title>
      <link>https://www.berkansasmaz.com/building-a-product-live-on-twitch/</link>
      <description>Next week, I will start building a real-world app live on Twitch ‚Äî using ABP Framework and AI to get things done faster and smarter.

The app is called BeeFocus (I‚Äôve already secured beefocus.io), and it will include:

 * üîñ Read It Later
 * üåê RSS Feeder
 * ‚úÖ Task Management
 * ‚è±Ô∏è Pomodoro
 * üìÖ Calendar
 * etc.

I</description>
      <guid>https://www.berkansasmaz.com/building-a-product-live-on-twitch/</guid>
      <pubDate>Fri, 16 May 2025 13:02:16 GMT</pubDate>
    </item>
    <item>
      <title>Ollama's new engine for multimodal models ¬∑ Ollama Blog</title>
      <link>https://ollama.com/blog/multimodal-models</link>
      <description>Ollama now supports new multimodal models with its new engine.</description>
      <guid>https://ollama.com/blog/multimodal-models</guid>
      <pubDate>Fri, 16 May 2025 13:02:15 GMT</pubDate>
    </item>
    <item>
      <title>Building Your Own CQRS Pipeline With Decorators (Dropped MediatR!)</title>
      <link>https://youtube.com/watch?v=gsluG8NdCfw</link>
      <description>Get the free Clean Architecture template: https://dub.sh/ca-template
Want to master Clean Architecture? Go here: https://bit.ly/3PupkOJ
Want to unlock Modular Monoliths? Go here: https://bit.ly/3SXlzSt

So‚Ä¶ you‚Äôve removed MediatR. But how do you replace pipeline behaviors like logging and validation?

In this video, I‚Äôll show you how to implement a powerful middleware pipeline for your custom CQRS setup using the Decorator Pattern‚Äîno MediatR needed.

üéØ You‚Äôll learn how to:
- Implement logging and validation decorators for commands and queries
- Use Scrutor to auto-wire decorators in the DI container
- Preserve the same cross-cutting power you had with MediatR
- Chain decorators cleanly and control execution order

This approach works with custom `ICommandHandler` and `IQueryHandler` abstractions‚Äîso you stay in control of your architecture, without sacrificing functionality.

üìå Covered:
- Replacing MediatR's `IPipelineBehavior`
- Using `Scrutor` for `services.Decorate`
- Order of execution in custom pipelines
- FluentValidation integration

Check out my courses:
https://www.milanjovanovic.tech/courses

Read my Blog here:
https://www.milanjovanovic.tech/blog

Join my weekly .NET newsletter:
https://www.milanjovanovic.tech

Chapters
0:00 What are Pipeline Behaviors?
1:14 Introducing a Logging Decorator
3:59 Registering decorators with DI
8:01 Decorating the command handlers
9:37 Creating a Validation Decorator
13:33 The correct Decorator ordering</description>
      <author> (Milan Jovanoviƒá)</author>
      <guid>https://youtube.com/watch?v=gsluG8NdCfw</guid>
      <pubDate>Fri, 16 May 2025 12:02:33 GMT</pubDate>
    </item>
    <item>
      <title>ABP Module - Identity</title>
      <link>https://youtube.com/watch?v=y0lvrlmWDIM</link>
      <description>Tired of scattered identity features? ABP's Identity Module gives you full control over users, roles, claims, and more with advanced authentication and authorization for .NET.

Website: https://abp.io
Module: https://abp.io/modules/Volo.Identity.Pro
All Modules: https://abp.io/modules

#abpframework #modules #identitymodule #dotnet #abp</description>
      <author> (Volosoft)</author>
      <guid>https://youtube.com/watch?v=y0lvrlmWDIM</guid>
      <pubDate>Fri, 16 May 2025 11:02:20 GMT</pubDate>
    </item>
    <item>
      <title>Understanding the Domain and Application Layers in ABP Framework</title>
      <link>https://www.berkansasmaz.com/understanding-the-domain-and-application-layers-in-abp-framework/</link>
      <description>When building a well-structured and maintainable software system using the ABP Framework, it is essential to understand the core responsibilities of the Domain and Application layers. These layers implement the Domain-Driven Design (DDD) principles and encapsulate business logic, coordinate use cases, and ensure a clean separation of concerns.


Domain Layer:</description>
      <guid>https://www.berkansasmaz.com/understanding-the-domain-and-application-layers-in-abp-framework/</guid>
      <pubDate>Fri, 16 May 2025 10:02:14 GMT</pubDate>
    </item>
    <item>
      <title>.NET Web App Modernization Made Easy with Tom√°≈° Herceg's New Book and DotVVM</title>
      <link>https://youtube.com/watch?v=MPTCAGmPZ4A</link>
      <description>DotConnect and Entity Developer dotConnect and Entity Developer boost .NET development with high-performance ADO .NET providers and visual ORM builder. Try a 30-day free trial now!

 Show Notes "I remember I had the entire life cycle of the web forms printed on a wall. It was like six sheets of paper and it was very complex, and it was very useful to have it on the wall because, like, you could always look at it and say, "okay, this is going on before this one." So you have to like switch the order of things. But that's exactly what I call interesting"‚Äî Tom√°≈° Herceg

 Welcome friends to The Modern .NET Show; the premier .NET podcast, focusing entirely on the knowledge, tools, and frameworks that all .NET developers should have in their toolbox. We are the go-to podcast for .NET developers worldwide, and I am your host: Jamie "GaProgMan" Taylor.

 In this episode, we talk with Tom√°≈° Herceg about strategies for modernizing .NET Framework web applications such that they leverage the very latest in the .NET stack. Tom√°≈° shares his insights from the journey of upgrading his own applications and those of his clients, both of which provided the background for his new book: "Modernizing .NET Web Applications".

 "The biggest problem of the YARP migrations: that they will force you to do a lot of infrastructure things at the beginning before you even start migrating some real functionality."‚Äî Tom√°≈° Herceg

 Along the way, we discuss how using his DotVVM project can help with the migration. Not only is the upgrade path for DotVVM projects a process of swapping a NuGet package, but is also keeps the upgrade as a single in-memory process‚Äîsomething that YARP-based migrations aren't able to do.

 Anyway, without further ado, let's sit back, open up a terminal, type in `dotnet new podcast` and we'll dive into the core of Modern .NET.

 Supporting the Show If you find this episode useful in any way, please consider supporting the show by either leaving a review (check our review page for ways to do that), sharing the episode with a friend or colleague, buying the host a coffee, or considering becoming a Patron of the show.

 Full Show Notes The full show notes, including links to some of the things we discussed and a full transcription of this episode, can be found at:  https://dotnetcore.show/season-7/dotnet-web-app-modernization-made-easy-with-tomas-hercegs-new-book-and-dotvvm/

 Links:  DotVVM DotVVM.Owin DotVVM.AspNetCore Yarp Strangler Fig Pattern Modernizing .NET Web Applications Gauss Curve (aka Normal distribution) Tom√°≈° on LinkedIn  Model-view-ViewModel  Supporting the show:  dotConnect 30 day trial Entity Developer 30 day trial Leave a rating or review Buy the show a coffee Become a patron  Getting in Touch:  Via the contact page Joining the Discord  Remember to rate and review the show on  Apple Podcasts, Podchaser, or wherever you find your podcasts, this will help the show's audience grow. Or you can just share the show with a friend.

 And don't forget to reach out via our Contact page. We're very interested in your opinion of the show, so please get in touch.

 You can support the show by making a monthly donation on the show's Patreon page at: https://www.patreon.com/TheDotNetCorePodcast.

 Music created by Mono Memory Music, licensed to RJJ Software for use in The Modern .NET Show</description>
      <author> (Jamie Taylor)</author>
      <guid>https://youtube.com/watch?v=MPTCAGmPZ4A</guid>
      <pubDate>Fri, 16 May 2025 09:02:07 GMT</pubDate>
    </item>
    <item>
      <title>A leap year check in three instructions</title>
      <link>https://hueffner.de/falk/blog/a-leap-year-check-in-three-instructions.html</link>
      <description>How to test for leap years (until year 102499) in the proleptic Gregorian calendar with just three 32-bit instructions, with detailed explanation of the bit-level tricks.</description>
      <guid>https://hueffner.de/falk/blog/a-leap-year-check-in-three-instructions.html</guid>
      <pubDate>Fri, 16 May 2025 06:02:13 GMT</pubDate>
    </item>
    <item>
      <title>The Unreasonable Effectiveness of an LLM Agent Loop with Tool Use</title>
      <link>https://sketch.dev/blog/agent-loop</link>
      <description>2025-05-15 by Philip Zeyliger</description>
      <guid>https://sketch.dev/blog/agent-loop</guid>
      <pubDate>Fri, 16 May 2025 05:02:26 GMT</pubDate>
    </item>
    <item>
      <title>How I Approach Feature Requests</title>
      <link>https://www.jakeworth.com/posts/how-i-approach-feature-requests/</link>
      <description>Receiving feature requests is part of running a software team. Here‚Äôs how I handle them.</description>
      <guid>https://www.jakeworth.com/posts/how-i-approach-feature-requests/</guid>
      <pubDate>Thu, 15 May 2025 23:05:28 GMT</pubDate>
    </item>
    <item>
      <title>Why French Tech Is Playing Not to Lose</title>
      <link>https://julien.danjou.info/p/why-french-tech-is-playing-not-to</link>
      <description>Stop Settling for the Crumbs</description>
      <guid>https://julien.danjou.info/p/why-french-tech-is-playing-not-to</guid>
      <pubDate>Thu, 15 May 2025 23:02:35 GMT</pubDate>
    </item>
    <item>
      <title>RxJourney</title>
      <link>https://www.rxjourney.net/searching-for-a-marriage-partner</link>
      <description>The Journey of an Intern Pharmacist</description>
      <guid>https://www.rxjourney.net/searching-for-a-marriage-partner</guid>
      <pubDate>Thu, 15 May 2025 23:02:33 GMT</pubDate>
    </item>
    <item>
      <title>How The Heck Do QR Codes Work? (An Interactive Exploration)</title>
      <link>https://perthirtysix.com/how-the-heck-do-qr-codes-work</link>
      <description>Interactively dive into the layout and encoding of QR codes</description>
      <guid>https://perthirtysix.com/how-the-heck-do-qr-codes-work</guid>
      <pubDate>Thu, 15 May 2025 23:02:32 GMT</pubDate>
    </item>
    <item>
      <title>Misadventures in DTrace: how to debug the macOS kernel</title>
      <link>https://jade.fyi/blog/misadventures-in-dtrace/</link>
      <description>computers i guess</description>
      <guid>https://jade.fyi/blog/misadventures-in-dtrace/</guid>
      <pubDate>Thu, 15 May 2025 23:02:32 GMT</pubDate>
    </item>
    <item>
      <title>Salter‚Äôs Screwdriver Theory of Latency ‚Äì JRS Systems: the blog</title>
      <link>https://jrs-s.net/2025/05/15/salters-screwdriver-theory-of-latency/</link>
      <description>We‚Äôve all noticed that software never seems to get any faster no matter how much faster the hardware gets. This easily-observable fact is usually explained in one of two ways:</description>
      <guid>https://jrs-s.net/2025/05/15/salters-screwdriver-theory-of-latency/</guid>
      <pubDate>Thu, 15 May 2025 23:02:32 GMT</pubDate>
    </item>
    <item>
      <title>I Didn't Realize I Was a First Principles Thinker Until‚Ä¶</title>
      <link>https://brian.bearblog.dev/i-didnt-realize-i-was-a-first-principles-thinker-until/</link>
      <description>For the better part of 6 years,  was a mystery to me. Of course I wanted to become a , but didn't understand how to become one.

Then everything changed. T...</description>
      <guid>https://brian.bearblog.dev/i-didnt-realize-i-was-a-first-principles-thinker-until/</guid>
      <pubDate>Thu, 15 May 2025 23:02:32 GMT</pubDate>
    </item>
    <item>
      <title>O(n) vs. O(n^2) Startups</title>
      <link>https://rohan.ga/blog/startup_types/</link>
      <description>I recently saw a tweet[1] about how people should go about starting startups/businesses, and it caused me to formalize my intuitions around two distinct types of tech businesses I am familiar with. I‚Äôll call them $O(n)$ startups and $O(n^{2})$ startups.
Throughout this essay, let n represent the time elapsed since launch. An $O(n)$ startup grows its key metric (revenue, users, etc.) roughly linearly with time‚Äîdouble the time, double the metric. An $O(n^{2})$ startup accelerates, with growth compounding super-linearly over time.</description>
      <guid>https://rohan.ga/blog/startup_types/</guid>
      <pubDate>Thu, 15 May 2025 23:02:32 GMT</pubDate>
    </item>
    <item>
      <title>Asking a LLM for help is fine</title>
      <link>https://reflexions.florianernotte.be/post/asking-llm/</link>
      <description>Using AI as a helper at work shouldn‚Äôt be condemned.</description>
      <guid>https://reflexions.florianernotte.be/post/asking-llm/</guid>
      <pubDate>Thu, 15 May 2025 23:02:32 GMT</pubDate>
    </item>
    <item>
      <title>Prompt Injection is a Weakness, not a Vulnerability</title>
      <link>https://blog.zhade.dev/posts/2025-05-15-prompt-injection-weakness/</link>
      <description>Prompt Injection is the most widely discussed emergent threat in AI Systems. But how should organizations approach tracking and prioritizing it?
In my opinion, instead of being a vulnerability in and of itself, prompt injection is a weakness that leads to other, more potent vulnerabilities. While it is true that prompt injection is undesirable, it is (at the current time) unsolvable, and as such tracking it as its own vulnerability leads to more overhead and less desirable security outcomes.</description>
      <guid>https://blog.zhade.dev/posts/2025-05-15-prompt-injection-weakness/</guid>
      <pubDate>Thu, 15 May 2025 23:02:32 GMT</pubDate>
    </item>
    <item>
      <title>Demystifying the protobuf wire format - Part 2 | Kreya</title>
      <link>https://kreya.app/blog/protocolbuffers-wire-format-part-2/</link>
      <description>Dive deeper into the protocol buffers wire format and learn how maps, negative numbers, and packed repeated fields are encoded in protobuf messages.</description>
      <guid>https://kreya.app/blog/protocolbuffers-wire-format-part-2/</guid>
      <pubDate>Thu, 15 May 2025 23:02:32 GMT</pubDate>
    </item>
    <item>
      <title>My 2025 high-end Linux PC üêß</title>
      <link>https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/</link>
      <description>Turns out my previous attempt at this build had a faulty CPU! With the CPU replaced, the machine now is stable and fast! üöÄ In this article, I‚Äôll go into a lot more detail about the component selection, but in a nutshell, I picked an Intel 285K CPU for low idle power, chose a 4TB SSD so I don‚Äôt have to worry about running out of storage quickly, and a capable nvidia graphics card to drive my Dell UP3218K 8K monitor.</description>
      <guid>https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/</guid>
      <pubDate>Thu, 15 May 2025 23:02:30 GMT</pubDate>
    </item>
  </channel>
</rss>