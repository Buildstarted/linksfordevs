<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>Building a website without becoming a ‘soydev’</title>
      <link>https://worldofmatthew.com/post/soydev/</link>
      <description>You will always hear of large media companies crying about how piracy is killing their industry, even if the evidence for these claims are uncertain with some studies claiming small positive, small negative or near-no affect to sales of media, depending on the type of that media.</description>
      <author> ()</author>
      <guid>https://worldofmatthew.com/post/soydev/</guid>
      <pubDate>Sat, 10 Jul 2021 22:03:57 GMT</pubDate>
    </item>
    <item>
      <title>Why I Had to Migrate from MongoDB to PostgreSQL</title>
      <link>https://jerseyfonseca.com/blogs/mongodb-to-postgresql-migration</link>
      <description>A few months ago, I made WeWatch,
            a mobile app to help you find what films to watch.
            I made the decision to use MongoDB because of the popularity
            of the MERN stack.</description>
      <author> ()</author>
      <guid>https://jerseyfonseca.com/blogs/mongodb-to-postgresql-migration</guid>
      <pubDate>Sat, 10 Jul 2021 22:03:54 GMT</pubDate>
    </item>
    <item>
      <title>From Node to Ruby on Rails - D U N K</title>
      <link>https://nikodunk.com/a-node-js-developer-discovers-rails/</link>
      <description>I learned to code in the Javascript stack [1] and am building a Javascript based product [2]. I never questioned this stack: many companies default to it, JS everywhere seems good, and the community is big. But for my new side project I decided to try Rails because despite some perception that Ruby on Rails is ‘over’, people in HN comments say it was somehow more enjoyable than the newer Node based stack.</description>
      <author> ()</author>
      <guid>https://nikodunk.com/a-node-js-developer-discovers-rails/</guid>
      <pubDate>Sat, 10 Jul 2021 22:03:51 GMT</pubDate>
    </item>
    <item>
      <title>ZEIT ONLINE | Lesen Sie zeit.de mit Werbung oder im PUR-Abo. Sie haben die Wahl.</title>
      <link>https://www.zeit.de/wissen/2021-07/thai-cave-rescue-thailand-tham-luang-2018-diver-mikko-paasi</link>
      <description>Um der Nutzung mit Werbung zuzustimmen, muss JavaScript in Ihrem Browser aktiviert sein.</description>
      <author> ()</author>
      <guid>https://www.zeit.de/wissen/2021-07/thai-cave-rescue-thailand-tham-luang-2018-diver-mikko-paasi</guid>
      <pubDate>Sat, 10 Jul 2021 22:03:49 GMT</pubDate>
    </item>
    <item>
      <title>Calculating Pagination Metadata Without Extra Roundtrips in SQL</title>
      <link>https://blog.jooq.org/2021/03/11/calculating-pagination-metadata-without-extra-roundtrips-in-sql/</link>
      <description>A tutorial on how to paginate without second round trips, including the calculation of total rows, current page number, etc. using SQL and jOOQ</description>
      <author> (Published by lukaseder
		

		
						
				View all posts by lukaseder)</author>
      <guid>https://blog.jooq.org/2021/03/11/calculating-pagination-metadata-without-extra-roundtrips-in-sql/</guid>
      <pubDate>Sat, 10 Jul 2021 22:03:45 GMT</pubDate>
    </item>
    <item>
      <title>System Design for Recommendations and Search</title>
      <link>https://eugeneyan.com/writing/system-design-for-discovery/</link>
      <description>Breaking it into offline vs. online environments, and candidate retrieval vs. ranking steps.</description>
      <author> (https://eugeneyan.com/about/)</author>
      <guid>https://eugeneyan.com/writing/system-design-for-discovery/</guid>
      <pubDate>Sat, 10 Jul 2021 22:03:42 GMT</pubDate>
    </item>
    <item>
      <title>Linux for old PC — Bringing PC from 2007 back to life</title>
      <link>https://notes.valdikss.org.ru/linux-for-old-pc-from-2007/en/</link>
      <description>This article describes the installation and configuration process of a modern Linux-based operating system for a weak computer from 2007, which allows you to moderately comfortably use the Internet and do home and office work with all the common software of the latest versions.</description>
      <author> ()</author>
      <guid>https://notes.valdikss.org.ru/linux-for-old-pc-from-2007/en/</guid>
      <pubDate>Sat, 10 Jul 2021 22:03:40 GMT</pubDate>
    </item>
    <item>
      <title>Surgical Refactors</title>
      <link>https://camhashemi.com/posts/surgical-refactors/</link>
      <description>Refactoring is like surgery.
That’s not to say that clean refactors save lives. But messy refactors definitely hurt.
A surgeon is economical with their cuts, and refactoring requires the same mindset.
 A naive surgeon takes a quick look at their patient and starts slicing away. They start with a big gash through the patient. They seek to cover as much ground as possible, as quickly as possible. They’re confident that they can close the gap once their work is done.</description>
      <author> (cam)</author>
      <guid>https://camhashemi.com/posts/surgical-refactors/</guid>
      <pubDate>Sat, 10 Jul 2021 22:03:37 GMT</pubDate>
    </item>
    <item>
      <title>Behind the scenes, AWS Lambda</title>
      <link>https://www.bschaatsbergen.com/behind-the-scenes-lambda</link>
      <description>Writing code and deploying it to AWS Lambda is as easy as baking a cake (depending on the type of cake).
            Lambda performs the heavy lifting for you, from provisioning to scaling.
            But where is the magic happening and how does it actually work under the hood? Lets find out together!</description>
      <author> ()</author>
      <guid>https://www.bschaatsbergen.com/behind-the-scenes-lambda</guid>
      <pubDate>Sat, 10 Jul 2021 21:03:53 GMT</pubDate>
    </item>
    <item>
      <title>25 Gigabit Linux internet router PC build</title>
      <link>https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/</link>
      <description>init7 recently announced that with their FTTH fiber offering Fiber7, they will now sell and connect you with 25 Gbit/s (Fiber7-X2) or 10 Gbit/s (Fiber7-X) fiber optics, if you want more than 1 Gbit/s.
While this offer will only become available at my location late this year (or possibly later due to the supply chain shortage), I already wanted to get the hardware on my end sorted out.</description>
      <author> (Michael Stapelberg)</author>
      <guid>https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/</guid>
      <pubDate>Sat, 10 Jul 2021 17:04:32 GMT</pubDate>
    </item>
    <item>
      <title>Programmers, Teach Non-Geeks The True Cost of Interruptions</title>
      <link>https://daedtech.com/programmers-teach-non-geeks-the-true-cost-of-interruptions/</link>
      <description>Interruptions are one of the biggest sources of inefficiency for programmers. Now, to be fair, they’re probably a big source of inefficiency for everyone, but relatively speaking, they’re worse for programmers. To understand what I mean, let’s take someone whose job is in sales. A lot of the day is probably spent on the phone […]</description>
      <author> (By Erik Dietrich)</author>
      <guid>https://daedtech.com/programmers-teach-non-geeks-the-true-cost-of-interruptions/</guid>
      <pubDate>Sat, 10 Jul 2021 14:04:20 GMT</pubDate>
    </item>
    <item>
      <title>Put That Microservice Down.</title>
      <link>https://georgestocker.com/2021/07/10/put-that-microservice-down/</link>
      <description>We need to have a no-shit moment, you and I. Put that Microservice down. Microservices aren’t for you, yet. Let’s reach over to the well of software development conventional wisdom and …</description>
      <author> ()</author>
      <guid>https://georgestocker.com/2021/07/10/put-that-microservice-down/</guid>
      <pubDate>Sat, 10 Jul 2021 13:05:40 GMT</pubDate>
    </item>
    <item>
      <title>Against SQL</title>
      <link>https://scattered-thoughts.net/writing/against-sql/</link>
      <description>The relational model is great:</description>
      <author> ()</author>
      <guid>https://scattered-thoughts.net/writing/against-sql/</guid>
      <pubDate>Sat, 10 Jul 2021 12:03:41 GMT</pubDate>
    </item>
    <item>
      <title>Creating reusable build scripts with NUKE components</title>
      <link>https://www.erikheemskerk.nl/nuke-build-components/</link>
      <description>How can we take advantage of the latest C# features to create highly reusable build scripts with NUKE?</description>
      <author> (Erik Heemskerk


2021-07-10

• 8 minutes)</author>
      <guid>https://www.erikheemskerk.nl/nuke-build-components/</guid>
      <pubDate>Sat, 10 Jul 2021 09:03:52 GMT</pubDate>
    </item>
    <item>
      <title>Spill single-def variable at definition to avoid further spilling by kunalspathak &amp;#183; Pull Request #54345 &amp;#183; dotnet/runtime</title>
      <link>https://github.com/dotnet/runtime/pull/54345</link>
      <description>If a variable is a single-def and it was ever decided to be spilled during register allocation, spill it at its first and only definition so we can skip further spilling throughout the method since...</description>
      <author> (dotnet-issue-labeler)</author>
      <guid>https://github.com/dotnet/runtime/pull/54345</guid>
      <pubDate>Sat, 10 Jul 2021 08:04:07 GMT</pubDate>
    </item>
    <item>
      <title>Explore Minimal APIs with Maria Naggaga | Web Wednesday</title>
      <link>https://socx.ly/3jr7kf</link>
      <description>What is the session about? Minimal apps minimal code!  Express, Django and Lumen provide their developers with the options to build great apps with less code...</description>
      <author> ()</author>
      <guid>https://socx.ly/3jr7kf</guid>
      <pubDate>Sat, 10 Jul 2021 08:04:01 GMT</pubDate>
    </item>
    <item>
      <title>romeovs/creep</title>
      <link>https://github.com/romeovs/creep</link>
      <description>a pretty sweet 4px wide pixel font. Contribute to romeovs/creep development by creating an account on GitHub.</description>
      <author> ()</author>
      <guid>https://github.com/romeovs/creep</guid>
      <pubDate>Sat, 10 Jul 2021 07:03:40 GMT</pubDate>
    </item>
    <item>
      <title>Entropy coding in Oodle Data: the big picture</title>
      <link>https://fgiesen.wordpress.com/2021/07/09/entropy-coding-in-oodle-data-the-big-picture/</link>
      <description>April 26, 2016 was the release date of Oodle 2.1.5 which introduced Kraken, so it celebrated its 5-year anniversary recently. A few months later we launched Selkie and Mermaid, which were already d…</description>
      <author> ()</author>
      <guid>https://fgiesen.wordpress.com/2021/07/09/entropy-coding-in-oodle-data-the-big-picture/</guid>
      <pubDate>Sat, 10 Jul 2021 05:03:59 GMT</pubDate>
    </item>
    <item>
      <title>Linux Audio is Dead | Non</title>
      <link>https://non.tuxfamily.org/wiki/2021-02-07%20Linux%20Audio%20is%20Dead</link>
      <description>In early 2020, most of the world was concerned with matters of great import, myself included. But three men, Filipe Coelho, David Runge, and Nils Hilbrect had more trivial things on their minds. At this time they came to me, not announcing themselves as a formal alliance, but pretending to be separate, disconnected parties suddenly showing up all at once. Each one had a list of demands for changes that I should make to NSM. I responded politely to each of these demands in turn, inquiring about why they believed them to be necessary, important, or appropriate, and I offered detailed explanations as to how they were not. They refused to participate in a discourse and reiterated their demands. I asked them why, if these trivial matters were so important to them, did they come to me with demands instead of patches to contribute? They became irate and threatened to fork my project. But of course, because they apparently lacked either the skill or the intention to make the changes themselves (as contributions), I didn&amp;#39;t take this threat seriously, as creating a fork would require them to actually do something.</description>
      <author> ()</author>
      <guid>https://non.tuxfamily.org/wiki/2021-02-07%20Linux%20Audio%20is%20Dead</guid>
      <pubDate>Sat, 10 Jul 2021 03:03:54 GMT</pubDate>
    </item>
    <item>
      <title>A Collection of 2020 Recorded Presentations</title>
      <link>https://jeremybytes.blogspot.com/2021/07/a-collection-of-2020-recorded.html</link>
      <description>   2020 was &amp;quot;interesting&amp;quot;. One good thing that came out of it is that I had the   chance to speak remotely for some user groups and conferen...</description>
      <author> ()</author>
      <guid>https://jeremybytes.blogspot.com/2021/07/a-collection-of-2020-recorded.html</guid>
      <pubDate>Sat, 10 Jul 2021 01:04:02 GMT</pubDate>
    </item>
    <item>
      <title>Learn functional programming with JavaScript through this friendly, gentle introduction course to the functional programming paradigm with Anjana Vakil.</title>
      <link>https://frontendmasters.com/courses/functional-first-steps/</link>
      <description>Learn core functional JavaScript programming techniques by coding everything with pure functions, learning recursion, higher-order functions, closures, currying, and function composition. Also, learn how immutable data is essential for functional programming.</description>
      <author> ()</author>
      <guid>https://frontendmasters.com/courses/functional-first-steps/</guid>
      <pubDate>Sat, 10 Jul 2021 00:04:13 GMT</pubDate>
    </item>
    <item>
      <title>Azure DevOps Podcast: Richard Lander on the New .NET Platform - Episode 148</title>
      <link>http://azuredevopspodcast.clear-measure.com/richard-lander-on-the-new-net-platform-episode-148</link>
      <description>Richard is a Principal Program Manager on the .NET Core team at Microsoft. He&amp;#39;s been with Microsoft for a total of 21 years, 18 of which have been with the .NET team (since 2003 when the codename was Whidbey!) Richard is truly a mover and shaker when it comes to pushing the .NET platform forward! Currently, he’s working on runtime features and performance, CLI experience, docker container experience, ARM32 and ARM64 support, IoT/GPIO/PWM support, blogging and customer engagement, and speaking at conferences. He&amp;#39;s also part of the design team that defines new .NET runtime capabilities and features. And in his spare time, he enjoys British rock and Doctor Who! &amp;amp;nbsp; A lot has changed since Richard was last on the show! In this episode, he is here to discuss all of the changes to the new .NET platform, how he’s continuing to push the .NET platform forward together with his team, the current state-of-the-art tools and techniques in the .NET IoT space and .NET applications, exciting developments with his current .NET blog series on DevBlogs.Microsoft.com, and much more! &amp;amp;nbsp; Topics of Discussion: [:14] About The Azure DevOps Podcast, Clear Measure, the new podcast Architect Tips, and Jeffrey’s offer to speak at virtual user groups. [1:23] About today’s episode with Richard Lander! [2:07] Jeffrey welcomes Richard Lander back to the podcast. [2:24] Richard shares what has changed on his team in the last two years and what they have been recently up to. [4:19] Richard shares about his role with the .NET team and what he mainly works on. [5:54] Richard’s vision and goals with the new .NET blog series. [7:56] About the various topics Richard has covered thus far with his blog series and a sneak preview of some upcoming blog topics he will be covering. [8:42] Richard shares what he and his team are doing on the front of platform OS enablement and Apple Silicon. [13:04] Jeffrey and Richard discuss Microsoft’s focus on backwards compatibility. [14:44] The current state-of-the-art in the .NET IoT space. [18:51] Have the .NET and IoT teams had conversations around Terminal.Gui? [19:20] A word from Azure DevOps Podcast’s sponsor: Clear Measure. [21:00] What is the current method with IoT devices? Are there any built-in testing capabilities? [24:19] Richard shares what the current state-of-the-art is for those doing regular .NET applications. [29:22] If a developer just deploys to App Service, are they using Azure containers under the covers regardless? [30:50] Richard shares his predictions on what he sees as being the most general-purpose runtime (AKS, App Service, ACI, etc.) in Azure for regular Blazor applications that developers are starting to build. [34:40] Jeffrey and Richard reflect on why it is such an interesting and exciting time to be a developer. [35:45] Does .NET and C# have the fastest mainstream execution? [39:48] Jeffrey thanks Richard for joining the podcast. &amp;amp;nbsp; Mentioned in this Episode:  — New video podcast!   (Sponsor)  — Available on Amazon!  — Click here to download the .NET DevOps for Azure ebook!   — Follow to stay informed about future events!                  &amp;amp;nbsp; Want to Learn More? Visit  for show notes and additional episodes. </description>
      <author> ()</author>
      <guid>http://azuredevopspodcast.clear-measure.com/richard-lander-on-the-new-net-platform-episode-148</guid>
      <pubDate>Sat, 10 Jul 2021 00:04:10 GMT</pubDate>
    </item>
  </channel>
</rss>