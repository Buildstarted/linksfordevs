<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>Taking AI Dev Gallery Code Cross Platform with Uno Platform - Nick&amp;#39;s .NET Travels</title>
      <link>https://nicksnettravels.builttoroam.com/taking-ai-dev-gallery-code-cross-platform-with-uno-platform/</link>
      <description>In the last two posts I introduced the AI Dev Gallery that Microsoft has been working on, and then demonstrated how code exported from the AI Dev Gallery can be added to an Uno Platform application. Unfortunately, whilst the code compiles on all the target platforms of the Uno Platform, the application fails to operate ... Read more</description>
      <author> ()</author>
      <guid>https://nicksnettravels.builttoroam.com/taking-ai-dev-gallery-code-cross-platform-with-uno-platform/</guid>
      <pubDate>Wed, 01 Jan 2025 18:01:38 GMT</pubDate>
    </item>
    <item>
      <title>DOOM&amp;#174; CAPTCHA</title>
      <link>https://doom-captcha.vercel.app/</link>
      <description>Prove you&amp;#39;re human by playing DOOM</description>
      <author> ()</author>
      <guid>https://doom-captcha.vercel.app/</guid>
      <pubDate>Wed, 01 Jan 2025 18:01:37 GMT</pubDate>
    </item>
    <item>
      <title>Putnam-AXIOM: A Functional and Static Benchmark for Measuring...</title>
      <link>https://openreview.net/forum?id=YXnwlZe0yf&amp;noteId=yrsGpHd0Sf</link>
      <description>As large language models (LLMs) continue to advance, many existing benchmarks designed to evaluate their reasoning capabilities are becoming saturated. Therefore, we present the Putnam-AXIOM...</description>
      <author> ()</author>
      <guid>https://openreview.net/forum?id=YXnwlZe0yf&amp;noteId=yrsGpHd0Sf</guid>
      <pubDate>Wed, 01 Jan 2025 17:02:00 GMT</pubDate>
    </item>
    <item>
      <title>Beginner&amp;#39;s Guide To Semantic Kernel In C#</title>
      <link>https://youtube.com/watch?v=YLv5z6NI494</link>
      <description>Want to build more interesting AI applications using C#? Let&amp;#39;s dive right into Semantic Kernel and see all of the awesome functionality that the framework has to offer!

----
Get C# 13 and .NET 9 – Modern Cross-Platform Development Fundamentals:
https://amzn.to/41VKoUI

----
Links From Video:
- https://learn.microsoft.com/en-us/visualstudio/deployment/installer-projects-net-core?view=vs-2022
- https://marketplace.visualstudio.com/items?itemName=VisualStudioClient.MicrosoftVisualStudio2022InstallerProjects

----
&amp;#128273; Membership &amp;amp; Subscriptions:
- &amp;#128232; Weekly Newsletter: https://weekly.devleader.ca
- &amp;#127960;️ Private Discord Community: https://sidestack.io/devleader

&amp;#129504; Courses:
- All Courses: https://www.devleader.ca/courses
- Get Promoted As A Software Engineer: https://dometrain.com/course/career-getting-promoted-as-a-software-engineer/?ref=nick-cosentino
- Nailing The Behavioral Interview: https://dometrain.com/course/career-nailing-the-behavioral-interview/?ref=nick-cosentino
- Getting Started with C#: https://dometrain.com/course/getting-started-csharp?ref=nick-cosentino
- Deep dive C#: https://dometrain.com/course/deep-dive-csharp?ref=nick-cosentino
- C# Zero to Hero BUNDLE: https://dometrain.com/bundle/from-zero-to-hero-csharp/?ref=nick-cosentino
- Reflection in .NET: https://dometrain.com/course/from-zero-to-hero-reflection-in-dotnet/?ref=nick-cosentino
- Refactoring For C# Devs: https://dometrain.com/course/from-zero-to-hero-refactoring-for-csharp-developers?ref=nick-cosentino
- [FREE] Intro to Software Development: https://www.youtube.com/playlist?list=PLzATctVhnsggb3lj53T8fJSK6LJQFUyKS

&amp;#128483;️ Social Media &amp;amp; Links:
- All My Links: https://linktr.ee/devleader
- Vlogs:  @DevLeaderBTS @CodeCommute 
- Blog: https://www.devleader.ca/
- TikTok: https://www.tiktok.com/@devleader
- LinkedIn: https://www.linkedin.com/in/nickcosentino
- Threads: https://threads.net/@dev.leader
- Twitter: https://twitter.com/DevLeaderCa
- Facebook: https://www.facebook.com/DevLeaderCa
- Instagram: https://www.instagram.com/dev.leader
- GitHub: https://github.com/ncosentino/
- Twitch: https://twitch.tv/devleaderca
- YouTube: https://youtube.com/@DevLeader?sub_confirmation=1

❤️ Affiliations &amp;amp; Products/Services That I Love:
- @BrandGhostAI for all of my content creation: https://brandghost.ai
- AI shorts helper Opus Clip: https://opus.pro/?via=2f9e97
- VPS hosting from RackNerd: https://my.racknerd.com/aff.php?aff=9013
- VPS hosting from Contabo: https://www.jdoqocy.com/click-101028632-12454592
- Newsletter platform ConvertKit: https://convertkit.com/?lmref=c5X7KQ
- Newsletter referral system SparkLoop: https://dash.sparkloop.app/signup?aff=9fe76c8b
----

#softwareengineering #softwaredeveloper #softwareengineer</description>
      <author> (Dev Leader)</author>
      <guid>https://youtube.com/watch?v=YLv5z6NI494</guid>
      <pubDate>Wed, 01 Jan 2025 15:01:36 GMT</pubDate>
    </item>
    <item>
      <title>GitHub - louis-e/arnis: Generate any location from the real world in Minecraft Java Edition with a high level of detail.</title>
      <link>https://github.com/louis-e/arnis</link>
      <description>Generate any location from the real world in Minecraft Java Edition with a high level of detail. - louis-e/arnis</description>
      <author> ()</author>
      <guid>https://github.com/louis-e/arnis</guid>
      <pubDate>Wed, 01 Jan 2025 05:01:37 GMT</pubDate>
    </item>
    <item>
      <title>Static search trees: 40x faster than binary search</title>
      <link>https://curiouscoding.nl/posts/static-search-tree/</link>
      <description>Table of Contents 1 Introduction 1.1 Problem statement 1.2 Recommended reading 1.3 Binary search and Eytzinger layout 1.4 Hugepages 1.5 A note on benchmarking 1.6 Cache lines 1.7 S-trees and B-trees 2 Optimizing find 2.1 Linear 2.2 Auto-vectorization 2.3 Trailing zeros 2.4 Popcount 2.5 Manual SIMD 3 Optimizing the search 3.1 Batching 3.2 Prefetching 3.3 Pointer arithmetic 3.3.1 Up-front splat 3.3.2 Byte-based pointers 3.3.3 The final version 3.4 Skip prefetch 3.5 Interleave 4 Optimizing the tree layout 4.1 Left-tree 4.2 Memory layouts 4.3 Node size (B=15) 4.3.1 Data structure size 4.4 Summary 5 Prefix partitioning 5.1 Full layout 5.2 Compact subtrees 5.3 The best of both: compact first level 5.4 Overlapping trees 5.5 Human data 5.6 Prefix map 5.7 Summary 6 Multi-threaded comparison 7 Conclusion 7.1 Future work 7.1.1 Branchy search 7.1.2 Interpolation search 7.1.3 Packing data smaller 7.1.4 Returning indices in original data 7.1.5 Range queries In this post, we will implement a static search tree (S+ tree) for high-throughput searching of sorted data, as introduced on Algorithmica. We’ll mostly take the code presented there as a starting point, and optimize it to its limits. For a large part, I’m simply taking the ‘future work’ ideas of that post and implementing them. And then there will be a bunch of looking at assembly code to shave off all the instructions we can. Lastly, there will be one big addition to optimize throughput: batching.</description>
      <author> ()</author>
      <guid>https://curiouscoding.nl/posts/static-search-tree/</guid>
      <pubDate>Wed, 01 Jan 2025 03:01:39 GMT</pubDate>
    </item>
    <item>
      <title>225. Systems Ideas that Sound Good But Almost Never Work—&amp;quot;Let&amp;#39;s just…&amp;quot;</title>
      <link>https://hardcoresoftware.learningbyshipping.com/p/225-systems-ideas-that-sound-good</link>
      <description>Some engineering patterns that sound good but almost never work as intended</description>
      <author> ()</author>
      <guid>https://hardcoresoftware.learningbyshipping.com/p/225-systems-ideas-that-sound-good</guid>
      <pubDate>Wed, 01 Jan 2025 01:01:37 GMT</pubDate>
    </item>
    <item>
      <title>Stefanos Kornilios Mitsis Poiitidis / dca3-game &amp;#183; GitLab</title>
      <link>https://gitlab.com/skmp/dca3-game</link>
      <description>A port of librw and re3 to the Dreamcast https://dca3.net</description>
      <author> ()</author>
      <guid>https://gitlab.com/skmp/dca3-game</guid>
      <pubDate>Wed, 01 Jan 2025 01:01:36 GMT</pubDate>
    </item>
    <item>
      <title>Problems I no longer have by using Server-side rendering</title>
      <link>https://www.wimdeblauwe.com/blog/2024/12/31/problems-i-no-longer-have-by-using-server-side-rendering/</link>
      <description>
I really like to use Spring Boot, Thymeleaf and htmx for a productive web application stack.
However, most of my day-to-day work involves writing REST API backends (Well, JSON Data APIs really) for Angular or React frontends.
During that work, I sometimes can’t help but think “We would not have this issue we are discussing now if we had used server-side rendering instead of a JavaScript Single Page Application.”.
This blog explains some of those thoughts in more detail.
</description>
      <author> ()</author>
      <guid>https://www.wimdeblauwe.com/blog/2024/12/31/problems-i-no-longer-have-by-using-server-side-rendering/</guid>
      <pubDate>Wed, 01 Jan 2025 00:01:57 GMT</pubDate>
    </item>
    <item>
      <title>It&amp;#39;s Okay to Code on Nights and Weekends | Tejas Kumar</title>
      <link>https://tej.as/blog/coding-nights-weekends-good-work-life-balance</link>
      <description>Rethinking the balance between coding passion, life, and maintaining healthy boundaries.</description>
      <author> (Tejas Kumar)</author>
      <guid>https://tej.as/blog/coding-nights-weekends-good-work-life-balance</guid>
      <pubDate>Wed, 01 Jan 2025 00:01:56 GMT</pubDate>
    </item>
    <item>
      <title>Waiting for PostgreSQL 18 – Add UUID version 7 generation function. – select * from depesz;</title>
      <link>https://www.depesz.com/2024/12/31/waiting-for-postgresql-18-add-uuid-version-7-generation-function/</link>
      <description>On 11st of December 2024, Masahiko Sawada committed patch:</description>
      <author> ()</author>
      <guid>https://www.depesz.com/2024/12/31/waiting-for-postgresql-18-add-uuid-version-7-generation-function/</guid>
      <pubDate>Wed, 01 Jan 2025 00:01:55 GMT</pubDate>
    </item>
    <item>
      <title>The Backstory of Backpropagation – Yuxi on the Wired</title>
      <link>https://yuxi-liu-wired.github.io/essays/posts/backstory-of-backpropagation/</link>
      <description>Why backprop was resisted for 20 years: assumption of discretely spiking neurons, goal of synthesizing Boolean logic, fear of local optima, and bad luck. Werbos has the best claim for invention.</description>
      <author> ()</author>
      <guid>https://yuxi-liu-wired.github.io/essays/posts/backstory-of-backpropagation/</guid>
      <pubDate>Wed, 01 Jan 2025 00:01:54 GMT</pubDate>
    </item>
    <item>
      <title>Pytest is fast</title>
      <link>https://blog.ploeh.dk/2024/12/30/pytest-is-fast/</link>
      <description>One major attraction of Python. A recent realization.</description>
      <author> ()</author>
      <guid>https://blog.ploeh.dk/2024/12/30/pytest-is-fast/</guid>
      <pubDate>Wed, 01 Jan 2025 00:01:53 GMT</pubDate>
    </item>
    <item>
      <title>just one last thing before the new year</title>
      <link>https://shilin.ca/just-one-last-thing-before-the-new-year/</link>
      <description>On December 31st, I cleaned up my Spotify instead of tackling my usual to-do list. In this post, I share how decluttering my music collection brought unexpected satisfaction.</description>
      <author> ()</author>
      <guid>https://shilin.ca/just-one-last-thing-before-the-new-year/</guid>
      <pubDate>Wed, 01 Jan 2025 00:01:53 GMT</pubDate>
    </item>
    <item>
      <title>Reflections on my 2024</title>
      <link>https://www.tropianhs.com/diary/2024/12/31/reflections-2024.html</link>
      <description>It’s that time of the year again, it’s time to look back and reflect on my professional journey in 2024.

</description>
      <author> ()</author>
      <guid>https://www.tropianhs.com/diary/2024/12/31/reflections-2024.html</guid>
      <pubDate>Wed, 01 Jan 2025 00:01:53 GMT</pubDate>
    </item>
    <item>
      <title>Almonds Can&amp;#39;t Do Math</title>
      <link>https://www.bramadams.dev/almonds-cant-do-math/</link>
      <description>don&amp;#39;t let the headlines get you!</description>
      <author> ()</author>
      <guid>https://www.bramadams.dev/almonds-cant-do-math/</guid>
      <pubDate>Wed, 01 Jan 2025 00:01:53 GMT</pubDate>
    </item>
    <item>
      <title>The road to Emacs maximalism</title>
      <link>https://schonfinkel.github.io/blog/20241230-the_road_to_emacs_maximalism.html</link>
      <description>Building an Emacs Utopia with hot glue, duct tape and Nix</description>
      <author> ()</author>
      <guid>https://schonfinkel.github.io/blog/20241230-the_road_to_emacs_maximalism.html</guid>
      <pubDate>Wed, 01 Jan 2025 00:01:53 GMT</pubDate>
    </item>
    <item>
      <title>What changed in Rails this year?</title>
      <link>https://greg.molnar.io/blog/what-changed-in-rails-this-year/</link>
      <description>2024 was an amazing year for the Rails community and I’d like to share a summary of what changed in the framework. As a TLDR, there were more than 4000 commits from 562 contributors and 55 releases, including Rails 8!</description>
      <author> ()</author>
      <guid>https://greg.molnar.io/blog/what-changed-in-rails-this-year/</guid>
      <pubDate>Wed, 01 Jan 2025 00:01:53 GMT</pubDate>
    </item>
    <item>
      <title>Daniel Skogly&amp;#39;s blog | Feeding Ducks</title>
      <link>https://blog.klungo.no/2024/12/31/feeding-ducks/</link>
      <description>I used to think that feeding ducks was an act of kindness. It certainly felt like it—just pure, selfless giving with nothing expected in return, except, of course, that warm and fuzzy feeling of having done something good. Parents bringing their kids along for this surely aim to teach them something virtuous, perhaps leading many of us to accept it by default.</description>
      <author> ()</author>
      <guid>https://blog.klungo.no/2024/12/31/feeding-ducks/</guid>
      <pubDate>Wed, 01 Jan 2025 00:01:53 GMT</pubDate>
    </item>
    <item>
      <title>My Experience with Cursor</title>
      <link>https://pulkit.cc/2024/12/30/cursor/</link>
      <description>Cursor - The AI Editor A little background, For those who are not aware Cursor is an AI-first fork of the very popular Visual Studio Code editor. More info here. I guess I am late to the party, but I never really gave any of these AI IDEs a shot…until now.</description>
      <author> (Pulkit Sharma)</author>
      <guid>https://pulkit.cc/2024/12/30/cursor/</guid>
      <pubDate>Wed, 01 Jan 2025 00:01:53 GMT</pubDate>
    </item>
    <item>
      <title>The Story of My First SaaS, 6 Months In</title>
      <link>https://www.eddyvinck.com/blog/my-first-saas-6-months-in/</link>
      <description>Blog Recorder&amp;#39;s first 6 months: From launch to $250 MRR with 17 paying customers, new AI personalization features, marketing experiments at tech conferences, and ambitious growth plans for reaching $1000 MRR in 2025.</description>
      <author> ()</author>
      <guid>https://www.eddyvinck.com/blog/my-first-saas-6-months-in/</guid>
      <pubDate>Wed, 01 Jan 2025 00:01:53 GMT</pubDate>
    </item>
    <item>
      <title>9 Things I Find Joyful About Tech in 2024</title>
      <link>https://mudkip.me/2024/12/31/9-Things-I-Find-Joyful-About-Tech-in-2024/</link>
      <description>This post is inspired by Neil Brown. Being mostly a pessimistic person, I often find myself worrying about the negative impact of technological developments in recent years. However, I’m still trying</description>
      <author> (Mudkip)</author>
      <guid>https://mudkip.me/2024/12/31/9-Things-I-Find-Joyful-About-Tech-in-2024/</guid>
      <pubDate>Wed, 01 Jan 2025 00:01:53 GMT</pubDate>
    </item>
    <item>
      <title>D&amp;#233;j&amp;#224; vu: Ghostly CVEs in my terminal title</title>
      <link>https://dgl.cx/2024/12/ghostty-terminal-title</link>
      <description>Exploring a security bug in Ghostty that is eerily familiar.</description>
      <author> ()</author>
      <guid>https://dgl.cx/2024/12/ghostty-terminal-title</guid>
      <pubDate>Wed, 01 Jan 2025 00:01:52 GMT</pubDate>
    </item>
    <item>
      <title>Declarative signals</title>
      <link>https://hawkticehurst.com/2024/12/declarative-signals/</link>
      <description>Bringing signals to HTML.</description>
      <author> ()</author>
      <guid>https://hawkticehurst.com/2024/12/declarative-signals/</guid>
      <pubDate>Wed, 01 Jan 2025 00:01:52 GMT</pubDate>
    </item>
    <item>
      <title>Deepseek: The Quiet Giant Leading China’s AI Race</title>
      <link>https://www.chinatalk.media/p/deepseek-ceo-interview-with-chinas</link>
      <description>Annotated translation of its CEO&amp;#39;s deepest interview</description>
      <author> ()</author>
      <guid>https://www.chinatalk.media/p/deepseek-ceo-interview-with-chinas</guid>
      <pubDate>Tue, 31 Dec 2024 23:01:27 GMT</pubDate>
    </item>
    <item>
      <title>lmno.lol</title>
      <link>https://lmno.lol/</link>
      <description>Wholesome blogs minus the yucky bits of the modern web</description>
      <author> ()</author>
      <guid>https://lmno.lol/</guid>
      <pubDate>Tue, 31 Dec 2024 23:01:26 GMT</pubDate>
    </item>
    <item>
      <title>darktable 5.0.0 released</title>
      <link>https://www.darktable.org/2024/12/darktable-5.0.0-released/</link>
      <description>We’re proud to announce the new feature release of darktable, 5.0.0!
The github release is here: https://github.com/darktable-org/darktable/releases/tag/release-5.0.0.
To build from source, do not use the autogenerated tarball provided by GitHub on the release page, download our tar.xz file instead. If you’re just building for yourself without creating a package for some distribution, then using source code cloning in git is an even more convenient way.
The checksums are:
$ sha256sum darktable-5.0.0.tar.xz
eaa136e6e624bb53127282e26aafa0441abcc189b55371465e1f5a8a493fa3a1  darktable-5.0.0.tar.xz

$ sha256sum darktable-5.0.0-x86_64.dmg
3f49cfb63958269b99065cf6b501678d4e63f2457ee1915bcd7ffa0dfef9dcfd  darktable-5.0.0-x86_64.dmg

$ sha256sum darktable-5.0.0-arm64.dmg
14feb35ef2b2e8e50cf1855826ad4913e905a5600a56a87dd98382e8d828e9db  darktable-5.0.0-arm64.dmg

$ sha256sum darktable-5.0.0-arm64-13.5.dmg
b43011cae5ddc9f19a8f895ba389e9ddb79d01534e9ca0568b7125026ac72145  darktable-5.0.0-arm64-13.5.dmg

$ sha256sum darktable-5.0.0-win64.exe
40444d5c7d310b1e1e859bd6b7c5d5e35d538a7bf9ad3e918b0e883c971451ea  darktable-5.0.0-win64.exe

$ sha256sum Darktable-5.0.0-x86_64.AppImage
d0061ac5a345c473d98f04388197afaee48e61b638db576ae1c88700cb8855cd  Darktable-5.0.0-x86_64.AppImage
When updating from the stable 4.8 series, please bear in mind that your edits will be preserved during this process, but the new library and configuration will no longer be usable with 4.8.</description>
      <author> ()</author>
      <guid>https://www.darktable.org/2024/12/darktable-5.0.0-released/</guid>
      <pubDate>Tue, 31 Dec 2024 22:02:10 GMT</pubDate>
    </item>
    <item>
      <title>Things we learned about LLMs in 2024</title>
      <link>https://simonwillison.net/2024/Dec/31/llms-in-2024/</link>
      <description>A lot has happened in the world of Large Language Models over the course of 2024. Here’s a review of things we figured out about the field in the past …</description>
      <author> ()</author>
      <guid>https://simonwillison.net/2024/Dec/31/llms-in-2024/</guid>
      <pubDate>Tue, 31 Dec 2024 22:01:49 GMT</pubDate>
    </item>
  </channel>
</rss>