<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/feed.xml" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/feed.xml</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>In 2025, venture capital can’t pretend everything is fine any more</title>
      <link>https://pivot-to-ai.com/2025/05/03/in-2025-venture-capital-cant-pretend-everything-is-fine-any-more/</link>
      <description>Venture capital is screwed. A bubble in AI is their last hope, and they’re betting everything on Sam Altman. It’s heartwarming. Today, we have the Pitchbook-NVCA Venture Monitor for Q1 2025. This i…</description>
      <guid>https://pivot-to-ai.com/2025/05/03/in-2025-venture-capital-cant-pretend-everything-is-fine-any-more/</guid>
      <pubDate>Mon, 12 May 2025 03:02:17 GMT</pubDate>
    </item>
    <item>
      <title>GitHub - Efeckc17/simple-todo-c: A lightweight, native Windows Todo application built with pure C and the Win32 API.</title>
      <link>https://github.com/Efeckc17/simple-todo-c</link>
      <description>A lightweight, native Windows Todo application built with pure C and the Win32 API. - Efeckc17/simple-todo-c</description>
      <guid>https://github.com/Efeckc17/simple-todo-c</guid>
      <pubDate>Mon, 12 May 2025 01:02:13 GMT</pubDate>
    </item>
    <item>
      <title>Alexander Sieradzki - Lights out solver or story about how to solve N^2 equations in O(N^3) time</title>
      <link>https://alexander.sieradzki.dev/posts/Lights_out_blogpost/</link>
      <description>Did you ever need to wake up at 5 am to go to the morning lecture where you are fighting for your life to stay awake and learn anything? Well, I know I did and it was a time when I kept myself focused by playing some logic games in the background. You know logic games like Minesweeper, simple games that once you learn you can solve absentmindedly. One game I kept thinking about over and over is Flip(which is an implementation of “Lights Out”). Computers solve this game by just solving a system of linear equations, but I wanted to find a method that 5 am me could absentmindedly use. Well, I didn’t find it but I found a way to solve that specific system of equations with much fewer operations. And that different way of solving it is the topic of this blog post.</description>
      <guid>https://alexander.sieradzki.dev/posts/Lights_out_blogpost/</guid>
      <pubDate>Sun, 11 May 2025 22:02:28 GMT</pubDate>
    </item>
    <item>
      <title>Alone Together: Disconnection Is Our Generation’s Black Death</title>
      <link>https://josef.cn/blog/black-death</link>
      <description>The Black Death killed 100 million people in the 14th century, and it’s happening again. Just like back then, none of us seem to know why. |  By Josef Chen</description>
      <guid>https://josef.cn/blog/black-death</guid>
      <pubDate>Sun, 11 May 2025 22:02:28 GMT</pubDate>
    </item>
    <item>
      <title>The Flying Canon</title>
      <link>https://asadk.com/p/flying-canon</link>
      <description>On the finest books about airplanes, flying airplanes, and people who fly airplanes</description>
      <guid>https://asadk.com/p/flying-canon</guid>
      <pubDate>Sun, 11 May 2025 22:02:27 GMT</pubDate>
    </item>
    <item>
      <title>Booting the RP2350 from UART</title>
      <link>https://pfister.dev/blog/2025/rp2350-uart-bl.html</link>
      <description>The RP2350 is a nice microcontroller from Raspberry Pi. Recently I thougt about a new project, where a lot of PWM channels would be needed. The RP2350B has 24 PWM channels, which is a lot - but not enough. I would need at least 33 PWM channels, and also some more GPIOs, so the RP2350 alone isn't enough. So I thought about a port expander... But what about using a second RP2350 as a port expander?</description>
      <guid>https://pfister.dev/blog/2025/rp2350-uart-bl.html</guid>
      <pubDate>Sun, 11 May 2025 22:02:27 GMT</pubDate>
    </item>
    <item>
      <title>Quick thoughts on evaluating agents</title>
      <link>https://rnikhil.com/2025/02/27/short-note-evaluating-agents</link>
      <description>I recently encountered some companies which are in the due diligence and report generation space. They all use a multitude of AI agents to plan and do the research and this made me wonder how these agent stacks are evaluated.</description>
      <guid>https://rnikhil.com/2025/02/27/short-note-evaluating-agents</guid>
      <pubDate>Sun, 11 May 2025 22:02:27 GMT</pubDate>
    </item>
    <item>
      <title>How modern databases keep their cool</title>
      <link>https://blog.canoozie.net/how-modern-databases-keep-their-cool/</link>
      <description>So I've been thinking a lot about database internals the past few weeks. For instance, how do these things actually work under the hood? I mean, we're all writing code that hammers these poor databases with concurrent requests, and somehow they don't explode into a million conflicting pieces. Pretty wild,</description>
      <guid>https://blog.canoozie.net/how-modern-databases-keep-their-cool/</guid>
      <pubDate>Sun, 11 May 2025 22:02:27 GMT</pubDate>
    </item>
    <item>
      <title>I Built a Tool to Predict If My Next Side Project Will Ruin My Weekend</title>
      <link>https://www.rafaelviana.io/posts/code-chrono</link>
      <description>I build tools to fix my own life — then write about the code, the crashes, and what actually worked.
No growth hacks. No platitudes. Just experiments, LLMs, and digital duct tape.</description>
      <guid>https://www.rafaelviana.io/posts/code-chrono</guid>
      <pubDate>Sun, 11 May 2025 22:02:27 GMT</pubDate>
    </item>
    <item>
      <title>Mutually-Beneficial Group Lies - kozlovski</title>
      <link>https://stanislavkozlovski.com/website/Politics/Mutually-Beneficial+Group+Lies</link>
      <description>Mutually-Beneficial Group Lies - kozlovski</description>
      <guid>https://stanislavkozlovski.com/website/Politics/Mutually-Beneficial+Group+Lies</guid>
      <pubDate>Sun, 11 May 2025 22:02:26 GMT</pubDate>
    </item>
    <item>
      <title>Fitting models from noisy heuristic labels - Emir's blog</title>
      <link>https://emiruz.com/post/2025-05-11-soft-labels/</link>
      <description>I present a weak supervision paradigm called “data programming” which uses
maximum likelihood estimation to produce soft labels from heuristics. These
soft labels can then be used to train other models, without true labels
being required at any stage. I’ve included a simple example from first
principles to show that the methods work. The original authors have a fully
featured package called Snorkel which
provides sophisticated data programming and related features.</description>
      <guid>https://emiruz.com/post/2025-05-11-soft-labels/</guid>
      <pubDate>Sun, 11 May 2025 22:02:26 GMT</pubDate>
    </item>
    <item>
      <title>Manager's Guide: Planning &amp; Budgeting a React Component Library for Internal Tools</title>
      <link>https://jinen83.github.io/webComponentLibrary-vs-DronaHQ/</link>
      <description>A strategic overview for managers on the benefits, roadmap, costs (3-year TCO), resources, and alternatives for building a React component library for internal applications.</description>
      <guid>https://jinen83.github.io/webComponentLibrary-vs-DronaHQ/</guid>
      <pubDate>Sun, 11 May 2025 22:02:26 GMT</pubDate>
    </item>
    <item>
      <title>Chris Henson - Beginner Resources for Formalizing Lambda Calculi</title>
      <link>https://chrishenson.net/posts/2025-05-10-formalized_lambda_calculus.html</link>
      <description>This started as a Twiter reply to @slimjimmy_dev
asking for some resources to help understand my Lean formalization of the
untyped lambda calculusNow that the groundwork is laid I should be able tackle the
categorical semantics of the untyped lambda calculus in Lean next! I claim
no originality for the confluence/progress pieces, they are an amalgamation
of the resources listed in this article., but quickly grew long enough that I decided to
make it into a post. Formalizing metatheory is a topic that is interesting to
beginner and experienced proof assistant users alike, but rife with tricky
technical issues that can dissuade one from making much progress. I hope by
collecting some resources here that I can provide a bit of help to those looking
for where to get started.</description>
      <guid>https://chrishenson.net/posts/2025-05-10-formalized_lambda_calculus.html</guid>
      <pubDate>Sun, 11 May 2025 22:02:25 GMT</pubDate>
    </item>
    <item>
      <title>Implementing a Mutex for ActiveJob</title>
      <link>https://shivam.dev/blog/activejob-mutex</link>
      <description>A field guide to preventing race conditions in Rails background jobs using a Redis-based distributed mutex.</description>
      <guid>https://shivam.dev/blog/activejob-mutex</guid>
      <pubDate>Sun, 11 May 2025 22:02:25 GMT</pubDate>
    </item>
    <item>
      <title>Backdooring the IDE: Malicious npm Packages Hijack Cursor Ed...</title>
      <link>https://socket.dev/blog/malicious-npm-packages-hijack-cursor-editor-on-macos</link>
      <description>Malicious npm packages posing as developer tools target macOS Cursor IDE users, stealing credentials and modifying files to gain persistent backdoor a...</description>
      <guid>https://socket.dev/blog/malicious-npm-packages-hijack-cursor-editor-on-macos</guid>
      <pubDate>Sun, 11 May 2025 20:02:19 GMT</pubDate>
    </item>
    <item>
      <title>Plain Vanilla</title>
      <link>https://plainvanillaweb.com/index.html</link>
      <description>An explainer for doing web development using only vanilla techniques.</description>
      <guid>https://plainvanillaweb.com/index.html</guid>
      <pubDate>Sun, 11 May 2025 20:02:18 GMT</pubDate>
    </item>
    <item>
      <title>Run Your Code Anywhere  Flexibility in Modern Development #softwaredevelopement #coding</title>
      <link>https://youtube.com/watch?v=hxd1Vs0YIzc</link>
      <description>Structure your code base to avoid external depenencies, and seperate your application concerns from your infrastructure concerns. 

Modularity, seperation of concerns, good code design. These things are even more important with the rise of AI generated code and AI coding assistants.</description>
      <author> (James Eastham)</author>
      <guid>https://youtube.com/watch?v=hxd1Vs0YIzc</guid>
      <pubDate>Sun, 11 May 2025 18:02:11 GMT</pubDate>
    </item>
    <item>
      <title>Leaving Google – Airs – Ian Lance Taylor</title>
      <link>https://www.airs.com/blog/archives/670</link>
      <description>I’ve left Google after working there for 19 years.</description>
      <guid>https://www.airs.com/blog/archives/670</guid>
      <pubDate>Sun, 11 May 2025 17:02:28 GMT</pubDate>
    </item>
    <item>
      <title>21 observations from people watching</title>
      <link>https://skincontact.substack.com/p/21-observations-from-people-watching</link>
      <description>Painting weddings for a few years now, I have spent a fair bit of time observing strangers move through a room.</description>
      <guid>https://skincontact.substack.com/p/21-observations-from-people-watching</guid>
      <pubDate>Sun, 11 May 2025 10:01:57 GMT</pubDate>
    </item>
  </channel>
</rss>