<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>DM&amp;#39;s Esoteric Programming Languages - Piet</title>
      <link>https://www.dangermouse.net/esoteric/piet.html</link>
      <description>Composition with Red,Yellow and Blue.1921, Piet Mondrian.</description>
      <author> ()</author>
      <guid>https://www.dangermouse.net/esoteric/piet.html</guid>
      <pubDate>Wed, 24 Apr 2024 15:01:02 GMT</pubDate>
    </item>
    <item>
      <title>Meta does everything OpenAI should be [D]</title>
      <link>https://old.reddit.com/r/MachineLearning/comments/1cbhec7/meta_does_everything_openai_should_be_d/</link>
      <description>I&amp;#39;m surprised (or maybe not) to say this, but Meta (or Facebook) democratises AI/ML much more than OpenAI, which was originally founded and...</description>
      <author> (ReputationMindless32)</author>
      <guid>https://old.reddit.com/r/MachineLearning/comments/1cbhec7/meta_does_everything_openai_should_be_d/</guid>
      <pubDate>Wed, 24 Apr 2024 14:01:15 GMT</pubDate>
    </item>
    <item>
      <title>ESPHome — ESPHome</title>
      <link>https://esphome.io/index.html</link>
      <description>ESPHome Homepage - Reimagining DIY Home Automation. ESPHome is a framework that tries to provide the best possible use experience for using IoT microcontrollers for Home Automation. Just write a simple YAML configuration file and get your own customized firmware.</description>
      <author> ()</author>
      <guid>https://esphome.io/index.html</guid>
      <pubDate>Wed, 24 Apr 2024 13:01:00 GMT</pubDate>
    </item>
    <item>
      <title>Pendulum Types</title>
      <link>https://xkcd.com/2924/</link>
      <description></description>
      <author> (About)</author>
      <guid>https://xkcd.com/2924/</guid>
      <pubDate>Wed, 24 Apr 2024 13:00:59 GMT</pubDate>
    </item>
    <item>
      <title>General Performance: Choosing Between GetValueOrDefault() and Coalesce Operator for Nullable Integers</title>
      <link>https://dotnettips.wordpress.com/2024/04/24/general-performance-choosing-between-getvalueordefault-and-coalesce-operator-for-nullable-integers/</link>
      <description>In dealing with nullable integers and the need for default values, two common approaches are the coalesce operator (??) and GetValueOrDefault(). Alternatively, utilizing HasValue with the condition…</description>
      <author> (Published by dotNetDave)</author>
      <guid>https://dotnettips.wordpress.com/2024/04/24/general-performance-choosing-between-getvalueordefault-and-coalesce-operator-for-nullable-integers/</guid>
      <pubDate>Wed, 24 Apr 2024 09:01:06 GMT</pubDate>
    </item>
    <item>
      <title>GitHub - apple/corenet: CoreNet: A library for training deep neural networks</title>
      <link>https://github.com/apple/corenet</link>
      <description>CoreNet: A library for training deep neural networks - apple/corenet</description>
      <author> (apple)</author>
      <guid>https://github.com/apple/corenet</guid>
      <pubDate>Wed, 24 Apr 2024 07:01:00 GMT</pubDate>
    </item>
    <item>
      <title>Mastering SOLID Principles in C#: A Practical Guide</title>
      <link>https://www.syncfusion.com/blogs/post/mastering-solid-principles-csharp</link>
      <description>This blog post explores the SOLID principles of object-oriented design and how to implement them in C#.</description>
      <author> (A. Yohan Malshika)</author>
      <guid>https://www.syncfusion.com/blogs/post/mastering-solid-principles-csharp</guid>
      <pubDate>Wed, 24 Apr 2024 06:01:18 GMT</pubDate>
    </item>
    <item>
      <title>WIP is waste</title>
      <link>https://thoughtbot.com/blog/wip-is-waste</link>
      <description>A manifesto on work, waste, cost and value.</description>
      <author> (Jared Turner

        
          April 23, 2024)</author>
      <guid>https://thoughtbot.com/blog/wip-is-waste</guid>
      <pubDate>Wed, 24 Apr 2024 06:01:17 GMT</pubDate>
    </item>
    <item>
      <title>Exploring the AskVS command in GitHub Copilot for Visual Studio - Visual Studio Blog</title>
      <link>https://devblogs.microsoft.com/visualstudio/exploring-the-askvs-command-in-github-copilot-for-visual-studio/</link>
      <description>Maximize your productivity in Visual Studio with the AskVS command from GitHub Copilot. Discover how this feature can enhance your coding projects.</description>
      <author> (Cynthia Zanoni)</author>
      <guid>https://devblogs.microsoft.com/visualstudio/exploring-the-askvs-command-in-github-copilot-for-visual-studio/</guid>
      <pubDate>Wed, 24 Apr 2024 06:01:15 GMT</pubDate>
    </item>
    <item>
      <title>Fix Unable To Resolve DbContextOptions For EF Core</title>
      <link>https://khalidabuhakmeh.com/fix-unable-to-resolve-dbcontextoptions-for-ef-core</link>
      <description>Create and apply EF Core migrations from a .NET Class library</description>
      <author> (Khalid Abuhakmeh)</author>
      <guid>https://khalidabuhakmeh.com/fix-unable-to-resolve-dbcontextoptions-for-ef-core</guid>
      <pubDate>Wed, 24 Apr 2024 06:01:13 GMT</pubDate>
    </item>
    <item>
      <title>Async APIs - don&amp;#39;t confuse your events, commands and state</title>
      <link>https://blog.scottlogic.com/2024/04/22/message_types.html</link>
      <description>This blog is about the different types of message you can put on systems like Rabbit MQ and Kafka. It discusses the differences between commands, events, state and gives a few tips around how to structure your messages.</description>
      <author> (David Hope)</author>
      <guid>https://blog.scottlogic.com/2024/04/22/message_types.html</guid>
      <pubDate>Wed, 24 Apr 2024 06:01:13 GMT</pubDate>
    </item>
    <item>
      <title>Tales from the .NET Migration Trenches - Authentication</title>
      <link>https://www.jimmybogard.com/tales-from-the-net-migration-trenches-authentication/</link>
      <description>Posts in this series:

 * Intro
 * Cataloging
 * Empty Proxy
 * Shared Library
 * Our First Controller
 * Migrating Initial Business Logic
 * Our First Views
 * Session State
 * Hangfire
 * Authentication

Of all the topics in .NET migration, authentication, like always, is the one that is most characterized by &amp;quot;It Depends&amp;quot;. The solution for addressing authentication is</description>
      <author> (Jimmy Bogard
                
                    Apr 22, 2024
                        • 3 min read)</author>
      <guid>https://www.jimmybogard.com/tales-from-the-net-migration-trenches-authentication/</guid>
      <pubDate>Wed, 24 Apr 2024 06:01:13 GMT</pubDate>
    </item>
    <item>
      <title>C isn’t a Hangover; Rust isn’t a Hangover Cure</title>
      <link>https://medium.com/@john_25313/c-isnt-a-hangover-rust-isn-t-a-hangover-cure-580c9b35b5ce</link>
      <description>A few weeks ago, I got a bit miffed reading yet another article that was too dismissive about memory safety, basically being mostly…</description>
      <author> (https://medium.com/@john_25313)</author>
      <guid>https://medium.com/@john_25313/c-isnt-a-hangover-rust-isn-t-a-hangover-cure-580c9b35b5ce</guid>
      <pubDate>Wed, 24 Apr 2024 02:01:07 GMT</pubDate>
    </item>
    <item>
      <title>Building FocusGuardian, my TribeHacks IX submission, in 24 hours</title>
      <link>https://matthew.science/posts/focusguardian/</link>
      <description>Building a distraction blocking service in 24 hours</description>
      <author> ()</author>
      <guid>https://matthew.science/posts/focusguardian/</guid>
      <pubDate>Tue, 23 Apr 2024 22:01:10 GMT</pubDate>
    </item>
    <item>
      <title>AI - SkyNet Is Not Coming to Kill You</title>
      <link>https://renegadeotter.com/2024/04/22/artificial-intelligence-skynet-is-not-coming-to-kill-you.html</link>
      <description>Maybe just hurt you a little</description>
      <author> (By: Andrei Taranchenko
            (LinkedIn))</author>
      <guid>https://renegadeotter.com/2024/04/22/artificial-intelligence-skynet-is-not-coming-to-kill-you.html</guid>
      <pubDate>Tue, 23 Apr 2024 22:01:10 GMT</pubDate>
    </item>
    <item>
      <title>Code It Any Way You Want: Optimal Parameter Passing – Array vs. Params Keyword</title>
      <link>https://dotnettips.wordpress.com/2024/04/23/code-it-any-way-you-want-optimal-parameter-passing-array-vs-params-keyword/</link>
      <description>The article explores the performance differences between passing parameters as arrays or using the params keyword in C#. Despite similarities in speed, the author recommends using the params keywor…</description>
      <author> (Published by dotNetDave)</author>
      <guid>https://dotnettips.wordpress.com/2024/04/23/code-it-any-way-you-want-optimal-parameter-passing-array-vs-params-keyword/</guid>
      <pubDate>Tue, 23 Apr 2024 22:01:09 GMT</pubDate>
    </item>
    <item>
      <title>GitHub - rabbitscam/rabbitr1</title>
      <link>https://github.com/rabbitscam/rabbitr1</link>
      <description>Contribute to rabbitscam/rabbitr1 development by creating an account on GitHub.</description>
      <author> (rabbitscam)</author>
      <guid>https://github.com/rabbitscam/rabbitr1</guid>
      <pubDate>Tue, 23 Apr 2024 22:01:09 GMT</pubDate>
    </item>
    <item>
      <title>How to Juggle Priorities: Decide Which Balls Are Glass and Which Are Plastic</title>
      <link>https://ashleyjanssen.com/how-to-juggle-priorities-decide-which-balls-are-glass-and-which-are-plastic/</link>
      <description>You can&amp;#39;t keep all your balls in the air all the time but that&amp;#39;s ok! Learn how to decide which to drop and which to keep in the air.</description>
      <author> (Ashley Janssen)</author>
      <guid>https://ashleyjanssen.com/how-to-juggle-priorities-decide-which-balls-are-glass-and-which-are-plastic/</guid>
      <pubDate>Tue, 23 Apr 2024 22:01:08 GMT</pubDate>
    </item>
    <item>
      <title>Meta Bites the Apple</title>
      <link>https://ewakened.com/meta-goes-for-apples-jugular/</link>
      <description>Someone on Meta&amp;#39;s PR team deserves a big bonus with the announcement of Meta Horizon OS today.

&amp;#127939;‍♀️Horizon OS is a new platform like iOS or Android designed for VR software. Meta has partnered with other big names, Asus, Lenovo, Xbox to build devices using this new OS.

Why does</description>
      <author> (Kent Fenwick)</author>
      <guid>https://ewakened.com/meta-goes-for-apples-jugular/</guid>
      <pubDate>Tue, 23 Apr 2024 22:01:08 GMT</pubDate>
    </item>
    <item>
      <title>Fabian Lindfors</title>
      <link>https://fabianlindfors.se/blog/complex-schema-migrations-with-reshape/</link>
      <description>MSc Computer science student
</description>
      <author> ()</author>
      <guid>https://fabianlindfors.se/blog/complex-schema-migrations-with-reshape/</guid>
      <pubDate>Tue, 23 Apr 2024 22:01:08 GMT</pubDate>
    </item>
    <item>
      <title>Reminding Myself to Take a Break</title>
      <link>https://blog.damnever.com/en/2024/reminding-myself-to-take-a-break-the-hard-way.html</link>
      <description>Reminding Myself to Take a Break - The Hard Way</description>
      <author> ()</author>
      <guid>https://blog.damnever.com/en/2024/reminding-myself-to-take-a-break-the-hard-way.html</guid>
      <pubDate>Tue, 23 Apr 2024 22:01:08 GMT</pubDate>
    </item>
    <item>
      <title>Generate code for declarative language instead of progr...</title>
      <link>https://near.tl/developer-forever/forum/announcement/generate-code-for-declarative-language-instead-of-.anc-17ee9632-adef-49b3-b320-c4e0b82c8d8a.html</link>
      <description>Code Generation AI is all the rage these days. But is generating code for programming languages like JavaScript and Python the right path to take? I think not. I think we should be generating code for declarative languages like Excel or SQL.
What&amp;#39;s the difference, you ask?
In declarative languages, you express what your intention is. For example, in Excel, you can use SUM() to add all the line items and calculate the order amount. If the quantity of a line item changes, it will automatically recalculate the line item amount and then invoke SUM() to recalculate the order amount. But in imperative languages like JavaScript or Python, you instruct the computer on how to calculate the order amount. You would implement a function to add the line items as the order amount. Anytime the quantity of a line item changes, it is your job to call the function and recalculate the order amount.
Why is this important?
If you are asking AI to generate code for your requirements, you are essentially expressing your intent. So, expressing it in a declarative language seems natural. This will help the person who gave the requirement to understand the code generated by the AI. On the other hand, generating code for a programming language seems like the worst form of leaky abstraction (https://www.joelonsoftware.com/2002/11/11/the-law-of-leaky-abstractions/). &amp;quot;Leaky abstraction&amp;quot; describes a scenario where attempts to simplify a system end up requiring users to understand its underlying complexities to troubleshoot it. Code generation can automate the creation process. But, the resulting code can be a puzzle even to a skilled developer who is debugging it. The person who gave the requirement will most likely not understand any of it.
So, why do AI companies generate code like this?
I guess it comes down to the availability of training data for AI. There are a lot of open-source projects in JavaScript or Python, so it is easy to train AI with it. But open-source projects in Excel are almost non-existent. So, the unavailability of training data might be the primary reason behind the direction these code generation AI companies are taking. At Neartail, we are taking a middle road. We have created a declarative language using JavaScript syntax so that we could train the AI as well as make it understandable to business owners. Will other AI companies realize the perils of leaky abstraction and change its course? Only time will tell.</description>
      <author> (Neartail.com)</author>
      <guid>https://near.tl/developer-forever/forum/announcement/generate-code-for-declarative-language-instead-of-.anc-17ee9632-adef-49b3-b320-c4e0b82c8d8a.html</guid>
      <pubDate>Tue, 23 Apr 2024 22:01:08 GMT</pubDate>
    </item>
    <item>
      <title>How to set up Nsight Compute Locally to profile Remote GPUs</title>
      <link>https://tspeterkim.github.io/posts/nsight-setup-on-ec2</link>
      <description>Have a remote GPU instance? Want to see some rooflines with Nsight Compute? This tutorial is for you.</description>
      <author> ()</author>
      <guid>https://tspeterkim.github.io/posts/nsight-setup-on-ec2</guid>
      <pubDate>Tue, 23 Apr 2024 22:01:07 GMT</pubDate>
    </item>
    <item>
      <title>The best keyboard I&amp;#39;ve ever had</title>
      <link>https://duarteocarmo.com/blog/happy-hacking-keyboard-review</link>
      <description>A small review of the Happy Hacking Hybrid Type-S keyboard.</description>
      <author> (Duarte O.Carmo)</author>
      <guid>https://duarteocarmo.com/blog/happy-hacking-keyboard-review</guid>
      <pubDate>Tue, 23 Apr 2024 22:01:07 GMT</pubDate>
    </item>
    <item>
      <title>FTC Announces Rule Banning Noncompetes</title>
      <link>https://www.ftc.gov/news-events/news/press-releases/2024/04/ftc-announces-rule-banning-noncompetes</link>
      <description>Today, the Federal Trade Commission issued a final rule to promote competition by banning noncompetes nationwide, protecting the fundamen</description>
      <author> ()</author>
      <guid>https://www.ftc.gov/news-events/news/press-releases/2024/04/ftc-announces-rule-banning-noncompetes</guid>
      <pubDate>Tue, 23 Apr 2024 20:01:10 GMT</pubDate>
    </item>
    <item>
      <title>Refactor your C# code with primary constructors - .NET Blog</title>
      <link>https://devblogs.microsoft.com/dotnet/csharp-primary-constructors-refactoring/</link>
      <description>Explore C# 12&amp;#39;s primary constructors through incremental refactoring of a Worker service.</description>
      <author> (David Pine)</author>
      <guid>https://devblogs.microsoft.com/dotnet/csharp-primary-constructors-refactoring/</guid>
      <pubDate>Tue, 23 Apr 2024 19:01:05 GMT</pubDate>
    </item>
    <item>
      <title>Adding state to the update notification pattern, part 5 - The Old New Thing</title>
      <link>https://devblogs.microsoft.com/oldnewthing/20240423-00/?p=109697</link>
      <description>Using a change counter.</description>
      <author> (Raymond Chen)</author>
      <guid>https://devblogs.microsoft.com/oldnewthing/20240423-00/?p=109697</guid>
      <pubDate>Tue, 23 Apr 2024 17:01:06 GMT</pubDate>
    </item>
  </channel>
</rss>