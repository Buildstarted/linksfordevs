[
  {
    "Title": "Lessons From Billions of Breached Records",
    "Url": "https://events.tech.rocks/summit-2021/fr/session/4e20d79f-6cf3-eb11-b563-a085fc3e7f45",
    "Timestamp": "2021-12-09T10:02:06",
    "Domain": "events.tech.rocks",
    "Description": "Dec 9, 2021"
  },
  {
    "Title": "How to write idempotent Bash scripts",
    "Url": "https://arslan.io/2019/07/03/how-to-write-idempotent-bash-scripts/",
    "Timestamp": "2021-12-09T10:02:03",
    "Domain": "arslan.io",
    "Description": "This blog post shows tips and tricks to write resilient and idempotent bash scripts."
  },
  {
    "Title": ".NET Advent Calendar - .NET Advent Calendar 2021, Day 9",
    "Url": "https://dotnet.christmas/2021/9",
    "Timestamp": "2021-12-09T09:01:40",
    "Domain": "dotnet.christmas",
    "Description": "One blog post every day until Christmas."
  },
  {
    "Title": "Creating an incremental generator: Creating a source generator - Part 1",
    "Url": "https://andrewlock.net/creating-a-source-generator-part-1-creating-an-incremental-source-generator/",
    "Timestamp": "2021-12-09T09:01:40",
    "Domain": "andrewlock.net",
    "Description": "In this post I walk through how to create a practical .NET 6 incremental source generator: an enum extensions class with a fast ToString() implementation"
  },
  {
    "Title": "r/dotnet - Repository pattern or DbContext - what's your poison?",
    "Url": "https://www.reddit.com/r/dotnet/comments/rc2lzj/repository_pattern_or_dbcontext_whats_your_poison/",
    "Timestamp": "2021-12-09T08:02:01",
    "Domain": "www.reddit.com",
    "Description": "17 votes and 22 comments so far on Reddit"
  },
  {
    "Title": "Don't Code Tired | What’s New in C# 10: Simplify Nested Property Pattern Code",
    "Url": "http://dontcodetired.com/blog/post/Whats-New-in-C-10-Simplify-Nested-Property-Pattern-Code",
    "Timestamp": "2021-12-09T06:02:08",
    "Domain": "dontcodetired.com",
    "Description": "Don't Code Tired - Jason Roberts on Software Development and .NET -"
  },
  {
    "Title": "Pixel prevented me from calling 911",
    "Url": "https://old.reddit.com/r/GooglePixel/comments/r4xz1f/pixel_prevented_me_from_calling_911/",
    "Timestamp": "2021-12-09T06:02:06",
    "Domain": "old.reddit.com",
    "Description": "I had to call an ambulance for the grandmother on Friday as she appeared to be having a stroke. I got off a phone call with my mom, and proceeded..."
  },
  {
    "Title": "Make the Implicit Explicit",
    "Url": "https://ardalis.com/make-implicit-explicit/",
    "Timestamp": "2021-12-09T06:02:04",
    "Domain": "ardalis.com",
    "Description": "When practicing software architecture and design, one important consideration is how the rules of the system are modeled. Are the rules ad hoc and a matter of tribal knowledge of the developers who came before, or are they explicit in the way the system and its classes are designed and used? Whenever possible, favor making the implicit explicit in your design, so that as developers come and go, the design remains consistent and discoverable."
  },
  {
    "Title": "Don't Do That, Do This: The .NET 6 Edition",
    "Url": "https://www.daveabrock.com/2021/12/08/do-this-not-that-the-net-6-edition/",
    "Timestamp": "2021-12-09T06:02:03",
    "Domain": "www.daveabrock.com",
    "Description": "In this C# Advent post, we have a little fun and talk about some nice, lesser hyped .NET 6 features that might make you happy."
  },
  {
    "Title": "Queue Despair: Ordering and Poison Messages",
    "Url": "https://www.openmymind.net/Queue-Despair-Ordering-And-Poison-Messages/",
    "Timestamp": "2021-12-09T06:02:03",
    "Domain": "www.openmymind.net",
    "Description": "My struggle using queues / rabbitmq in the face of high availability, ordering and poison messages"
  },
  {
    "Title": ".NET Rocks! vNext",
    "Url": "https://www.dotnetrocks.com/default.aspx?ShowNum=1769",
    "Timestamp": "2021-12-09T05:02:07",
    "Domain": "www.dotnetrocks.com",
    "Description": ".NET Rocks! is a weekly talk show for anyone interested in programming on the Microsoft .NET platform. The shows range from introductory information to hardcore geekiness."
  },
  {
    "Title": "The Last Molecule",
    "Url": "https://xkcd.com/2552/",
    "Timestamp": "2021-12-09T05:02:05",
    "Domain": "xkcd.com",
    "Description": ""
  },
  {
    "Title": "Mulm, renewable bad energy (@mulmbot)",
    "Url": "https://n.hyperborea.cloud/mulmbot/status/1452592202681618436",
    "Timestamp": "2021-12-09T02:01:57",
    "Domain": "n.hyperborea.cloud",
    "Description": "Hey @unitygames I'd like to know which part of this you think is a revolution? The damage it did to the art community? The damage it does to the environment? The laughing stock we look like as artists to the rest of society? Which part is it and why should I join exactly?"
  },
  {
    "Title": "Long live the Monolith! Monolithic Architecture != Big Ball of Mud",
    "Url": "https://codeopinion.com/long-live-the-monolith-monolithic-architecture-big-ball-of-mud/",
    "Timestamp": "2021-12-09T01:01:53",
    "Domain": "codeopinion.com",
    "Description": "If you're developing a Monolith or using a Monolithic Architecture doesn't mean it needs to be a big ball of mud."
  },
  {
    "Title": "‎Security. Cryptography. Whatever.: WireGuard, feat. Jason Donenfeld on Apple Podcasts",
    "Url": "https://podcasts.apple.com/us/podcast/wireguard-feat-jason-donenfeld/id1578405214?i=1000544031844",
    "Timestamp": "2021-12-09T00:02:15",
    "Domain": "podcasts.apple.com",
    "Description": "‎Show Security. Cryptography. Whatever., Ep WireGuard, feat. Jason Donenfeld - Dec 5, 2021"
  }
]