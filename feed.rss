<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>Why Is America Stuck with Bad Headlights?</title>
      <link>https://www.caranddriver.com/features/columns/a33447381/why-is-america-stuck-with-bad-headlights/</link>
      <description>A drive in a European-market 2021 Porsche 911 Turbo S with matrix LEDs proves that America's headlights aren't too bright.</description>
      <author> (By
					Ezra Dyer)</author>
      <guid>https://www.caranddriver.com/features/columns/a33447381/why-is-america-stuck-with-bad-headlights/</guid>
      <pubDate>Tue, 04 Aug 2020 08:03:03 GMT</pubDate>
    </item>
    <item>
      <title>Cleaner tests with XUnit's IAsyncLifetime and expression-bodied members</title>
      <link>https://www.danclarke.com/cleaner-tests-with-iasynclifetime</link>
      <description>When writing tests, sometimes it can be tempting to dump a bunch of asserts into the same test to avoid duplication across multiple tests...</description>
      <author> ()</author>
      <guid>https://www.danclarke.com/cleaner-tests-with-iasynclifetime</guid>
      <pubDate>Tue, 04 Aug 2020 08:03:00 GMT</pubDate>
    </item>
    <item>
      <title>The Julia Language</title>
      <link>https://julialang.org/blog/2020/08/julia-1.5-highlights/</link>
      <description>Official website for the Julia programming language</description>
      <author> (Jeff Bezanson, Stefan Karpinski, Viral Shah, Alan Edelman, et al.)</author>
      <guid>https://julialang.org/blog/2020/08/julia-1.5-highlights/</guid>
      <pubDate>Tue, 04 Aug 2020 07:02:54 GMT</pubDate>
    </item>
    <item>
      <title>The .NET Core Journey at Criteo</title>
      <link>https://medium.com/criteo-labs/the-net-core-journey-at-criteo-1e47ed87adce</link>
      <description>This post shows the challenges we faced during the migration to .NET Core on containerized Linux for our main application.</description>
      <author> (https://medium.com/@chnasarre)</author>
      <guid>https://medium.com/criteo-labs/the-net-core-journey-at-criteo-1e47ed87adce</guid>
      <pubDate>Tue, 04 Aug 2020 06:03:47 GMT</pubDate>
    </item>
    <item>
      <title>PowerShell Microservice - Hello World</title>
      <link>https://dfinke.github.io/powershell,%20docker,%20pode/2020/08/01/PowerShell-Microservice-Hello-World.html</link>
      <description>PowerShell-Microservice-Hello-World</description>
      <author> ()</author>
      <guid>https://dfinke.github.io/powershell,%20docker,%20pode/2020/08/01/PowerShell-Microservice-Hello-World.html</guid>
      <pubDate>Tue, 04 Aug 2020 06:03:42 GMT</pubDate>
    </item>
    <item>
      <title>Sign Up for the Private Preview of Visual Studio support for Codespaces! | C++ Team Blog</title>
      <link>https://devblogs.microsoft.com/cppblog/sign-up-for-the-private-preview-of-visual-studio-support-for-codespaces/</link>
      <description>At the Microsoft Build conference, you may have seen our C++ Codespaces demo (at 26:00). We showed several ways Codespaces can improve your C++ development experience, including offloading your builds and other compute-heavy tasks to the cloud. We’ve already been chatting with many you,</description>
      <author> (Nick Uhlenhuth  Follow)</author>
      <guid>https://devblogs.microsoft.com/cppblog/sign-up-for-the-private-preview-of-visual-studio-support-for-codespaces/</guid>
      <pubDate>Tue, 04 Aug 2020 06:03:40 GMT</pubDate>
    </item>
    <item>
      <title>XamarinCommunityToolkit: an introduction - Gerald Versluis</title>
      <link>https://blog.verslu.is/xamarin/xamarin-forms-xamarin/microsoft-toolkit-xamarin-forms-introduction/</link>
      <description>I proudly introduce to you the Microsoft.Toolkit.Xamarin.Forms package! In this post you will read all about this package (aka XamarinCommunityToolkit)</description>
      <author> ()</author>
      <guid>https://blog.verslu.is/xamarin/xamarin-forms-xamarin/microsoft-toolkit-xamarin-forms-introduction/</guid>
      <pubDate>Tue, 04 Aug 2020 06:03:37 GMT</pubDate>
    </item>
    <item>
      <title>August dotNET Virtural Events to Tune Into | Xamarin Blog</title>
      <link>https://devblogs.microsoft.com/xamarin/august-dotnet-virtual-events/</link>
      <description>This August, take your .NET development skills to the next level through this amazing list of online events, streams, and videos just for you!</description>
      <author> (Jayme Singleton Business Operations Program Manager ll, Mobile/VS &amp; .NET PM - R&amp;D Follow)</author>
      <guid>https://devblogs.microsoft.com/xamarin/august-dotnet-virtual-events/</guid>
      <pubDate>Tue, 04 Aug 2020 06:03:34 GMT</pubDate>
    </item>
    <item>
      <title>Automated Production Deployments are Not the Key to DevOps Performance - Redgate Software</title>
      <link>https://www.red-gate.com/blog/automated-production-deployments-are-not-the-key-to-devops-performance</link>
      <description>There's a myth about DevOps which is hard to shake free of: that "success" means fully automating your deployments from code check-in to production. This</description>
      <author> (Red Gate Software Ltd)</author>
      <guid>https://www.red-gate.com/blog/automated-production-deployments-are-not-the-key-to-devops-performance</guid>
      <pubDate>Tue, 04 Aug 2020 06:03:30 GMT</pubDate>
    </item>
    <item>
      <title>.NET Annotated Monthly | August 2020 – .NET Tools Blog | JetBrains</title>
      <link>https://blog.jetbrains.com/dotnet/2020/08/03/net-annotated-monthly-august-2020/?utm_source=twitter&amp;utm_medium=referral&amp;utm_campaign=resharper&amp;utm_content=annotated202008</link>
      <description>Summer is here, but at present in 2020 many people can't go anywhere, so a "staycation" will have to do. No problem though, just sit back, relax, and browse the content from our .NET Annotat</description>
      <author> (Rachel Appel)</author>
      <guid>https://blog.jetbrains.com/dotnet/2020/08/03/net-annotated-monthly-august-2020/?utm_source=twitter&amp;utm_medium=referral&amp;utm_campaign=resharper&amp;utm_content=annotated202008</guid>
      <pubDate>Tue, 04 Aug 2020 06:03:25 GMT</pubDate>
    </item>
    <item>
      <title>.Net Framework Nuget Packages - Solving Assembly Redirection From Package Vs Assembly Versioning, Dependency Resolution, And Strong-Naming | Software Meadows</title>
      <link>https://www.softwaremeadows.com/posts/net_framework_nuget_packages_-_versioning__dependency_resolution__and/</link>
      <description>Important:  The information below applies specifically to .Net Framework applications. Most of the information also applies to .Net Core and Standard applications as well. A future post will examine Core/Standard applications.</description>
      <author> ()</author>
      <guid>https://www.softwaremeadows.com/posts/net_framework_nuget_packages_-_versioning__dependency_resolution__and/</guid>
      <pubDate>Tue, 04 Aug 2020 06:03:21 GMT</pubDate>
    </item>
    <item>
      <title>Drawing Custom Graphs in HTML and Javascript - The Long Walk</title>
      <link>https://www.pmichaels.net/2020/08/01/drawing-custom-graphs-in-html-and-javascript/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=drawing-custom-graphs-in-html-and-javascript</link>
      <description>While recently playing with the HTML Canvas again, it occurred to me that this power could be used for evil (or statistics are it is commonly known these days). In this post, I’m going to draw an animated chart using the HTML Canvas and Javascript. Let’s start with the HTML: Again, as with my previous […]</description>
      <author> (by pcmichaels)</author>
      <guid>https://www.pmichaels.net/2020/08/01/drawing-custom-graphs-in-html-and-javascript/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=drawing-custom-graphs-in-html-and-javascript</guid>
      <pubDate>Tue, 04 Aug 2020 06:03:19 GMT</pubDate>
    </item>
    <item>
      <title>Moving .NET to Linux at Scale</title>
      <link>https://medium.com/criteo-labs/moving-net-to-linux-at-scale-d8ff49b42661</link>
      <description>The story of a multi-year migration: How we changed Criteo’s whole foundation.</description>
      <author> (https://medium.com/@maxime.brugidou)</author>
      <guid>https://medium.com/criteo-labs/moving-net-to-linux-at-scale-d8ff49b42661</guid>
      <pubDate>Tue, 04 Aug 2020 06:03:12 GMT</pubDate>
    </item>
    <item>
      <title>Shawn Wildermuth's Blog</title>
      <link>http://wildermuth.com/2020/08/02/NET-Core-Console-Apps---A-Better-Way</link>
      <description>.NET Core Console Apps  - A Better Way? - Shawn Wildermuth</description>
      <author> ()</author>
      <guid>http://wildermuth.com/2020/08/02/NET-Core-Console-Apps---A-Better-Way</guid>
      <pubDate>Tue, 04 Aug 2020 06:03:06 GMT</pubDate>
    </item>
    <item>
      <title>Best Practices for Regular Expressions in .NET</title>
      <link>https://docs.microsoft.com/en-us/dotnet/standard/base-types/best-practices</link>
      <description>Learn how to create efficient, effective regular expressions in .NET.</description>
      <author> (adegeo)</author>
      <guid>https://docs.microsoft.com/en-us/dotnet/standard/base-types/best-practices</guid>
      <pubDate>Tue, 04 Aug 2020 05:03:00 GMT</pubDate>
    </item>
    <item>
      <title>Shell and Blazor Navigation by lachlanwgordon · Pull Request #152 · xamarin/MobileBlazorBindings</title>
      <link>https://github.com/xamarin/MobileBlazorBindings/pull/152</link>
      <description>Implemented Navigation using Xamarin Forms Shell and Blazor @page Directives.
Fixes #86
The core of this feature is the ShellNavigationManager, which wraps Xamarin Forms Shell and allows navigation...</description>
      <author> (xamarin)</author>
      <guid>https://github.com/xamarin/MobileBlazorBindings/pull/152</guid>
      <pubDate>Tue, 04 Aug 2020 05:02:57 GMT</pubDate>
    </item>
    <item>
      <title>Microsoft Joins Open Source Security Foundation - Microsoft Security</title>
      <link>https://www.microsoft.com/security/blog/2020/08/03/microsoft-open-source-security-foundation-founding-member-securing-open-source-software/</link>
      <description>We're excited to announce that that Microsoft is joining industry partners to create the Open Source Security Foundation (OpenSSF), a new cross-industry collaboration hosted at the Linux Foundation.</description>
      <author> (Mark Russinovich
					Chief Technology Officer, Microsoft Azure)</author>
      <guid>https://www.microsoft.com/security/blog/2020/08/03/microsoft-open-source-security-foundation-founding-member-securing-open-source-software/</guid>
      <pubDate>Tue, 04 Aug 2020 04:02:53 GMT</pubDate>
    </item>
    <item>
      <title>Physical Attractiveness Bias in the Legal System — The Law Project</title>
      <link>https://www.thelawproject.com.au/insights/attractiveness-bias-in-the-legal-system</link>
      <description>[Download for PDF/printable version of this article]     When I started looking into this subject, I predicted a person’s physical attractiveness would only have minor advantages. I was wrong.  In fact, I was so wrong, that in one study, the effects of physical attractiveness on judges were so influ</description>
      <author> ()</author>
      <guid>https://www.thelawproject.com.au/insights/attractiveness-bias-in-the-legal-system</guid>
      <pubDate>Tue, 04 Aug 2020 02:02:57 GMT</pubDate>
    </item>
    <item>
      <title>What Makes Godot Engine Great for Advance GUI Applications</title>
      <link>https://medium.com/swlh/what-makes-godot-engine-great-for-advance-gui-applications-b1cfb941df3b</link>
      <description>I have been trying out the Godot Game Engine lately, and I have been mightily impressed with what I see.</description>
      <author> (https://medium.com/@Jernfrost)</author>
      <guid>https://medium.com/swlh/what-makes-godot-engine-great-for-advance-gui-applications-b1cfb941df3b</guid>
      <pubDate>Tue, 04 Aug 2020 01:03:07 GMT</pubDate>
    </item>
    <item>
      <title>プレステ4の裏側　ソニー社員も見られないロボの指先</title>
      <link>https://vdata.nikkei.com/newsgraphics/sony-playstation/?metaid=1-3</link>
      <description>2020年06月26日ソニーの稼ぎ頭、プレイステーション4。「世界でも最も売れたゲーム機」の記録を持ち、ゲーム機の開発競争をリードする人気商品はどのように作られているのか。ソニー社員でさえ立ち入りを制限されてきた生産現場に潜入した。</description>
      <author> (淡嶋 健人,新田 祐司,森田 優里,清水 明,宮下 啓之,森川 将平,喜田 俊平（日経編集制作センター）)</author>
      <guid>https://vdata.nikkei.com/newsgraphics/sony-playstation/?metaid=1-3</guid>
      <pubDate>Tue, 04 Aug 2020 01:03:00 GMT</pubDate>
    </item>
    <item>
      <title>LesnyRumcajs/grpc_bench</title>
      <link>https://github.com/LesnyRumcajs/grpc_bench</link>
      <description>Various gRPC benchmarks. Contribute to LesnyRumcajs/grpc_bench development by creating an account on GitHub.</description>
      <author> (LesnyRumcajs)</author>
      <guid>https://github.com/LesnyRumcajs/grpc_bench</guid>
      <pubDate>Mon, 03 Aug 2020 23:02:58 GMT</pubDate>
    </item>
    <item>
      <title>Go vs Rust: Writing a CLI tool</title>
      <link>https://cuchi.me/posts/go-vs-rust</link>
      <description>Hi there! this page is where I share my thoughs and knowledge about software development.</description>
      <author> ()</author>
      <guid>https://cuchi.me/posts/go-vs-rust</guid>
      <pubDate>Mon, 03 Aug 2020 23:02:55 GMT</pubDate>
    </item>
    <item>
      <title>RollerCoaster Tycoon 2 - The Impossible Maze</title>
      <link>https://www.youtube.com/watch?v=KVgoy_a_gWI</link>
      <description>This very easy maze is somehow nearly impossible for the guests in RCT2. In this video we find out why.

Join my Discord server: https://discord.gg/TP8EGQG
Join my Patreon: https://www.patreon.com/MarcelVos
Follow me on Twitter: https://twitter.com/MarcelVos11
My second channel: https://www.youtube.com/channel/UCdQoRAhQ0Y240xv-KgTbrWw
OpenRCT2: https://openrct2.org/downloads

Outro music by Simon/Panorrrama:
Outro Music: https://www.youtube.com/watch?v=QVNBByGesXo
Bandcamp: https://panorrrama.bandcamp.com/
Youtube: https://www.youtube.com/channel/UCZp_0RmiCAsFeD5VfDNzVRA</description>
      <author> (Marcel Vos)</author>
      <guid>https://www.youtube.com/watch?v=KVgoy_a_gWI</guid>
      <pubDate>Mon, 03 Aug 2020 23:02:52 GMT</pubDate>
    </item>
    <item>
      <title>The Rise of Data Science | Louie Dinh</title>
      <link>https://louiedinh.com/2020/rise-of-data-science/</link>
      <description>The trajectory of data science has been stunning. As a profession it went from nothing to “the sexiest job of the 21st century” within a decade. Computers have been used to analyze data since their inception. So why did it take more than half a century for such a field to emerge? In this post, I want to explore the tensions that had built up before that fateful day when DJ Patil and Jeff Hammerbacher slapped down the name that took off.</description>
      <author> (Louie Dinh)</author>
      <guid>https://louiedinh.com/2020/rise-of-data-science/</guid>
      <pubDate>Mon, 03 Aug 2020 22:03:37 GMT</pubDate>
    </item>
    <item>
      <title>Peeking at user agents for fun and profit :: Kevin Liu</title>
      <link>https://kliu.io/post/peeking-user-agents/</link>
      <description>Don't ignore webserver logs! Even a cursory glance can reveal some really interesting things about the internet.</description>
      <author> ()</author>
      <guid>https://kliu.io/post/peeking-user-agents/</guid>
      <pubDate>Mon, 03 Aug 2020 22:03:35 GMT</pubDate>
    </item>
    <item>
      <title>The Art of Not Thinking</title>
      <link>http://tiffanymatthe.com/not-thinking/</link>
      <description>After years of feeling guilty about not wanting to do everything, I realized I don't need motivation to get things done. Below, I describe…</description>
      <author> ()</author>
      <guid>http://tiffanymatthe.com/not-thinking/</guid>
      <pubDate>Mon, 03 Aug 2020 22:03:20 GMT</pubDate>
    </item>
    <item>
      <title>Managing Chronic Pain as a Developer</title>
      <link>https://blog.kowsheek.com/managing-chronic-pain-as-a-developer/</link>
      <description>Pain is inevitable. Suffering is optional.</description>
      <author> (Kowsheek)</author>
      <guid>https://blog.kowsheek.com/managing-chronic-pain-as-a-developer/</guid>
      <pubDate>Mon, 03 Aug 2020 22:03:17 GMT</pubDate>
    </item>
    <item>
      <title>A Primer on Database Replication</title>
      <link>https://www.brianstorti.com/replication/</link>
      <description>A Primer on Database Replication</description>
      <author> ()</author>
      <guid>https://www.brianstorti.com/replication/</guid>
      <pubDate>Mon, 03 Aug 2020 22:03:14 GMT</pubDate>
    </item>
    <item>
      <title>Different kinds of testing</title>
      <link>https://blog.frankel.ch/different-kinds-testing/</link>
      <description>The subject of testing is vast. It may seem simple from outside, but it’s not. For example, one may define testing as checking that the software is fit for its purpose. But it encompasses a lot more: for example, mutation testing verifies that assertions do actually assert. In this post, I’d like to touch some testing flavors, what’s their purpose and how they compare to each other. The need for testing In an ideal world, we wouldn’t need testing. We would just write b</description>
      <author> (Nicolas Fränkel)</author>
      <guid>https://blog.frankel.ch/different-kinds-testing/</guid>
      <pubDate>Mon, 03 Aug 2020 22:03:12 GMT</pubDate>
    </item>
    <item>
      <title>Planning for my kidnapping - My blog</title>
      <link>https://blog.luap.info/planning-for-my-kidnapping.html?hnn=</link>
      <description>Imagine tomorrow you go shopping and, for whatever reason, you never come back. Maybe be someone killed you, maybe someone kidnapped you, maybe you had an accident ... Now imagine you are travelling alone in Thailand and you die. How people who know you are going to find out what happen …</description>
      <author> (Paul)</author>
      <guid>https://blog.luap.info/planning-for-my-kidnapping.html?hnn=</guid>
      <pubDate>Mon, 03 Aug 2020 22:03:09 GMT</pubDate>
    </item>
    <item>
      <title>Replacing YouTube &amp; Invidious</title>
      <link>https://secluded.site/replacing-youtube-invidious/</link>
      <description>Simple script I created to download YouTube videos</description>
      <author> (Amolith)</author>
      <guid>https://secluded.site/replacing-youtube-invidious/</guid>
      <pubDate>Mon, 03 Aug 2020 22:03:05 GMT</pubDate>
    </item>
    <item>
      <title>Your calendar should be a whitelist, not a blacklist</title>
      <link>https://critter.blog/2020/08/03/your-calendar-should-be-a-whitelist-not-a-blacklist/</link>
      <description>Open calendars are toxic.</description>
      <author> ()</author>
      <guid>https://critter.blog/2020/08/03/your-calendar-should-be-a-whitelist-not-a-blacklist/</guid>
      <pubDate>Mon, 03 Aug 2020 22:03:02 GMT</pubDate>
    </item>
    <item>
      <title>Stop learning and start doing</title>
      <link>https://kangabru.xyz/2020/08/01/stop-learning-start-doing</link>
      <description>You don’t know shit until you do it, so do something about it</description>
      <author> (kanga_bru)</author>
      <guid>https://kangabru.xyz/2020/08/01/stop-learning-start-doing</guid>
      <pubDate>Mon, 03 Aug 2020 22:03:00 GMT</pubDate>
    </item>
    <item>
      <title></title>
      <link>https://www.apple.com/certificateauthority/Apple_App_Attestation_Root_CA.pem</link>
      <description />
      <author> ()</author>
      <guid>https://www.apple.com/certificateauthority/Apple_App_Attestation_Root_CA.pem</guid>
      <pubDate>Mon, 03 Aug 2020 21:02:50 GMT</pubDate>
    </item>
    <item>
      <title>Validating Apps That Connect to Your Server</title>
      <link>https://developer.apple.com/documentation/devicecheck/validating_apps_that_connect_to_your_server#3576643</link>
      <description>You adopt App Attest to check if clients connecting to your server are valid instances of your app. Your app uses the shared instance of the DCAppAttestService to create a cryptographic key on device, and then attest to the key’s validity. This produces an attestation object that your app passes to your server, along with the corresponding key identifier. Your server verifies the attestation object, and then extracts the embedded public key and other information. Later, your server uses the key to verify assertion objects sent from your app at critical points in the app’s life cycle, like when users try to download premium content.</description>
      <author> ()</author>
      <guid>https://developer.apple.com/documentation/devicecheck/validating_apps_that_connect_to_your_server#3576643</guid>
      <pubDate>Mon, 03 Aug 2020 21:02:48 GMT</pubDate>
    </item>
    <item>
      <title>Hybrid Blazor apps in the Mobile Blazor Bindings July update | ASP.NET Blog</title>
      <link>https://devblogs.microsoft.com/aspnet/hybrid-blazor-apps-in-mobile-blazor-bindings-july-update/</link>
      <description>Realeasing the mobile blazor bindings which adds support for building Hybrid Blazor apps, which contain both native and web UI.</description>
      <author> (Eilon Lipton)</author>
      <guid>https://devblogs.microsoft.com/aspnet/hybrid-blazor-apps-in-mobile-blazor-bindings-july-update/</guid>
      <pubDate>Mon, 03 Aug 2020 21:02:46 GMT</pubDate>
    </item>
    <item>
      <title>The UX of LEGO Interface Panels – George Cave</title>
      <link>https://www.designedbycave.co.uk/2020/LEGO-Interface-UX/</link>
      <description>Piloting an ocean exploration ship or Martian research shuttle is serious business. Let’s hope the control panel is up to scratch. Two studs wide and angled at 45°, the ubiquitous “2x2 decorated slope” is a LEGO minifigure’s interface to the world.

These iconic, low-resolution designs are the perfect tool to learn the basics of physical interface design. Armed with 52 different bricks, let’s see what they can teach us about the design, layout and organisation of complex interfaces.

Welcome to the world of LEGO UX design.



Organised chaos

At a glance, the variety of these designs can be overwhelming, but it’s clear that some of these interfaces look far more chaotic than others. Most interfaces in our world contain a blend of digital screens and analog inputs like switches and dials. These LEGO panels are no different.

Plotting the panels across these two axes reveals a few different clusters. Screens with an accompanying row of buttons sit in the top left. A small cluster of very organised switch panels lies to the far right. The centre bottom is occupied by some wild concepts that are hard to understand, even after several glances.


    
    Design positioning with LEGO, in LEGO
  

Designing a complex machine interface is a juggling act of many different factors from ergonomics to engineering. But we can break down the problem into two key questions:


  How can we differentiate between the function of different inputs?
  How can we organise the many inputs and outputs so that we understand how they relate to each other?


Let’s take a deeper look at tackling these two challenges in LEGO.

Differentiating inputs

What could cause 400 WWII pilots to raise the landing gear on their B-17 bomber just before touchdown? Catastrophic pilot error, or something more fundamental?

It was the psychologist Alphonsis Chapanis who first suggested that the high rate of crash landings might be the fault of poor interface design. The adjacent landing gear and flap control knobs were identically shaped. The pilots never stood a chance.


    
    B-17 belly landing, and the shape coding that helped to irradiate the problem. Source: Wikipedia
  

His temporary solution was to glue differently shaped strips of rubber to each switch, enabling blind operation by touch alone. This gave rise to the idea of shape coding and a system of differentiation still being followed in aircraft cockpits today.

We can compare the three interfaces below to see this in action. Ignore the overall layout, it’s the differences between individual switches that matter here. Imagine trying to feel for one of these buttons without looking. The left panel (“Slope 45 2 x 2 with 12 Buttons”) would require careful hand-eye co-ordination. The right panel (“Aircraft Multiple Flight Controls”) clearly distinguishes between the throttle (large, linear vertical movement), toggle switches (round vertical flick) and the push buttons (square push-in).


    
    Left to right: terrible, poor and better input differentiation
  

Differentiation like this is a still a very real problem today. In 2015, Ford recalled 13,500 Lincoln SUVs because drivers speeding down the motorway were mistakenly shutting off the engine when they tried to activate sport mode. See if you can spot why:


    
    Ford Lincoln MKC before the Engine start/stop button was moved. Source: CNN
  

Shape coding is one approach to differentiation, but there are many others. Colour coding is perhaps the only one to break into our everyday vocabulary, but we can add four more: size, texture, position and operation coding. Together these six are our allies in the design of error-proof interfaces.


    
    The 6 basic codings. Notice that many of these examples actually combine multiple codings in one.
  

Size, shape and colour-coding are the fundamentals: quick-wins that can fix a lot of interface problems. Texture is also a great differentiator for blind operation, particularly on small dials requiring precise control.

Position-coding is seemingly straightforward but is often under used. Products with a clear default ergonomic position (like binoculars or a gaming console) can exploit the natural position of the hand to differentiate between primary and secondary actions.

Finally, operation-coding ascribes different types of movements (like a twist or vertical slide) to different inputs. This can be immensely powerful when the switch motion reinforces the operation behind it, e.g. a crane lever which raises the crane when the lever is raised.


    
    The six different codings in use in the LEGO interfaces: size, shape, colour, texture, position, operation
  

Differentiation is a good first step that will avoid confusion between adjacent switches. But its only with organisation that we can create a clear and accurate mental model of the interface for the user.

Organising inputs

Compare the three panels below. Identical layouts, but the blue one is much clearer than the white. This is the gestalt principles at work, identifying related items with a common region.


    
    Basic differentiation by clustering
  

Easy. But how are you going to decide which inputs to cluster together?

I like to use Soviet control panels as a starting point. These beautiful walls of nonsensical dials and levers are brought to life when arranged in a giant factory schematic.  It would be hard to find a more literal organisation of the information.


    
    Soviet control panels in action. Source: Present and Correct
  

These panels are what I’d called a consolidated interface. Every piece of input and feedback has been moved onto the same panel. This is the approach that Dyson took with their car. Now imagine the opposite, moving each of those lights and switches to the actual location of that valve in the factory. Sounds ludicrous, but these air vents in the Audi TT show that this distributed approach can also be a great win for user experience. I wrote a lot more about these distributed interfaces last year.


    
    Lego vehicle dashboard: distributed (left) vs. consolidated (right)
  

Back to the Soviet factories. Those interface panels were great for answering the question “does this valve let water into tank Б?”. But they’re very poor for answering “are all water valves closed?” or “where are all the switches I need to prepare for the shift changeover?”.

LEGO use the Soviet schematic approach for their fantasy orientated designs, because schematics are superb at providing a mental model of the inner workings of an alien system. However for everyday use, there are some other approaches that work better.


    
    LEGO Insectoid and UFO interfaces. I wonder what these buttons actually do?
  

Feature based organisation is the most common, perhaps even the “default” design philosophy. Group together all the inputs and outputs for each product feature. This COVID-19 ventilator from Cambridge Consultants is a wonderful example but we also see this a lot in cars, with a cluster of switches for the airflow control and all of the lights on one control stick.


    
    COVID-19 ventilator by Cambridge Consultants with clear feature-based organisation. Source: Cambridge Consultants
  

Organising by operation means putting all the switches that function in a certain way in the same place. I’ve no idea what all the valves in the picture below do, but I bet they don’t all open things that relate to each other. Anytime you see a row of switches that look and function the same, but control disparate parts of the system, you’ve come across organisation by operation.


    
    Source: Twitter @aglushko
  

Today most interfaces are effectively fly-by-wire, but historically the levers that you pulled in, say, a tractor cabin would literally move the hydraulic pistons beneath the seat to a new position. Routing all these different electrical, mechanical and hydraulic systems efficiently can severely compromise your interface clustering, leading to organisation by technology.

The modern equivalent of this is surprisingly common. Any touchscreen with buttons by the side exhibits this technology-based split. In a future world, SpaceX might embed these physical controls right inside the screen next to the information they affect, but for now they sit awkwardly by the side as if nothing is wrong.


    
    Bob and Doug in the SpaceX Dragon capsule. Source: SpaceX
  

In LEGO we find the feature based organisation in the “Monitor with -19° pattern”. Two clear clusters, perhaps one for temperature control and another for vital signs monitoring. In the second panel below, I don’t know what all those switches do, but they seem to be clustered based on their operation, not because of what they will operate.

There are many LEGO panels with a technology split like the SpaceX Dragon capsule, but I like to imagine that this early 90s police control unit was forced to divide the audio and video playback because the newer tape reel technology was incompatible with the older analog phone line system. This is organisation by technology in action.


    
    L-to-R: organisation by feature, operation, technology and use case
  

All of our approaches so far: organisation by features, operation or technology, have been grounded in properties of the system, not of the user. Organisation by use-case is the antidote to this, a clustering based on the daily routines and tasks of the user.

Imagine arriving for work each day at the LEGO body scanner factory. Grouping the switches by task (prepare machine, load body, process scan…) would mean splitting up the radiation and scanner buttons into many different regions. More complex for the computer, but more streamlined for the operator. As the designer, only you and your users will be the judge of what works best.

But George, which is the best interface?

I often say there’s no such thing as the best interface, but there are plenty of examples of the worst interface.

However I do have three favourites. Beautiful, visual layouts with clearly differentiated inputs and simple, clean organisation. I’d be proud to sit behind the console of any of them.


    
    Beautiful interface panels
  
</description>
      <author> (George Cave)</author>
      <guid>https://www.designedbycave.co.uk/2020/LEGO-Interface-UX/</guid>
      <pubDate>Mon, 03 Aug 2020 20:27:39 GMT</pubDate>
    </item>
    <item>
      <title>Brady Haran - Me and YouTube: The Benefits of Making Videos About Science &amp; Math (July 31, 2020)</title>
      <link>https://www.youtube.com/watch?v=wSx31KRkN00&amp;list=PLWAzLum_3a1_Vyw-fCPKZcyHYsshOyHcq&amp;index=2&amp;t=0s</link>
      <description>Brady Haran will talk about his adventures in making science and math videos on YouTube. Referencing specific examples, he will illustrate how popular and perhaps unconventional communication can sometimes yield surprising results. These examples include recent breakthroughs in the summing of cubed numbers. More details: https://www.simonsfoundation.org/event/me-and-youtube-the-surprising-benefits-of-making-videos-about-science-and-mathematics/</description>
      <author> (Simons Foundation)</author>
      <guid>https://www.youtube.com/watch?v=wSx31KRkN00&amp;list=PLWAzLum_3a1_Vyw-fCPKZcyHYsshOyHcq&amp;index=2&amp;t=0s</guid>
      <pubDate>Mon, 03 Aug 2020 20:02:43 GMT</pubDate>
    </item>
    <item>
      <title>Establishing Your App’s Integrity | Apple Developer Documentation</title>
      <link>https://developer.apple.com/documentation/devicecheck/establishing_your_app_s_integrity</link>
      <description>You can’t rely on your app’s logic to perform security checks on itself because a compromised app can falsify the results. Instead, you use the shared instance of the DCAppAttestService class in your app to create a hardware-based, cryptographic key that uses Apple servers to certify that the key belongs to a valid instance of your app. Later, you use the service to cryptographically sign server requests using the certified key. Your app uses these measures to assert its legitimacy with any server requests for sensitive or premium content.</description>
      <author> ()</author>
      <guid>https://developer.apple.com/documentation/devicecheck/establishing_your_app_s_integrity</guid>
      <pubDate>Mon, 03 Aug 2020 20:02:43 GMT</pubDate>
    </item>
    <item>
      <title>Senior Program Manager in Redmond, Washington, United States | Engineering at Microsoft</title>
      <link>https://careers.microsoft.com/us/en/job/870165/Senior-Program-Manager</link>
      <description>Apply for Senior Program Manager job with Microsoft in Redmond, Washington, United States. Engineering at Microsoft</description>
      <author> ()</author>
      <guid>https://careers.microsoft.com/us/en/job/870165/Senior-Program-Manager</guid>
      <pubDate>Mon, 03 Aug 2020 20:02:40 GMT</pubDate>
    </item>
    <item>
      <title>NuGet - You can book online!</title>
      <link>https://outlook.office365.com/owa/calendar/NuGet1@microsoft.onmicrosoft.com/bookings/</link>
      <description>You can now book and manage appointments using our booking page.</description>
      <author> ()</author>
      <guid>https://outlook.office365.com/owa/calendar/NuGet1@microsoft.onmicrosoft.com/bookings/</guid>
      <pubDate>Mon, 03 Aug 2020 19:04:18 GMT</pubDate>
    </item>
    <item>
      <title>The Coming Open Source Sustainability Crisis</title>
      <link>https://www.meetup.com/LADOTNET/events/271457920</link>
      <description>Mon, Aug 3, 2020, 6:30 PM: This is a virtual event, be sure to register here as well to attend! https://us02web.zoom.us/webinar/register/WN_xwzFTx13SqmUxDxV7gFwnwThe .NET ecosystem has radically trans</description>
      <author> ()</author>
      <guid>https://www.meetup.com/LADOTNET/events/271457920</guid>
      <pubDate>Mon, 03 Aug 2020 18:02:35 GMT</pubDate>
    </item>
    <item>
      <title>On .NET Live - A chat with the .NET Interactive Team</title>
      <link>https://www.youtube.com/watch?v=IUgP1Wnqt-U&amp;t=139s</link>
      <description>For our first live stream of On .NET Live, we'll catch up with Maria and Diego from the .NET Interactive project to find out what they've been working on. We'll discuss new ways for learning .NET, as well as opportunities for content creators.

05:17 - Start</description>
      <author> (dotNET)</author>
      <guid>https://www.youtube.com/watch?v=IUgP1Wnqt-U&amp;t=139s</guid>
      <pubDate>Mon, 03 Aug 2020 17:02:22 GMT</pubDate>
    </item>
    <item>
      <title>How Raygun increased transactions per second by 44% by removing Nginx | Raygun Blog</title>
      <link>https://raygun.com/blog/removing-nginx/</link>
      <description>As we scale our infrastructure, being able to handle more data for less cost presents some serious business wins. Read what happened when we removed Nginx</description>
      <author> ()</author>
      <guid>https://raygun.com/blog/removing-nginx/</guid>
      <pubDate>Mon, 03 Aug 2020 17:02:22 GMT</pubDate>
    </item>
    <item>
      <title>giraffe-fsharp/Giraffe</title>
      <link>https://github.com/giraffe-fsharp/Giraffe</link>
      <description>A native functional ASP.NET Core web framework for F# developers. - giraffe-fsharp/Giraffe</description>
      <author> (giraffe-fsharp)</author>
      <guid>https://github.com/giraffe-fsharp/Giraffe</guid>
      <pubDate>Mon, 03 Aug 2020 16:02:28 GMT</pubDate>
    </item>
    <item>
      <title>Letter Opener – Open Winmail.dat, MSG and EML files online</title>
      <link>https://web.letteropener.app/</link>
      <description>The best way to open Winmail.dat, MSG and EML files. Without requiring an App download.</description>
      <author> ()</author>
      <guid>https://web.letteropener.app/</guid>
      <pubDate>Mon, 03 Aug 2020 16:02:26 GMT</pubDate>
    </item>
    <item>
      <title>RELEASE: ASP .NET Core 3.1 A-Z eBook</title>
      <link>https://wakeupandcode.com/release-asp-net-core-3-1-a-z-ebook/</link>
      <description>As promised, below is the initial release of the ASP .NET Core 3.1 A-Z ebook. This combines the 26 blog posts from the series of ASP .NET Core articles on this website.ASP .NET Cor</description>
      <author> (by Shahed C)</author>
      <guid>https://wakeupandcode.com/release-asp-net-core-3-1-a-z-ebook/</guid>
      <pubDate>Mon, 03 Aug 2020 15:02:39 GMT</pubDate>
    </item>
    <item>
      <title>Mastodon 3.2</title>
      <link>https://blog.joinmastodon.org/2020/08/mastodon-3.2/</link>
      <description>The new Mastodon release brings you a much better audio player and improved support for different audio and video formats, as well as some additional security mechanisms.The audio player has been completely reworked to have a more eye-catching design. It will extract album art from the uploaded audio file automatically, or allow you to upload a thumbnail of your own choosing to be displayed in the center. Dominant colors from the artwork or thumbnail will then be used to give the player a unique look.</description>
      <author> (Eugen Rochko)</author>
      <guid>https://blog.joinmastodon.org/2020/08/mastodon-3.2/</guid>
      <pubDate>Mon, 03 Aug 2020 15:02:35 GMT</pubDate>
    </item>
    <item>
      <title>Life, part 29</title>
      <link>https://ericlippert.com/2020/08/03/life-part-29/</link>
      <description>We’ve built the foundation of the QuickLife algorithm; now let’s make it go fast. This is going to be a longer episode than usual because we have a large volume of code to get through t…</description>
      <author> ()</author>
      <guid>https://ericlippert.com/2020/08/03/life-part-29/</guid>
      <pubDate>Mon, 03 Aug 2020 15:02:32 GMT</pubDate>
    </item>
    <item>
      <title>The Truth Is Paywalled But The Lies Are Free ❧ Current Affairs</title>
      <link>https://www.currentaffairs.org/2020/08/the-truth-is-paywalled-but-the-lies-are-free/</link>
      <description>&lt;p&gt;The political economy of bullshit.&lt;/p&gt;</description>
      <author> (Current Affairs)</author>
      <guid>https://www.currentaffairs.org/2020/08/the-truth-is-paywalled-but-the-lies-are-free/</guid>
      <pubDate>Mon, 03 Aug 2020 15:02:30 GMT</pubDate>
    </item>
    <item>
      <title>Listen to Thomas Sowell | City Journal</title>
      <link>https://www.city-journal.org/thomas-sowell-race-poverty-culture</link>
      <description>Over a lifetime of scholarship and public engagement, economist Thomas Sowell has illuminated controversial topics such as race, poverty, and culture.</description>
      <author> (Coleman Hughes)</author>
      <guid>https://www.city-journal.org/thomas-sowell-race-poverty-culture</guid>
      <pubDate>Mon, 03 Aug 2020 15:02:27 GMT</pubDate>
    </item>
    <item>
      <title>Implement the "download file" feature on a Blazor WebAssembly app</title>
      <link>https://dev.to/j_sakamoto/implement-the-download-file-feature-on-a-blazor-webassembly-app-2f8p</link>
      <description>I'll show you how to implement the "download file" feature in a Blazor app. </description>
      <author> ()</author>
      <guid>https://dev.to/j_sakamoto/implement-the-download-file-feature-on-a-blazor-webassembly-app-2f8p</guid>
      <pubDate>Mon, 03 Aug 2020 11:02:21 GMT</pubDate>
    </item>
    <item>
      <title>How it works - Briar</title>
      <link>https://briarproject.org/how-it-works/</link>
      <description>Briar is a messaging app designed for activists, journalists, and anyone else who needs a safe, easy and robust way to communicate. Unlike traditional messaging apps, Briar doesn’t rely on a central server - messages are synchronized directly between the users’ devices. If the internet’s down, Briar can sync via Bluetooth or Wi-Fi, keeping the information flowing in a crisis. If the internet’s up, Briar can sync via the Tor network, protecting users and their relationships from surveillance.</description>
      <author> ()</author>
      <guid>https://briarproject.org/how-it-works/</guid>
      <pubDate>Mon, 03 Aug 2020 09:02:22 GMT</pubDate>
    </item>
  </channel>
</rss>