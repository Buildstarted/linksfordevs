<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>Boost Your .NET Projects: Unleashing the Power of Spargine’s Array Extensions</title>
      <link>https://dotnettips.wordpress.com/2024/09/15/boost-your-net-projects-unleashing-the-power-of-spargines-array-extensions/</link>
      <description>Spargine, an open-source .NET 8 toolset, offers a variety of extension methods for arrays. The project’s author emphasizes the benefits of enhanced performance and reliability. Community invo…</description>
      <author> (Published by dotNetDave)</author>
      <guid>https://dotnettips.wordpress.com/2024/09/15/boost-your-net-projects-unleashing-the-power-of-spargines-array-extensions/</guid>
      <pubDate>Sun, 15 Sep 2024 09:01:00 GMT</pubDate>
    </item>
    <item>
      <title>LLMs Will Always Hallucinate, and We Need to Live With This</title>
      <link>https://arxiv.org/abs/2409.05746</link>
      <description>As Large Language Models become more ubiquitous across domains, it becomes important to examine their inherent limitations critically. This work argues that hallucinations in language models are not just occasional errors but an inevitable feature of these systems. We demonstrate that hallucinations stem from the fundamental mathematical and logical structure of LLMs. It is, therefore, impossible to eliminate them through architectural improvements, dataset enhancements, or fact-checking mechanisms. Our analysis draws on computational theory and Godel&amp;#39;s First Incompleteness Theorem, which references the undecidability of problems like the Halting, Emptiness, and Acceptance Problems. We demonstrate that every stage of the LLM process-from training data compilation to fact retrieval, intent classification, and text generation-will have a non-zero probability of producing hallucinations. This work introduces the concept of Structural Hallucination as an intrinsic nature of these systems. By establishing the mathematical certainty of hallucinations, we challenge the prevailing notion that they can be fully mitigated.</description>
      <author> ([Submitted on 9 Sep 2024])</author>
      <guid>https://arxiv.org/abs/2409.05746</guid>
      <pubDate>Sun, 15 Sep 2024 09:00:59 GMT</pubDate>
    </item>
    <item>
      <title>OpenSCAD</title>
      <link>https://openscad.org/</link>
      <description>OpenSCAD Chat: #openscad (on IRC network libera.chat)</description>
      <author> ()</author>
      <guid>https://openscad.org/</guid>
      <pubDate>Sun, 15 Sep 2024 08:00:59 GMT</pubDate>
    </item>
    <item>
      <title>GitHub - phil-opp/blog_os: Writing an OS in Rust</title>
      <link>https://github.com/phil-opp/blog_os</link>
      <description>Writing an OS in Rust. Contribute to phil-opp/blog_os development by creating an account on GitHub.</description>
      <author> (phil-opp)</author>
      <guid>https://github.com/phil-opp/blog_os</guid>
      <pubDate>Sun, 15 Sep 2024 03:01:00 GMT</pubDate>
    </item>
    <item>
      <title>OpenAI o1: Incremental Progress, Not Revolution</title>
      <link>https://www.vincentschmalbach.com/openai-o1-incremental-progress-not-revolution/</link>
      <description>o1 shows some improvements over GPT-4o. It fixed a small bug in my code, returning a working solution that was on par with Claude 3.5 Sonnet and better than GPT-4o. The reasoning summaries it provides…</description>
      <author> (by Vincent Schmalbach)</author>
      <guid>https://www.vincentschmalbach.com/openai-o1-incremental-progress-not-revolution/</guid>
      <pubDate>Sun, 15 Sep 2024 00:01:25 GMT</pubDate>
    </item>
    <item>
      <title>Inline Composables in Vue</title>
      <link>https://www.vincentschmalbach.com/inline-composables-in-vue/</link>
      <description>Inline composables offer a way to refactor components without creating multiple files. The idea is to organize related functionality into units within the same component file.</description>
      <author> (by Vincent Schmalbach)</author>
      <guid>https://www.vincentschmalbach.com/inline-composables-in-vue/</guid>
      <pubDate>Sun, 15 Sep 2024 00:01:25 GMT</pubDate>
    </item>
    <item>
      <title>How to hide information from yourself in a solo RPG</title>
      <link>http://blog.sigfpe.com/2024/09/how-to-hide-information-from-yourself.html</link>
      <description>A more stable version of this article can be found on&amp;#160;github.</description>
      <author> ()</author>
      <guid>http://blog.sigfpe.com/2024/09/how-to-hide-information-from-yourself.html</guid>
      <pubDate>Sun, 15 Sep 2024 00:01:25 GMT</pubDate>
    </item>
    <item>
      <title>Founder Mode, hackers, and being bored by tech</title>
      <link>https://ianbetteridge.com/2024/09/14/founder-mode-hackers-and-being-bored-by-tech/</link>
      <description>I could — and probably should — write an entire essay about the cult of the founder in Silicon Valley, how it developed and the damage it has done. This article from Dave Karpf, though,…</description>
      <author> ()</author>
      <guid>https://ianbetteridge.com/2024/09/14/founder-mode-hackers-and-being-bored-by-tech/</guid>
      <pubDate>Sun, 15 Sep 2024 00:01:24 GMT</pubDate>
    </item>
    <item>
      <title>Slow HTML Canvas Performance? Understanding Chrome&amp;#39;s `willReadFrequently` Attribute</title>
      <link>https://www.schiener.io/2024-08-02/canvas-willreadfrequently</link>
      <description>Chrome sometimes disables GPU acceleration for canvas elements. Learn how to control this behavior with the `willReadFrequently` attribute, and how it affects canvas operations.</description>
      <author> ()</author>
      <guid>https://www.schiener.io/2024-08-02/canvas-willreadfrequently</guid>
      <pubDate>Sun, 15 Sep 2024 00:01:24 GMT</pubDate>
    </item>
    <item>
      <title>To Forget is an Ethical Act &amp;#183; EmilyGorcenski.com</title>
      <link>https://emilygorcenski.com/post/to-forget-is-an-ethical-act/</link>
      <description>On and off for the last several years I&amp;amp;rsquo;ve been manually curating my roughly 40,000 lifetime tweets. I recently finished, and in the process embarked on a</description>
      <author> ()</author>
      <guid>https://emilygorcenski.com/post/to-forget-is-an-ethical-act/</guid>
      <pubDate>Sun, 15 Sep 2024 00:01:24 GMT</pubDate>
    </item>
    <item>
      <title>OpenAI Strawberry vs Herbie</title>
      <link>https://pavpanchekha.com/blog/o1-herbie.html</link>
      <description>A year and a half ago, I wrote a blog post comparing Herbie to the
first ChatGPT (which we now call, I think, GPT 3.5). I chose 11
floating-point repair benchmarks, and fed all of them to Herbie and
ChatGPT. Herbie is a tool my students and I develop to do exactly this
work, and I wanted to know if AI tools had obsoleted it. The
conclusion was that Herbie was still much better, winning 6/11 and
tying two others. Moreover, the cases where Herbie lost ChatGPT&amp;#39;s
response was usually not actually much better, or was better only
stylistically.</description>
      <author> (Pavel Panchekha)</author>
      <guid>https://pavpanchekha.com/blog/o1-herbie.html</guid>
      <pubDate>Sun, 15 Sep 2024 00:01:24 GMT</pubDate>
    </item>
    <item>
      <title>Correlating Ownership of Sites Protected by Cloudflare</title>
      <link>https://www.jamesmotherway.com/blog/correlating-ownership-of-sites-protected-by-cloudflare</link>
      <description>Date: 2024-09-07&amp;#160;&amp;#160;&amp;#160;&amp;#160;Status: Published</description>
      <author> ()</author>
      <guid>https://www.jamesmotherway.com/blog/correlating-ownership-of-sites-protected-by-cloudflare</guid>
      <pubDate>Sun, 15 Sep 2024 00:01:24 GMT</pubDate>
    </item>
    <item>
      <title>Is the College Student Startup Pipe Dream Dead?</title>
      <link>https://rohan.ga/blog/startup-pipe-dream/</link>
      <description>The college startup pipe dream I write this article to pose a question: Will the next trillion dollar startup be started by a college-aged kid in his dorm?
Can the pattern of Microsoft, Meta, Amazon, Apple, and Google be repeated? (Bezos being a sort-of exception to this, as he was ancient when he started Amazon at 30).
An analysis of historical successes What’s interesting is that all these incumbents started as consumer startups, and most hyperscalable startups that have started in the interim are B2B SaaS.</description>
      <author> ()</author>
      <guid>https://rohan.ga/blog/startup-pipe-dream/</guid>
      <pubDate>Sun, 15 Sep 2024 00:01:24 GMT</pubDate>
    </item>
    <item>
      <title>Terence Tao (@tao@mathstodon.xyz)</title>
      <link>https://mathstodon.xyz/@tao/113132502735585408</link>
      <description>I have played a little bit with OpenAI&amp;#39;s new iteration of GPT, GPT-o1, which performs an initial reasoning step before running the LLM.  It is certainly a more capable tool than previous iterations, though still struggling with the most advanced research mathematical tasks.

Here are some concrete experiments (with a prototype version of the model that I was granted access to).  In https://chatgpt.com/share/2ecd7b73-3607-46b3-b855-b29003333b87 I repeated an experiment from https://mathstodon.xyz/@tao/109948249160170335 in which I asked GPT to answer a vaguely worded mathematical query which could be solved by identifying a suitable theorem (Cramer&amp;#39;s theorem) from the literature.  Previously, GPT was able to mention some relevant concepts but the details were hallucinated nonsense.  This time around, Cramer&amp;#39;s theorem was identified and a perfectly satisfactory answer was given. (1/3)</description>
      <author> ()</author>
      <guid>https://mathstodon.xyz/@tao/113132502735585408</guid>
      <pubDate>Sat, 14 Sep 2024 21:01:05 GMT</pubDate>
    </item>
    <item>
      <title>How America’s universities became debt factories – Anand Sanwal</title>
      <link>https://anandsanwal.me/college-student-debt-deception/</link>
      <description>Here&amp;#39;s a puzzle: how do you create a trillion-dollar debt bubble that can&amp;#39;t be popped? Answer: make student loans non-dischargeable in bankruptcy.&amp;#160; Now, here&amp;#39;s a trickier one: how do you fix this mess when the solution threatens a multibillion-dollar industry? This isn&amp;#39;t just a theoretical exercise.&amp;#160; It&amp;#39;s the reality we&amp;#39;re living in.&amp;#160; The U.S. student…</description>
      <author> ()</author>
      <guid>https://anandsanwal.me/college-student-debt-deception/</guid>
      <pubDate>Sat, 14 Sep 2024 21:01:02 GMT</pubDate>
    </item>
    <item>
      <title>R1/beta5 – Release Notes</title>
      <link>https://www.haiku-os.org/get-haiku/r1beta5/release-notes/</link>
      <description>The fifth beta for Haiku R1 over a year and a half of hard work to improve Haiku’s hardware support and its overall stability, and to make lots more software ports available for use. Nearly 350 bugs and enhancement tickets have been resolved for this release.</description>
      <author> ()</author>
      <guid>https://www.haiku-os.org/get-haiku/r1beta5/release-notes/</guid>
      <pubDate>Sat, 14 Sep 2024 17:01:02 GMT</pubDate>
    </item>
    <item>
      <title>Creating Right-Click (Context Menu) actions in Linux Mint - Nemo</title>
      <link>https://ryansouthgate.com/linux-mint-nemo-actions/</link>
      <description>How to create right-click (context menu) actions in Linux Mint - Nemo</description>
      <author> (Ryan Southgate)</author>
      <guid>https://ryansouthgate.com/linux-mint-nemo-actions/</guid>
      <pubDate>Sat, 14 Sep 2024 16:01:00 GMT</pubDate>
    </item>
    <item>
      <title>GitHub - RyanWelly/lisp-in-rs-macros: A Lisp interpreter written fully in rust macros.</title>
      <link>https://github.com/RyanWelly/lisp-in-rs-macros</link>
      <description>A Lisp interpreter written fully in rust macros. . Contribute to RyanWelly/lisp-in-rs-macros development by creating an account on GitHub.</description>
      <author> (RyanWelly)</author>
      <guid>https://github.com/RyanWelly/lisp-in-rs-macros</guid>
      <pubDate>Sat, 14 Sep 2024 15:01:04 GMT</pubDate>
    </item>
    <item>
      <title>Safe C++</title>
      <link>https://safecpp.org/draft.html</link>
      <description>Over the past two years, the United States Government has been
issuing warnings about memory-unsafe programming languages with
increasing urgency. Much of the country’s critical infrastructure relies
on software written in C and C++, languages which are very memory
unsafe, leaving these systems more vulnerable to exploits by
adversaries.</description>
      <author> ()</author>
      <guid>https://safecpp.org/draft.html</guid>
      <pubDate>Sat, 14 Sep 2024 14:01:03 GMT</pubDate>
    </item>
    <item>
      <title>Who The Hell Wrote This Code? – Dev Leader Weekly 61</title>
      <link>https://www.devleader.ca/2024/09/14/who-the-hell-wrote-this-code-dev-leader-weekly-61/</link>
      <description>Welcome to another issue of Dev Leader Weekly! In this issue, I discuss how to be curious when joining a team and not belittle others.</description>
      <author> (https://www.facebook.com/devleaderca)</author>
      <guid>https://www.devleader.ca/2024/09/14/who-the-hell-wrote-this-code-dev-leader-weekly-61/</guid>
      <pubDate>Sat, 14 Sep 2024 13:01:01 GMT</pubDate>
    </item>
    <item>
      <title>My 71 TiB ZFS NAS after 10 years and zero drive failures</title>
      <link>https://louwrentius.com/my-71-tib-zfs-nas-after-10-years-and-zero-drive-failures.html</link>
      <description>My 4U 71 TiB ZFS NAS built with twenty-four 4 TB drives is over 10 years old and still going strong.</description>
      <author> ()</author>
      <guid>https://louwrentius.com/my-71-tib-zfs-nas-after-10-years-and-zero-drive-failures.html</guid>
      <pubDate>Sat, 14 Sep 2024 10:01:07 GMT</pubDate>
    </item>
  </channel>
</rss>