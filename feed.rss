<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>Deniable Knowledge</title>
      <link>https://dinhtta.github.io/zkp/</link>
      <description>Let’s start with Zero Knowledge Proof — arguably the one of the most important discovery of
modern cryptography and computer science. Given the fact that cryptographers are not great at naming things,
it is no surprise that ZKP is made up of three most philosophical words out there, which is fitting since the
concept itself is full of intricacies and subtleties. Worse, the field is moving so fast in both theoretical
and implementation directions, that it becomes all but impossible to catch up (I speak this only for myself,
of course).

</description>
      <author> ()</author>
      <guid>https://dinhtta.github.io/zkp/</guid>
      <pubDate>Thu, 09 Jan 2025 01:02:26 GMT</pubDate>
    </item>
    <item>
      <title>Study TDD &amp;amp; DDD Principles in Frontend Applications</title>
      <link>https://blog.kirilov.dev/informatics/2025/01/03/frontend_ddd.html</link>
      <description>Studying Domain* and Test Driven Design Principles in Frontend Applications * Disclaimer: When talking about DDD in this context I mainly mean the use of an expressive and rich model. During my career as web-developer I have noticed a repeating antipattern related to front-end code. For some reason most of the best practices that we usually use on the backend code are rarely applied in the front. This looks especially true for DDD Domain Driven Design and TDD Test Driven Development principles. In this article I want to showcase how some DDD and TDD best practices can be used in a classic React application with a little help of a reactive framework called Signals. I will treat the matter as a study and try to gain knowledge and insights along the way. Please note that this is not a showcase for the technical aspects of how Signals work, but rather an example of how frontend business logic can be developed using TDD and DDD. In our examples Signals can be easily replaced by RxJS or simple callbacks and everything will still hold. What is a Model ? Domain Driven Design is a very vast discipline and I want to mainly focus on the modeling parts of it, such as aggregates, value objects, encapsulation and in general the model. Let’s take a moment to talk about what a model is, but also what it is not. One of the biggest sins of modern development is that we have forgotten what a OOP is and what a model is supposed to be. We create simple classes that are just containers for data and that are void of any logic whatsoever and call that a “model”. A model is an abstraction of reality that represents some real-life objects, patterns and interactions in a simplified way. I often explain the principle to my colleagues with the analogy of the solar system and the way celestial objects gravitate around each other and the sun. In the celestial model we represent multiple invariants that are observable in real life such as: All planets revolve around the sun No two objects can collide in the solar system All planets turn in the same direction When the Earth completes one revolution around the sun, the Moon completes 12 around the Earth Etc … If we represent the solar system by a simple class that only has fields with getters and setters, we would have an anemic model that does not protect its state and does not enforce the invariants mentioned above. Any time we expose a field via a setter, we completely neglect the rules of the system and our code becomes error-prone. As an example, imagine we have the class SolarSystem that has a setter for Earth’s position. This means that if an external caller gets a reference to the SolarSystem, then nothing stops them from setting the position of our planet to (0, 0, 0) colliding it with the center of the Sun. Our model should thus have a method called “advance(time)” and the position of all planets should be calculated internally. Take a look at the orrery bellow (meaning Model of the solar System) and how it is self-validated. There is only one way to interact with the model, through a crank at the bottom that can only be turned in one direction. Everything else in the model is internally calculated and cannot be mingled with. A physical model of the Solar System - an orrery The model’s invariants are cleverly designed using sprockets and gears Credit to Pinar Noorata and Ken Condal mymodernmet.com for the beautiful orrery. Real Life Use Case So having in mind what a model is let’s now study a more realistic and concrete case that I have encountered while working on a project at my company. Here is a short description of the problem: We are developing an application that uses an AI LLM Large Language Model (ex: Chat GPT 4 / Llama 3) models to generate an article’s content. An article is split into different blocks, such as title, short description, bullet points and long description. Each block has its own AI model that is responsible for generating the appropriate content. An article can be translated into multiple languages and the blocks’ content is changed for each language. Websocket Protocol We have opted for a websocket communication with the backend in order to leverage the asynchronous mode of AI content generation. A custom protocol has been developed that works in the following manner: The frontend app establishes a websocket connection with the backend The frontend performs a POST request to the backend to initiate the beginning of the article’s content generation. A “Start block” message is sent from the backend to the front. After this the websocket receives a number of chunks of content for that block. Whenever a new “Start block” is received the UI needs to visualize a new block and all consecutive chunks will be appended to it. Return to 3. until all blocks finished The communication is ended with a special “end of content” message. Additional Rules There are also some additional rules related to how the UI should behave during the content generation: Rule: An article indicates that it is “loading” content, as soon as the first Start Block message is received. Rule: An article stops loading whenever the “End of Content” message is received. Rule: The current locale (language) can be changed from a predefined list. Rule: Whenever changing a locale, if the content for this locale is not yet generated, the model requests a translation from the backend. The same websocket protocol is used for translations. Rule: Whenever the locale is changed, If the selected locale has already been generated, then the content of the blocks is swapped with the corresponding locale. Rule: The entire article content can be regenerated. This will reset the content of all blocks and will remove any existing translations. Rule: A single block’s content can be regenerated. This action resets all translations. Initial Approach and Fail As you can see the UI rules are fairly complicated, but what adds event a bigger challenge is the asynchronous communication with the backend. Our team has initially started developing in classic React manner: A wrapper component, that has some children. Each child representing some visual part of the screen, such as the article and its block and their content. Concerning the state, and this is where things went really wrong, we used React’s useState hooks and component properties in addition with callback functions to pass state changes and events between parent / children. We quickly ended-up with an entangled mess of data and callbacks being passed multiple levels down. One such example is the relation between the “regenerate block” button, that needs to trigger the global loader’s state. We started running into various bugs and problems and the time spent fixing issues was steadily increasing to the point where we barely could add new features. Other bugs we encountered were related to content being mixed between blocks and languages etc. Although our team had some experience with React, we were not fluent with React’s Testing Library. This is actually one of the major problem with modern SPA frameworks, such as React and Angular, that testing them is not trivial and requires libraries, fixtures, mocks etc. Applying TDD &amp;amp; DDD As a seasoned backend developer I started searching for analogies in my experience. When I encounter a badly written, highly coupled code I usually apply the following strategy: Write a test that describes what we want to actually achieve. Ideally make the test red / green with the existing code. Write a new DDD non-anemic model that validates the tests. Decouple the existing code from the old classes and make it use the new model. I thought: “Why not use the same principle in my React code ? What makes it any different from any backend code I have written ? Why should I tolerate this spaghetti coupling of presentation and business layers ?” I then proceeded by starting a new empty project to avoid any distractions. I only installed Jest as a dependency and started writing all the business rules we have mentioned earlier in TDD style. My model slowly started emerging as I was progressing with the tests. Each class and method was created during the test initialization. All business rules were described by the tests. Consequently, the test coverage was close to 100% DDD Model Since my model was completely decoupled from React, or any other technical libraries in-fact, it was easy to properly use some DDD patterns, such as aggregates and value objects. Most of the fields of my aggregates were private and had no setters, making sure that no data inconsistent operations can be made upon the model. /** * This class is the main aggregate that manages the description of an Article. * It provides operations such as #addChunk, #addStartChunk etc. for adding content to the appropriate blocks. * * The description comprises multiple LocaleContent. */ export class DescriptionModel { private readonly _languages: LocaleEnum[]; private readonly _localeContents: Signal&amp;lt;LocaleContent[]&amp;gt;; private readonly _currentLocale: Signal&amp;lt;LocaleEnum&amp;gt;; private readonly _defaultLocale: LocaleEnum; private _run_id = &amp;quot;&amp;quot;; private readonly _isLoading = signal(false); callback: any; constructor() { this._languages = [LocaleEnum.en_US, LocaleEnum.fr_FR, LocaleEnum.en_UK]; this._currentLocale = signal(LocaleEnum.en_US); this._localeContents = signal([]); this._defaultLocale = LocaleEnum.en_US; } // getters // mutators } Most of the business logic was properly encapsulated inside the aggregate and not split into a service. True OOP was achieved by combining data and functionality. export class DescriptionModel { // ... class initialization omitted // ... addStartChunk(chunk: BlockStartChunk) { let localeContent = this.getLocaleContent(chunk.locale).value; if (!localeContent) { localeContent = new LocaleContent(chunk.locale); this._localeContents.value = [ ...this._localeContents.value, localeContent, ]; } const existingBlock = localeContent?.getBlock(chunk.name); if (existingBlock) { localeContent.reset(chunk.name); // if the default locale content has changed, remove all translations if (chunk.locale === this.defaultLocale) { this.removeAllTranslations(); this.changeLocale(this.defaultLocale); } } localeContent.addStartChunk(chunk); this.isLoading.value = true; } addChunk(chunk: BlockChunk) { const localeContent = this.getLocaleContent(chunk.locale).value; if (!localeContent) { throw new BlockNotFoundError( `Unable to find block ${chunk.block_name} for locale ${chunk.locale}.`, ); } localeContent.addChunk(chunk); } // ... other mutators } The end result was very nice: when using this well-structured and completely tested model, I could completely forget about the complexity of properly updating the article’s blocks, properly filtering the language and translations, updating the loading status etc. It became a “fire and forget” solution where I only had to receive a piece of information from the websocket, and invoke the descriptionModel.addChunk(). All the rest was automatically calculated, updated and validated by the model. Celestial Model Analogy Let us return to our celestial model for a moment and compare: Not having setters in the article description model is the equivalent of not allowing the planets to be moved by hand Having limited interaction points with the model, such as “addChunk”, is the equivalent of having only one crank in the celestial model Internally calculating / mutating the state of the model, such as adding the chunks to the proper language and block is the equivalent of making the planets rotate in the right way, when turning the crank. Psychological Effects and Ease of Mind I want to point out that besides the obvious technical advantages of having well-defined model, there is also an important psychological factor. It is hard to explain how huge is the transition from a buggy, messy code, where each manual test took from 2 to 3 minutes, to a well-defined, well-tested model, that just works. Adding new features is now much easier. Knowing that I can play around the code and try new things, without worrying about breaking the rest is an enormous relief. It is way-more motivating to work on this part of the project for these reasons. Components Integration Now that we have properly developed and hydrated the new model, we needed to find out how to put in actual use in the React application. My initial and naive approach was to use the entire aggregate as the state of the wrapper component. This idea quickly fell down the drain due to numerous problems such as: Due to the nature of how changes are detected in react, it was needed to deep-clone the entire object graph on every change Performance - recreating an entire graph is very expensive It is impossible to make child objects react to changes of a sub-graph of the model. It seemed that I had to make a compromise and add some library to update the view in a dynamic manner. After some consideration I stopped myself on Preact’s Signal framework. I will talk about other possible solutions I considered further down. For every action, on which the view had to be updated, I had to expose either a signal or a computed signal. The model needed a simple transformation // from export class DescriptionModel { private readonly _languages: LocaleEnum[]; private readonly _localeContents: LocaleContent[]; private readonly _currentLocale: LocaleEnum; private readonly _defaultLocale: LocaleEnum; private _run_id = &amp;quot;&amp;quot;; } Wrapping the model’s fields as Signals whenever a component needs to subscribe and react to it changing // to export class DescriptionModel { private readonly _languages: LocaleEnum[]; private readonly _localeContents: Signal&amp;lt;LocaleContent[]&amp;gt;; // &amp;lt;-- wrapped with Signal private readonly _currentLocale: Signal&amp;lt;LocaleEnum&amp;gt;; / &amp;lt;-- wrapped with Signal private readonly _defaultLocale: LocaleEnum; // ... get localeContents(): Signal&amp;lt;LocaleContent[]&amp;gt; { return this._localeContents; } // Some methods can calculate a Signal&amp;#39;s value, based on other signals getLocaleContent(locale: LocaleEnum,): ReadonlySignal&amp;lt;LocaleContent&amp;gt; { return computed(() =&amp;gt; this._localeContents.value.find((loc) =&amp;gt; loc.locale === locale), ); } // .. etc } On the component side, things were as easy as: Create my model in the JS context (outside the component) const description = new DescriptionModel() Use the Signal’s value inside the tsx template &amp;lt;div&amp;gt;Content is loading: {description.isLoading.value ? &amp;#39;True&amp;#39; : &amp;#39;False&amp;#39;}&amp;lt;/div&amp;gt; The Code for the Study The entire example covered is available on my Github repository at https://github.com/sashokbg/react-tdd-ddd-study Other Possible Solutions - Redux, Immer and DeepSignals Some of the more experienced React developers would probably immediately have shouted “use Redux !”. Redux provides the essential concepts such as basic encapsulation of the state, methods via the reducers etc. As such it is a viable solution for a feature rich UI that requires advances state management. There are however sever drawbacks of using redux such as additional dependencies, a certain opinionated way of doing things the “redux” way. Redux is also not really OOP oriented, since each reducer receives the previous state and returns a new one and is not really how a classical object would mutate. This is ofcourse completely fine and brings us back to the old “functional vs OOP” debate. Immer is probably another solution that could have easily replaced the Signals, but it looks like it has the same “drawback” of being functionally based. DeepSignals library is very close to how Signals work, but automatically wrap entire object graphs making all fields Signals. An advantage of deep signals is also that you don’t need to use the .value to subscribe to a signal change. I choose not to use it since it is not very popular for now and since it adds additional complexity with the object proxying etc. Conclusion The study and the model I have described are now happily integrated in our project. It probably needs to spend some more time with the rest of the team and in production to make sure that this is the way to do things. Either way I am very happy with the outcome and I think that this study proved that best practices can easily be applied on frontend / UI code. There are no excuses to skip tests, to create anemic models and not to focus and explicit domain requirements. All of these are easily achievable with a minimum of technical requirements and are mostly related to skills, project culture and the will to build better applications. Links and References https://preactjs.com/guide/v10/signals/ https://jestjs.io/ https://mymodernmet.com/ken-condal-orrery https://martinfowler.com/bliki/AnemicDomainModel.html https://en.wikipedia.org/wiki/Domain-driven_design https://immerjs.github.io/immer/ https://redux.js.org/</description>
      <author> ()</author>
      <guid>https://blog.kirilov.dev/informatics/2025/01/03/frontend_ddd.html</guid>
      <pubDate>Thu, 09 Jan 2025 01:02:25 GMT</pubDate>
    </item>
    <item>
      <title>Demand for Software is Different</title>
      <link>https://www.rowanajmarshall.co.uk/posts/demand-for-software-is-different/</link>
      <description>Most things humans produce have a recognisable demand ceiling - the world will only eat so much bread, regardless of how cheap it is, and we’ll only upgrade our phones so often, no matter how nice the new models are.
If we get 10x times better at growing wheat, we don’t grow 10x more wheat, because we’re pretty close to that upper limit now - instead, we get 10x less wheat farmers, producing a similar quantity of wheat.</description>
      <author> ()</author>
      <guid>https://www.rowanajmarshall.co.uk/posts/demand-for-software-is-different/</guid>
      <pubDate>Thu, 09 Jan 2025 01:02:24 GMT</pubDate>
    </item>
    <item>
      <title>Creating a simple free website in 2025</title>
      <link>https://mattsayar.com/creating-a-simple-free-website-in-2025/</link>
      <description>I&amp;#39;ve owned mattsayar.com since December 2010. According to archive.org, it appears I started experimenting with Wordpress sometime in May 2011, but then switched to using Tumblr as my host in 2012. For years afterwards, this site was just a simple index.html on AWS S3 that…</description>
      <author> ()</author>
      <guid>https://mattsayar.com/creating-a-simple-free-website-in-2025/</guid>
      <pubDate>Thu, 09 Jan 2025 01:02:24 GMT</pubDate>
    </item>
    <item>
      <title>28h Days: year 1 update</title>
      <link>https://sidhion.com/blog/28h_days_update_1/</link>
      <description>It’s been a little over a year since I started living  28h days   .
I figured it might be a good idea to write an yearly update, and doing it at the beginning of the year feels appropriate, so here we are.</description>
      <author> ()</author>
      <guid>https://sidhion.com/blog/28h_days_update_1/</guid>
      <pubDate>Thu, 09 Jan 2025 01:02:23 GMT</pubDate>
    </item>
    <item>
      <title>So you want to offer self-hosted deployment: how should you do it?</title>
      <link>https://blog.trustshepherd.com/so-you-want-to-offer-self-hosted-deployment-how-should-you-do-it/</link>
      <description>Large buyers of software products often request self-hosted deployment, particularly enterprises in regulated industries. Serving these accounts can unlock huge budgets for vendors, but in my experience it’s not easy to do. This post explores the decision of if you should offer a self-hosted deployment model, the key challenges</description>
      <author> ()</author>
      <guid>https://blog.trustshepherd.com/so-you-want-to-offer-self-hosted-deployment-how-should-you-do-it/</guid>
      <pubDate>Thu, 09 Jan 2025 01:02:23 GMT</pubDate>
    </item>
    <item>
      <title>1-billion row challenge with Node.js</title>
      <link>https://jackyef.com/posts/1brc-nodejs-learnings</link>
      <description>5 minutes to 11 seconds with Node.js is possible?</description>
      <author> ()</author>
      <guid>https://jackyef.com/posts/1brc-nodejs-learnings</guid>
      <pubDate>Thu, 09 Jan 2025 01:02:22 GMT</pubDate>
    </item>
    <item>
      <title>Snapshot Isolation vs Serializability - Marc&amp;#39;s Blog</title>
      <link>https://brooker.co.za/blog/2024/12/17/occ-and-isolation.html</link>
      <description>Getting into some fundamentals.</description>
      <author> ()</author>
      <guid>https://brooker.co.za/blog/2024/12/17/occ-and-isolation.html</guid>
      <pubDate>Thu, 09 Jan 2025 01:02:20 GMT</pubDate>
    </item>
    <item>
      <title>Unusual $/MTok numbers</title>
      <link>https://venki.dev/notes/unusual-mtok-numbers</link>
      <description>Unusual $/MTok numbers</description>
      <author> ()</author>
      <guid>https://venki.dev/notes/unusual-mtok-numbers</guid>
      <pubDate>Thu, 09 Jan 2025 01:02:19 GMT</pubDate>
    </item>
    <item>
      <title>Fixing Cumulative Layout Shift (CLS) in Nuxt 3 | kylev.dev</title>
      <link>https://kylev.dev/blog/fixing-cumulative-layout-shift-nuxt-3/</link>
      <description>How disabling the inlineStyles feature saved my core web vitals</description>
      <author> ()</author>
      <guid>https://kylev.dev/blog/fixing-cumulative-layout-shift-nuxt-3/</guid>
      <pubDate>Thu, 09 Jan 2025 01:02:19 GMT</pubDate>
    </item>
    <item>
      <title>LLM Drawing with Eyes Open</title>
      <link>https://www.paritybits.me/llm-drawing-with-eyes-open/</link>
      <description>The scaffolding around Claude 3.5&amp;#39;s artifacts allow for the drawing and display of SVG graphics, sometimes with pretty amusing results. The errors will be fa...</description>
      <author> ()</author>
      <guid>https://www.paritybits.me/llm-drawing-with-eyes-open/</guid>
      <pubDate>Thu, 09 Jan 2025 01:02:19 GMT</pubDate>
    </item>
    <item>
      <title>But what is a DOM node?</title>
      <link>https://gregros.dev/post/but-what-is-a-dom-node</link>
      <description>What actually makes an object a DOM node? Is it the prototype? Or is it something else? 

It seems like a basic question, but the answer turns out to be surprisingly complicated. 
</description>
      <author> ()</author>
      <guid>https://gregros.dev/post/but-what-is-a-dom-node</guid>
      <pubDate>Thu, 09 Jan 2025 01:02:19 GMT</pubDate>
    </item>
    <item>
      <title>Async I/O Is Not Enough</title>
      <link>https://valatka.dev/2024/12/28/async-io-is-not-enough.html</link>
      <description>For the past few months, I’ve been exploring Go. Having done quite a bit of grueling work shaving off milliseconds from Python web apps, I’ve found Go to be incredible. You can schedule dirt cheap concurrent operations — simply by adding go in front of a function call — and achieve true parallelism across cores.</description>
      <author> ()</author>
      <guid>https://valatka.dev/2024/12/28/async-io-is-not-enough.html</guid>
      <pubDate>Thu, 09 Jan 2025 01:02:19 GMT</pubDate>
    </item>
    <item>
      <title>I Can’t Believe It’s Not Causal! Scalable Causal Consistency with No Slowdown Cascades</title>
      <link>http://muratbuffalo.blogspot.com/2025/01/i-cant-believe-its-not-causal-scalable.html</link>
      <description>I recently came across the Occult paper (NSDI&amp;#39;17)  during my series on &amp;quot;The Use of Time in Distributed Databases.&amp;quot;  I had high expectations,...</description>
      <author> ()</author>
      <guid>http://muratbuffalo.blogspot.com/2025/01/i-cant-believe-its-not-causal-scalable.html</guid>
      <pubDate>Thu, 09 Jan 2025 01:02:18 GMT</pubDate>
    </item>
    <item>
      <title>Observable management</title>
      <link>https://vtorosyan.github.io/observable-management/</link>
      <description>At some point in their career, almost every engineer asks, “What does my manager actually do?” As an engineering manager, much of my work is what I call “invisible-important”. This invisibility can lead to mistrust, misalignment, and a lack of understanding about how a manager contributes to team success.

</description>
      <author> ()</author>
      <guid>https://vtorosyan.github.io/observable-management/</guid>
      <pubDate>Thu, 09 Jan 2025 01:02:17 GMT</pubDate>
    </item>
    <item>
      <title>How extensions trick CWS search</title>
      <link>https://palant.info/2025/01/08/how-extensions-trick-cws-search/</link>
      <description>There are hundreds of extensions in Chrome Web Store using bogus “translation” to mess up search results. Most extensions are produced by a few extensions clusters who are flooding Chrome Web Store with spam.</description>
      <author> ()</author>
      <guid>https://palant.info/2025/01/08/how-extensions-trick-cws-search/</guid>
      <pubDate>Thu, 09 Jan 2025 01:02:16 GMT</pubDate>
    </item>
    <item>
      <title>Mastering Key Remapping on Linux: A Practical Guide with xremap</title>
      <link>https://www.paolomainardi.com/posts/linux-remapping-keys-with-xremap/</link>
      <description>Introduction Link to heading I have a huge collection of mechanical keyboards (&amp;gt; 15 and counting); when I started the journey, I mainly chose TKL layouts, which seemed the simplest choice for a desktop keyboard; they have all the keys I need, such as Home, End, PgUp, PgDown, that at least for me are essential for my writing habits. The issue with this layout is that you have to move your hands a lot to reach some keys, and the mouse is far away from the keyboard, so I started to look for smaller keyboards, such as 60%, 65%, and 75% sizes.</description>
      <author> ()</author>
      <guid>https://www.paolomainardi.com/posts/linux-remapping-keys-with-xremap/</guid>
      <pubDate>Thu, 09 Jan 2025 01:02:15 GMT</pubDate>
    </item>
    <item>
      <title>Building a home dashboard - Pablasso</title>
      <link>https://pablasso.com/posts/building-a-home-dashboard</link>
      <description>The e-ink screen that chills in my living room.</description>
      <author> ()</author>
      <guid>https://pablasso.com/posts/building-a-home-dashboard</guid>
      <pubDate>Thu, 09 Jan 2025 01:02:15 GMT</pubDate>
    </item>
    <item>
      <title>What makes strong engineers strong?</title>
      <link>https://www.seangoedecke.com/what-makes-strong-engineers-strong/</link>
      <description>Self-belief, pragmatism, speed, and technical ability</description>
      <author> ()</author>
      <guid>https://www.seangoedecke.com/what-makes-strong-engineers-strong/</guid>
      <pubDate>Thu, 09 Jan 2025 01:02:15 GMT</pubDate>
    </item>
    <item>
      <title>Result-oriented programming with F# computation expressions - Pavel Skvirski</title>
      <link>https://skvirski.com/articles/result-oriented-programming-fsharp/</link>
      <description>Quick intro to F# computation expressions and how they can be used for result-based error handling.</description>
      <author> ()</author>
      <guid>https://skvirski.com/articles/result-oriented-programming-fsharp/</guid>
      <pubDate>Thu, 09 Jan 2025 01:02:15 GMT</pubDate>
    </item>
    <item>
      <title>How to become a Data Scientist? | MLJAR</title>
      <link>https://mljar.com/blog/how-to-become-data-scientist/</link>
      <description>Data science can be rewarding beyond a big paycheck. Large firms pay well, but smaller ones may not. If you love research and discovery, it is worth it.</description>
      <author> ()</author>
      <guid>https://mljar.com/blog/how-to-become-data-scientist/</guid>
      <pubDate>Thu, 09 Jan 2025 01:02:14 GMT</pubDate>
    </item>
    <item>
      <title>NeuralSVG: An Implicit Representation for Text-to-Vector Generation</title>
      <link>https://sagipolaczek.github.io/NeuralSVG/</link>
      <description>Loading [MathJax]/extensions/MathMenu.js</description>
      <author> ()</author>
      <guid>https://sagipolaczek.github.io/NeuralSVG/</guid>
      <pubDate>Wed, 08 Jan 2025 23:01:45 GMT</pubDate>
    </item>
    <item>
      <title>Free Ask Me Anything Webinar</title>
      <link>https://youtube.com/watch?v=YS9BE7avw74</link>
      <description>My next free Ask Me Anything webinar is happening next Saturday and I want you to join https://www.productivecsharp.com/webinar</description>
      <author> (Andrea Angella)</author>
      <guid>https://youtube.com/watch?v=YS9BE7avw74</guid>
      <pubDate>Wed, 08 Jan 2025 23:01:42 GMT</pubDate>
    </item>
    <item>
      <title>Atlas of Space</title>
      <link>https://atlasof.space/</link>
      <description>The Atlas of Space</description>
      <author> ()</author>
      <guid>https://atlasof.space/</guid>
      <pubDate>Wed, 08 Jan 2025 22:02:14 GMT</pubDate>
    </item>
    <item>
      <title>Fidget</title>
      <link>https://www.mattkeeter.com/projects/fidget/</link>
      <description>Fidget is a library for representing,
compiling, and evaluating large-scale math expressions, i.e. hundreds or
thousands of arithmetic clauses.  It&amp;#39;s mainly designed as a backend for
implicit surfaces, but the
library is flexible enough for many different uses!</description>
      <author> ()</author>
      <guid>https://www.mattkeeter.com/projects/fidget/</guid>
      <pubDate>Wed, 08 Jan 2025 20:01:51 GMT</pubDate>
    </item>
    <item>
      <title>Ollama is Awesome!</title>
      <link>https://youtube.com/watch?v=gv8fJWKrfIs</link>
      <description>In this edition of #tech on ice, I talk about #ollama and how it makes running #ai #llm models simple. Awesome stuff!
#technology #developer #programming #coldplunge</description>
      <author> (Isaac Levin)</author>
      <guid>https://youtube.com/watch?v=gv8fJWKrfIs</guid>
      <pubDate>Wed, 08 Jan 2025 19:01:42 GMT</pubDate>
    </item>
    <item>
      <title>Fired From Meta After 1 Week: Here’s All The Dirt I Got</title>
      <link>https://sebastiancarlos.com/fired-from-meta-after-1-week-heres-all-the-dirt-i-got-855e4e5a0d65</link>
      <description>This is not just another story of a disgruntled ex-employee. I’m not shying away from the serious corporate espionage or the ethical…</description>
      <author> (https://sebastiancarlos.com)</author>
      <guid>https://sebastiancarlos.com/fired-from-meta-after-1-week-heres-all-the-dirt-i-got-855e4e5a0d65</guid>
      <pubDate>Wed, 08 Jan 2025 18:01:50 GMT</pubDate>
    </item>
    <item>
      <title>How We Cracked a 512-Bit DKIM Key for Less Than $8 in the Cloud</title>
      <link>https://dmarcchecker.app/articles/crack-512-bit-dkim-rsa-key</link>
      <description>In our study on the SPF, DKIM, and DMARC records of the top 1M websites, we were surprised to uncover more than 1,700 public DKIM keys that were shorter than 1,024 bits in length. This finding was unexpected, as RSA keys shorter than 1,024 bits are considered insecure, and their use in DKIM has been deprecated since the introduction of RFC 8301 in 2018.</description>
      <author> ()</author>
      <guid>https://dmarcchecker.app/articles/crack-512-bit-dkim-rsa-key</guid>
      <pubDate>Wed, 08 Jan 2025 16:02:04 GMT</pubDate>
    </item>
    <item>
      <title>Building Ultra Long Range TOSLINK
</title>
      <link>https://blog.benjojo.co.uk/post/sfp-experiment-ultra-long-range-toslink</link>
      <description></description>
      <author> ()</author>
      <guid>https://blog.benjojo.co.uk/post/sfp-experiment-ultra-long-range-toslink</guid>
      <pubDate>Wed, 08 Jan 2025 15:01:47 GMT</pubDate>
    </item>
    <item>
      <title>The Backbone of Digital Communication: Understanding the Client-Server Model - Chris Woody Woodruff</title>
      <link>https://woodruff.dev/the-backbone-of-digital-communication-understanding-the-client-server-model/</link>
      <description>The client-server model, a ubiquitous presence in our digital universe, is the invisible framework that powers nearly every online interaction you experience. From the seamless streaming of your favorite shows to the lightning-fast loading of websites, this model is the architectural masterpiece orchestrating how devices exchange information in a networked world. It’s the quiet genius behind the scenes, ensuring your digital life feels effortless.</description>
      <author> ()</author>
      <guid>https://woodruff.dev/the-backbone-of-digital-communication-understanding-the-client-server-model/</guid>
      <pubDate>Wed, 08 Jan 2025 14:01:52 GMT</pubDate>
    </item>
    <item>
      <title>Switching Tech Jobs: What To Consider As A Software Engineer</title>
      <link>https://youtube.com/watch?v=fRdqUBDjhX8</link>
      <description>At some point in your software engineering career, you&amp;#39;ll be faced with the debate:

Stick with the current job or take on some risk with a new role.

How will you decide? Which factors should you consider?

----
&amp;#128273; Membership &amp;amp; Subscriptions:
- &amp;#128232; Weekly Newsletter: https://weekly.devleader.ca
- &amp;#127960;️ Private Discord Community: https://sidestack.io/devleader

&amp;#129504; Courses:
- All Courses: https://www.devleader.ca/courses
- Get Promoted As A Software Engineer: https://dometrain.com/course/career-getting-promoted-as-a-software-engineer/?ref=nick-cosentino
- Nailing The Behavioral Interview: https://dometrain.com/course/career-nailing-the-behavioral-interview/?ref=nick-cosentino
- Getting Started with C#: https://dometrain.com/course/getting-started-csharp?ref=nick-cosentino
- Deep dive C#: https://dometrain.com/course/deep-dive-csharp?ref=nick-cosentino
- C# Zero to Hero BUNDLE: https://dometrain.com/bundle/from-zero-to-hero-csharp/?ref=nick-cosentino
- Reflection in .NET: https://dometrain.com/course/from-zero-to-hero-reflection-in-dotnet/?ref=nick-cosentino
- Refactoring For C# Devs: https://dometrain.com/course/from-zero-to-hero-refactoring-for-csharp-developers?ref=nick-cosentino
- [FREE] Intro to Software Development: https://www.youtube.com/playlist?list=PLzATctVhnsggb3lj53T8fJSK6LJQFUyKS

&amp;#128483;️ Social Media &amp;amp; Links:
- All My Links: https://linktr.ee/devleader
- Vlogs:  @DevLeaderBTS @CodeCommute 
- Blog: https://www.devleader.ca/
- TikTok: https://www.tiktok.com/@devleader
- LinkedIn: https://www.linkedin.com/in/nickcosentino
- Threads: https://threads.net/@dev.leader
- Twitter: https://twitter.com/DevLeaderCa
- Facebook: https://www.facebook.com/DevLeaderCa
- Instagram: https://www.instagram.com/dev.leader
- GitHub: https://github.com/ncosentino/
- Twitch: https://twitch.tv/devleaderca
- YouTube: https://youtube.com/@DevLeader?sub_confirmation=1

❤️ Affiliations &amp;amp; Products/Services That I Love:
- @BrandGhostAI for all of my content creation: https://brandghost.ai
- AI shorts helper Opus Clip: https://opus.pro/?via=2f9e97
- VPS hosting from RackNerd: https://my.racknerd.com/aff.php?aff=9013
- VPS hosting from Contabo: https://www.jdoqocy.com/click-101028632-12454592
- Newsletter platform ConvertKit: https://convertkit.com/?lmref=c5X7KQ
- Newsletter referral system SparkLoop: https://dash.sparkloop.app/signup?aff=9fe76c8b
----

#softwareengineering #softwaredeveloper #softwareengineer</description>
      <author> (Dev Leader)</author>
      <guid>https://youtube.com/watch?v=fRdqUBDjhX8</guid>
      <pubDate>Wed, 08 Jan 2025 14:01:46 GMT</pubDate>
    </item>
    <item>
      <title>StackOverflow Dec 2024 stats</title>
      <link>https://gist.github.com/hopeseekr/f522e380e35745bd5bdc3269a9f0b132</link>
      <description>StackOverflow Dec 2024 stats. GitHub Gist: instantly share code, notes, and snippets.</description>
      <author> (262588213843476)</author>
      <guid>https://gist.github.com/hopeseekr/f522e380e35745bd5bdc3269a9f0b132</guid>
      <pubDate>Wed, 08 Jan 2025 13:01:42 GMT</pubDate>
    </item>
    <item>
      <title>Operating System in 1,000 Lines</title>
      <link>https://operating-system-in-1000-lines.vercel.app/en</link>
      <description>Hey there! In this book, we&amp;#39;re going to build a small operating system from scratch, step by step.</description>
      <author> ()</author>
      <guid>https://operating-system-in-1000-lines.vercel.app/en</guid>
      <pubDate>Wed, 08 Jan 2025 12:01:52 GMT</pubDate>
    </item>
    <item>
      <title>Microsoft disguises Bing as Google to fool inattentive searchers</title>
      <link>https://www.pcworld.com/article/2568916/microsoft-disguises-bing-as-google-to-fool-inattentive-searchers.html</link>
      <description>If you can&amp;#39;t beat Google, trick your users into thinking that they&amp;#39;re using Google. That seems to be Microsoft&amp;#39;s sneaky new approach to Bing search.</description>
      <author> ()</author>
      <guid>https://www.pcworld.com/article/2568916/microsoft-disguises-bing-as-google-to-fool-inattentive-searchers.html</guid>
      <pubDate>Wed, 08 Jan 2025 06:01:40 GMT</pubDate>
    </item>
    <item>
      <title>Burdens of type 2 diabetes and cardiovascular disease attributable to sugar-sweetened beverages in 184 countries - Nature Medicine</title>
      <link>https://www.nature.com/articles/s41591-024-03345-4</link>
      <description>Estimates from the Global Dietary Database indicated that 2.2 million new type 2 diabetes and 1.2 million new cardiovascular disease cases were attributable to sugar-sweetened beverages worldwide in 2020, with the highest burdens in sub-Saharan Africa, Latin America and the Caribbean.</description>
      <author> ()</author>
      <guid>https://www.nature.com/articles/s41591-024-03345-4</guid>
      <pubDate>Wed, 08 Jan 2025 05:01:58 GMT</pubDate>
    </item>
    <item>
      <title>Mistakes engineers make in large established codebases</title>
      <link>https://www.seangoedecke.com/large-established-codebases/</link>
      <description>What I&amp;#39;ve learned from ten years working on projects like this</description>
      <author> ()</author>
      <guid>https://www.seangoedecke.com/large-established-codebases/</guid>
      <pubDate>Wed, 08 Jan 2025 04:01:47 GMT</pubDate>
    </item>
    <item>
      <title>Claude plays GeoGuessr</title>
      <link>https://www.jerrywei.net/blog/claude-plays-geoguessr</link>
      <description>Claude plays GeoGuessr
Jerry Wei
January 06, 2025.
Constantly seeking ways to evaluate and benchmark the capabilities of our AI models helps us understand their current performance and drives future development and improvements. In this spirit, I recently examined a fun task: How well can Claude</description>
      <author> ()</author>
      <guid>https://www.jerrywei.net/blog/claude-plays-geoguessr</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:20 GMT</pubDate>
    </item>
    <item>
      <title>Street-fighting RAG: Chain-of-thought prompting</title>
      <link>https://www.sgnt.ai/p/street-fighting-rag-chain-of-thought</link>
      <description>or, reducing hallucination and making in-generation adjustments to LLM responses</description>
      <author> ()</author>
      <guid>https://www.sgnt.ai/p/street-fighting-rag-chain-of-thought</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:20 GMT</pubDate>
    </item>
    <item>
      <title>The good, the bad, and the ugly of Gemini’s structured outputs – Dylan Castillo</title>
      <link>https://dylancastillo.co/posts/gemini-structured-outputs.html</link>
      <description></description>
      <author> ()</author>
      <guid>https://dylancastillo.co/posts/gemini-structured-outputs.html</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:20 GMT</pubDate>
    </item>
    <item>
      <title>Do the obvious next thing</title>
      <link>https://www.sonyasupposedly.com/do-the-obvious-next-thing/</link>
      <description>Letting gravity be my guide, like water.</description>
      <author> ()</author>
      <guid>https://www.sonyasupposedly.com/do-the-obvious-next-thing/</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:19 GMT</pubDate>
    </item>
    <item>
      <title>The Audience Matters</title>
      <link>https://shubhamjain.co/2025/01/07/the-audience-matters/</link>
      <description>
There&amp;#39;s an interesting story behind making DDLJ (*Dilwale Dulhania Le Jayenge*). For the unaware, it&amp;#39;s an extremely successful Bollywood film with the longest theatrical run in history. I always considered it to be the epitome of clich&amp;#233;d Bollywood—a lazy, formulaic crowd-pleaser. I am not being harsh here. Aditya Chopra, the director himself, admits:

&amp;gt; My film is not different. I’m making the most commercial, clich&amp;#233;d, tapori (pedestrian) movie. I’m making the oldest story in the world.

DDLJ is an ordinary bollywood movie, but its success was no accident. It was born from nearly a decade of research—hard, deliberate work to [understand the Indian audience](https://www.reddit.com/r/BollyBlindsNGossip/comments/116qx6g/aditya_chopra_appreciation_post/)

&amp;gt; He (Aditya Chopra) saw every movie in the theatre FDFS (First Day, First Show) since he was 12 - just to study almost clinically what the audience thought, where they laughed, where they left. He tracked the BO numbers. He did the analysis, put in the hard work, and studied the business of cinema quite literally. He used those insights to inform his filmmaking process and predict what’s next. He understands the psychology of people in general, of Indian people very deeply, and what connects with them and what doesn’t.

This method is a far cry from the creative projects I’ve always admired—the &amp;quot;Don&amp;#39;t care about the audience&amp;quot; or &amp;quot;Ship something you want to see&amp;quot; kind of projects. The movies, shows, and video games I have admired have all been driven by a wild, passionate vision to make something great, not how the audience is going to react.

Aditya flipped this approach on its head. Well before committing to a project, he wanted to understand what makes the Indian audience tick. Make no mistake, he was still creative—the locations, dialogues, songs were all well-thought. However, he worked within the bounds of what he believed would eventually succeed.

## Caring About Something That Works

Rick Rubin is a big advocate of letting your creative spirit do the work. You care and everything else will fall in place. In his book _The Creative Act_, [he says](https://www.goodreads.com/work/quotes/96114890-the-creative-act-a-way-of-being):

&amp;gt; In terms of priority, inspiration comes first. You come next. The audience comes last.
&amp;gt;
&amp;gt; All that matters is that you are making something you love, to the best of your ability, here and now.

It’s a beautiful idea. But here’s the problem. Sooner or later, you need to create something the audience cares about. That&amp;#39;s because, without their validation, you’ll struggle to make money and sustain what you love. 

Sure, you can ignore the audience and create only for yourself. There are enough success stories to make free-spirited creativity sound like a tempting idea. However, there are just as many failures. The basic fact can&amp;#39;t be ignored: to have a shot at making money, you need to build something people are willing to pay for. You need to care about the audience. 

The other approach is to figure out what is working in the market, and create something with that in mind. The most successful indie-hackers I’ve seen do this very well. [LevelsIO](https://x.com/levelsio?lang=en), for example, has been pretty amazing in spotting trends and building something valuable around them. When Generative AI was just taking off, he created Interior.ai and it quickly succeeded in becoming a $50k MRR side project. 

Danny Postma entire approach to product-building centers around researching what [people are already searching](https://www.dannypostma.com/seo-course) for via SEO tools, selecting the ones with money-making potential, then slowly building your website to rank well for those keywords.

Of course, you still need creativity. It&amp;#39;s not easy to sell junk. But by focusing your creativity on something with a better chance of success—something people already want—you can drastically improve your odds at making money. You treat creativity as a tool, not the goal.

</description>
      <author> ()</author>
      <guid>https://shubhamjain.co/2025/01/07/the-audience-matters/</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:19 GMT</pubDate>
    </item>
    <item>
      <title>Take the pedals off the bike</title>
      <link>https://www.fortressofdoors.com/take-the-pedals-off-the-bike/</link>
      <description>Apparently if you want to teach kids how to ride a bike you&amp;#39;re supposed to take the pedals off first, and now my mind will never be the same again.</description>
      <author> ()</author>
      <guid>https://www.fortressofdoors.com/take-the-pedals-off-the-bike/</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:19 GMT</pubDate>
    </item>
    <item>
      <title>How LLMs are secretly reshaping the code of tomorrow, and what to do about it</title>
      <link>https://nathanpeck.com/how-llms-of-today-are-secretly-shaping-the-code-of-tomorrow/</link>
      <description>The next revolutionary programming framework might be dead before you even discover it. AI coding assistants are reshaping software development practices in some unexpected ways.</description>
      <author> ()</author>
      <guid>https://nathanpeck.com/how-llms-of-today-are-secretly-shaping-the-code-of-tomorrow/</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:18 GMT</pubDate>
    </item>
    <item>
      <title>Cruising a VPS at OpenBSD Amsterdam</title>
      <link>https://www.tumfatig.net/2025/cruising-a-vps-at-openbsd-amsterdam/</link>
      <description>When it comes to getting an OpenBSD virtual machine, you can go to your preferred Linux VPS provider and hack its rescue mode to install OpenBSD. Or you can go to a VPS provider that offers booting from an ISO file and getting access to the console. In that case, you’d probably get an OpenBSD VM running on KVM. Which is not that bad.
But you can also book your VM from OpenBSD Amsterdam and let the 100% OpenBSD journey begin.
</description>
      <author> ()</author>
      <guid>https://www.tumfatig.net/2025/cruising-a-vps-at-openbsd-amsterdam/</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:18 GMT</pubDate>
    </item>
    <item>
      <title>Decentralized Syndication - The Missing Internet&amp;#160;Protocol</title>
      <link>http://tautvilas.lt/decentralized-syndication-the-missing-internet-protocol/</link>
      <description>The Internet is decentralized by design. It came into being not at once, but in parts. New protocols were added on top of previous ones, but one crucial protocol is still missing.</description>
      <author> ()</author>
      <guid>http://tautvilas.lt/decentralized-syndication-the-missing-internet-protocol/</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:17 GMT</pubDate>
    </item>
    <item>
      <title>Looking for a new role</title>
      <link>https://chrisshort.net/micro/looking-for-a-new-role-2025/</link>
      <description>From Red Hat to AWS, I&amp;#39;ve done developer advocacy, technical marketing, and product marketing. This is in addition to the upstream work I do for Kubernetes. I welcome new opportunities.</description>
      <author> ()</author>
      <guid>https://chrisshort.net/micro/looking-for-a-new-role-2025/</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:17 GMT</pubDate>
    </item>
    <item>
      <title>Iain Schmitt</title>
      <link>https://iainschmitt.com/post/the-strangest-carrier-southern-linc</link>
      <description>Any firm&amp;#39;s contingency plans or redundant infrastructure says a lot about the business that they are in and what tradeoffs they are faced with. As an example, if your company&amp;#39;s HR software vendor was inaccessible for a day because of an AWS availability zone failure, you probably have bigger problems that day. Beside the point that AWS customers are far likelier to bring an outage on themselves, the impact to a company of HR software being inaccessible for a work day is not an &amp;quot;everything grids to a halt&amp;quot; situation. Some offer letters will be sent out late and any pending changes in benefits wouldn&amp;#39;t be acted on, but it isn&amp;#39;t the end of the world. Lattice is the first company that came to mind here, and if Lattice engineering leadership is trying to prioritise between a) lift-and-shift capabilities to another public cloud vendor and b) new features that will differentiate the product in the marketplace, it&amp;#39;s pretty clear that they should go for the latter.</description>
      <author> ()</author>
      <guid>https://iainschmitt.com/post/the-strangest-carrier-southern-linc</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:17 GMT</pubDate>
    </item>
    <item>
      <title>Parsing JSON in C &amp;amp; C++: Singleton Tax</title>
      <link>https://ashvardanian.com/posts/parsing-json-with-allocators-cpp/</link>
      <description>I’d argue that almost every open-source developer gets an extra spark of joy when someone reads the documentation and uses their tool in a way that goes beyond the classic 101 examples. It’s a rare treat even for popular projects like JSON parsers, but if you are building high-throughput software, such as analyzing millions of network packets per second, you’ll have to dig deeper.
The first thing I generally check in such libraries is the memory usage pattern and whether I can override the default memory allocator. It is the most common singleton of them all!</description>
      <author> ()</author>
      <guid>https://ashvardanian.com/posts/parsing-json-with-allocators-cpp/</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:11 GMT</pubDate>
    </item>
    <item>
      <title>Zero to One Hundred Thousand Tests</title>
      <link>https://etodd.io/2025/01/06/zero-to-one-hundred-thousand-tests/</link>
      <description>When I started at StrongDM five years ago (woah), we had zero automated tests. Last year we had 50,000 tests. Today, around 70% of our code is covered by over 100,000 tests, most of which run on every pull request.
What follows is my personal opinion about what constitutes a “good” automated test based on my observation of this colossal increase in test coverage. The goal is not to convince you I’m right, but to draw some contrasts and provoke you to question assumptions and form your own opinions.</description>
      <author> ()</author>
      <guid>https://etodd.io/2025/01/06/zero-to-one-hundred-thousand-tests/</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:11 GMT</pubDate>
    </item>
    <item>
      <title>Turning data into calendar feeds</title>
      <link>https://mattrossman.com/2025/01/06/turning-data-into-calendar-feeds/</link>
      <description>I rely on Google Calendar and macOS Calendar to remind me of time commitments.
Some events I care about are managed by other people, making them hard to track
in my calendar apps.</description>
      <author> ()</author>
      <guid>https://mattrossman.com/2025/01/06/turning-data-into-calendar-feeds/</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:11 GMT</pubDate>
    </item>
    <item>
      <title>Build an LVGL Touchscreen App with Zig</title>
      <link>https://lupyuen.org/articles/lvgl.html</link>
      <description>Can we use Zig to build an LVGL Touchscreen App for Apache NuttX RTOS? Also wrap the LVGL API in Zig to build simpler, safer LVGL Apps? Let&amp;#39;s find out!</description>
      <author> ()</author>
      <guid>https://lupyuen.org/articles/lvgl.html</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:10 GMT</pubDate>
    </item>
    <item>
      <title>Magic/Tragic Email Links: Don&amp;#39;t make them the only option</title>
      <link>https://recyclebin.zip/posts/annoyinglinks/</link>
      <description>Subscription websites now like to use magic email links for login. They are extremely annoying.</description>
      <author> ()</author>
      <guid>https://recyclebin.zip/posts/annoyinglinks/</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:09 GMT</pubDate>
    </item>
    <item>
      <title>MLC | Microserving LLM engines</title>
      <link>https://blog.mlc.ai/2025/01/07/microserving-llm-engines</link>
      <description>Jan 7, 2025
        
        
        •</description>
      <author> ()</author>
      <guid>https://blog.mlc.ai/2025/01/07/microserving-llm-engines</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:08 GMT</pubDate>
    </item>
    <item>
      <title>Dermatology AI that can reason like a doctor</title>
      <link>https://mdme.ai/blog/2025/01/06/dermatology-ai-that-can-reason-like-a-doctor</link>
      <description>Human clinicians have traditionally had a definitive edge over traditional computer vision programs because humans can combine information from images and text. Here, we demonstrate the capability of large language model technology, in particular GPT4o, to convincingly use clinical context to enhance dermatological image interpretation in ways analogous to the semantic reasoning of a real dermatologist. </description>
      <author> ()</author>
      <guid>https://mdme.ai/blog/2025/01/06/dermatology-ai-that-can-reason-like-a-doctor</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:08 GMT</pubDate>
    </item>
    <item>
      <title>Improving SVG chart interactivity with Voronoi diagrams</title>
      <link>https://tomhazledine.com/improving-svg-chart-interactivity-with-voronoi-diagrams/</link>
      <description>How I used Delaunay triangulation and Voronoi diagrams to fix hover issues in my SVG charts (with React and D3.js).</description>
      <author> ()</author>
      <guid>https://tomhazledine.com/improving-svg-chart-interactivity-with-voronoi-diagrams/</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:08 GMT</pubDate>
    </item>
    <item>
      <title>Reviewing Post-Training Techniques from Recent Open LLMs | Brian Fitzgerald</title>
      <link>https://brianfitzgerald.xyz/dpo-review/</link>
      <description>header</description>
      <author> ()</author>
      <guid>https://brianfitzgerald.xyz/dpo-review/</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:08 GMT</pubDate>
    </item>
    <item>
      <title>&amp;#220;llar Maasik - Learning Laravel by building a postal code finder</title>
      <link>https://usrme.xyz/posts/learning-laravel-by-building-a-postal-code-finder/</link>
      <description>January 5, 2025</description>
      <author> ()</author>
      <guid>https://usrme.xyz/posts/learning-laravel-by-building-a-postal-code-finder/</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:07 GMT</pubDate>
    </item>
    <item>
      <title>When will we fix the tools that run the world?</title>
      <link>https://www.cgustavo.com/blog/tools</link>
      <description>Gustavo Cid (@_cgustavo) |</description>
      <author> ()</author>
      <guid>https://www.cgustavo.com/blog/tools</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:07 GMT</pubDate>
    </item>
    <item>
      <title>The Web Was Made For Surfing Not Scrolling</title>
      <link>https://orbiter.host/blog/the-web-was-meant-for-surfing-not-scrolling/</link>
      <description>The web was once a fun and open place where people would wander and wonder. Social media has negatively impacted that.</description>
      <author> ()</author>
      <guid>https://orbiter.host/blog/the-web-was-meant-for-surfing-not-scrolling/</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:07 GMT</pubDate>
    </item>
    <item>
      <title>10 Years of Generative AI Slop</title>
      <link>https://bauer.codes/post/2025/01/10-years-of-genai-slop/</link>
      <description>Paul Bauer, computer programmer working at Datadog, has professional interest in: resilient software engineering, functional programming, databases, profiling, remote work, personal knowledge management.</description>
      <author> ()</author>
      <guid>https://bauer.codes/post/2025/01/10-years-of-genai-slop/</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:07 GMT</pubDate>
    </item>
    <item>
      <title>How I use the notes field in my password manager</title>
      <link>https://alexwlchan.net/2025/password-notes/</link>
      <description>I use notes as a mini-changelog to track the context and history of my online accounts. I write down why I created accounts, made changes, or chose particular settings. </description>
      <author> ()</author>
      <guid>https://alexwlchan.net/2025/password-notes/</guid>
      <pubDate>Wed, 08 Jan 2025 02:02:05 GMT</pubDate>
    </item>
  </channel>
</rss>