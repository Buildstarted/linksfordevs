<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>Stop Scraping my Git Forge</title>
      <link>https://gabrielsimmer.com/blog/stop-scraping-git-forge</link>
      <description>Amazonbot, please. It&amp;#39;s too much.</description>
      <author> ()</author>
      <guid>https://gabrielsimmer.com/blog/stop-scraping-git-forge</guid>
      <pubDate>Tue, 04 Jun 2024 16:01:08 GMT</pubDate>
    </item>
    <item>
      <title>The state of SourceHut and our plans for the future</title>
      <link>https://sourcehut.org/blog/2024-06-04-status-and-plans/</link>
      <description>sourcehut is a network of useful open source tools for software project maintainers and collaborators, including git repos, bug tracking, continuous integration, and mailing lists.</description>
      <author> ()</author>
      <guid>https://sourcehut.org/blog/2024-06-04-status-and-plans/</guid>
      <pubDate>Tue, 04 Jun 2024 15:01:13 GMT</pubDate>
    </item>
    <item>
      <title>Announcing DuckDB 1.0.0</title>
      <link>https://duckdb.org/2024/06/03/announcing-duckdb-100.html</link>
      <description>The DuckDB team is very happy to announce that today we’re releasing DuckDB version 1.0.0, codename “Snow Duck” (anas nivis).</description>
      <author> (Mark Raasveldt and Hannes M&amp;#252;hleisen)</author>
      <guid>https://duckdb.org/2024/06/03/announcing-duckdb-100.html</guid>
      <pubDate>Tue, 04 Jun 2024 14:01:08 GMT</pubDate>
    </item>
    <item>
      <title>I Am So Sick of Leetcode-Style Interviews</title>
      <link>https://nelson.cloud/i-am-so-sick-of-leetcode-style-interviews/</link>
      <description>Leetcode-style interviews do not reflect real world software engineering problems.</description>
      <author> (Nelson Figueroa)</author>
      <guid>https://nelson.cloud/i-am-so-sick-of-leetcode-style-interviews/</guid>
      <pubDate>Tue, 04 Jun 2024 11:01:21 GMT</pubDate>
    </item>
    <item>
      <title>Tree Diffusion</title>
      <link>https://tree-diffusion.github.io/</link>
      <description>We would like to thank Kathy Jang, David Wu, Cam Allen, Sam Toyer, Eli Bronstein, Koushik
				Sen, and Pieter Abbeel for discussions, feedback, and technical support.</description>
      <author> ()</author>
      <guid>https://tree-diffusion.github.io/</guid>
      <pubDate>Tue, 04 Jun 2024 11:01:21 GMT</pubDate>
    </item>
    <item>
      <title>Streamline Testing Processes with Contract Testing and Pact in .NET</title>
      <link>https://goatreview.com/contract-testing-net-software-development-pact/</link>
      <description>Optimize your .NET development workflow with contract testing and Pact. Explore the transformative impact of contract testing on testing cycles, reliability, and integration. Unlock the potential of seamless software development.</description>
      <author> (Pierre Belin)</author>
      <guid>https://goatreview.com/contract-testing-net-software-development-pact/</guid>
      <pubDate>Tue, 04 Jun 2024 10:01:06 GMT</pubDate>
    </item>
    <item>
      <title>Understanding the Exception.HResult property in C#</title>
      <link>https://blog.elmah.io/understanding-the-exception-hresult-property-in-c/</link>
      <description>Learn how to understand HRESULTs in .NET exceptions. HRESULTs can help debug errors by highlighting error codes not available in the message.</description>
      <author> (Written by Thomas Ardal, June 04, 2024)</author>
      <guid>https://blog.elmah.io/understanding-the-exception-hresult-property-in-c/</guid>
      <pubDate>Tue, 04 Jun 2024 08:01:16 GMT</pubDate>
    </item>
    <item>
      <title>Multi-Tenancy: Database per Tenant with Marten</title>
      <link>https://jeremydmiller.com/2024/06/03/multi-tenancy-database-per-tenant-with-marten/</link>
      <description>This is continuing a series about multi-tenancy with Marten, Wolverine, and ASP.Net Core: What is it and why do you&amp;#160;care? Marten’s “Conjoined” Model Database per Tenant with Marten (this post) In t…</description>
      <author> (jeremydmiller)</author>
      <guid>https://jeremydmiller.com/2024/06/03/multi-tenancy-database-per-tenant-with-marten/</guid>
      <pubDate>Tue, 04 Jun 2024 06:01:20 GMT</pubDate>
    </item>
    <item>
      <title>Local Development using Azure Cosmos DB Emulator at no Cost</title>
      <link>https://techcommunity.microsoft.com/t5/educator-developer-blog/local-development-using-azure-cosmos-db-emulator-at-no-cost/ba-p/4153822</link>
      <description>&amp;#160;
&amp;#160;
Discover the Azure Cosmos DB Emulator – your key to a smooth, cost-effective local development experience. This guide equips you with everything you need:..</description>
      <author> (https://techcommunity.microsoft.com/t5/user/viewprofilepage/user-id/1602363)</author>
      <guid>https://techcommunity.microsoft.com/t5/educator-developer-blog/local-development-using-azure-cosmos-db-emulator-at-no-cost/ba-p/4153822</guid>
      <pubDate>Tue, 04 Jun 2024 06:01:18 GMT</pubDate>
    </item>
    <item>
      <title>Highlights from Build and what’s new with .NET</title>
      <link>https://techcommunity.microsoft.com/t5/apps-on-azure-blog/highlights-from-build-and-what-s-new-with-net/ba-p/4158224</link>
      <description>Explore highlights, news, and announcements from Build, and find out what’s new with .NET.</description>
      <author> (https://techcommunity.microsoft.com/t5/user/viewprofilepage/user-id/2015652)</author>
      <guid>https://techcommunity.microsoft.com/t5/apps-on-azure-blog/highlights-from-build-and-what-s-new-with-net/ba-p/4158224</guid>
      <pubDate>Tue, 04 Jun 2024 06:01:18 GMT</pubDate>
    </item>
    <item>
      <title>Fast and Compact Structured Logging in C# Using String Interpolation</title>
      <link>https://blog.postsharp.net/structured-logging-with-string-interpolation</link>
      <description>Learn how string interpolation can be used for efficient structured logging in C#, and how to create a custom string interpolation handler to keep argument names and improve performance.</description>
      <author> ()</author>
      <guid>https://blog.postsharp.net/structured-logging-with-string-interpolation</guid>
      <pubDate>Tue, 04 Jun 2024 06:01:18 GMT</pubDate>
    </item>
    <item>
      <title>Introducing the Revamped Visual Studio Resource Explorer - Visual Studio Blog</title>
      <link>https://devblogs.microsoft.com/visualstudio/introducing-the-revamped-visual-studio-resource-explorer/</link>
      <description>We have redesigned the Visual Studio Resource Explorer! Now you can manage all your localizations from a single unified view.</description>
      <author> (McKenna Barlow)</author>
      <guid>https://devblogs.microsoft.com/visualstudio/introducing-the-revamped-visual-studio-resource-explorer/</guid>
      <pubDate>Tue, 04 Jun 2024 06:01:17 GMT</pubDate>
    </item>
    <item>
      <title>React Basics: Microfrontend vs. Monorepos</title>
      <link>https://www.telerik.com/blogs/react-basics-microfrontend-vs-monorepos</link>
      <description>Let’s explore the concepts of micro-frontends and monorepos, their pros and cons, and how they can work together.</description>
      <author> ()</author>
      <guid>https://www.telerik.com/blogs/react-basics-microfrontend-vs-monorepos</guid>
      <pubDate>Tue, 04 Jun 2024 06:01:17 GMT</pubDate>
    </item>
    <item>
      <title>Giving the .NET smart components a try–The Smart Paste button</title>
      <link>https://bartwullems.blogspot.com/2024/06/giving-net-smart-components-trythe.html</link>
      <description>Microsoft announced  last month, the .NET Smart Components, an experimental set of AI-powered UI components that can be added to your .NET a...</description>
      <author> (Share)</author>
      <guid>https://bartwullems.blogspot.com/2024/06/giving-net-smart-components-trythe.html</guid>
      <pubDate>Tue, 04 Jun 2024 06:01:17 GMT</pubDate>
    </item>
    <item>
      <title>You&amp;#39;ll regret using natural keys</title>
      <link>https://blog.ploeh.dk/2024/06/03/youll-regret-using-natural-keys/</link>
      <description>Beating another dead horse.</description>
      <author> (Mark Seemann)</author>
      <guid>https://blog.ploeh.dk/2024/06/03/youll-regret-using-natural-keys/</guid>
      <pubDate>Tue, 04 Jun 2024 06:01:16 GMT</pubDate>
    </item>
    <item>
      <title>Create a multi-arch Docker image for a .NET application - G&amp;#233;rald Barr&amp;#233;</title>
      <link>https://www.meziantou.net/create-a-multi-arch-docker-image-for-a-dotnet-application.htm</link>
      <description>In this post, I describe how to create a multi-arch Docker image for a .NET application. The image will be built for x64 and ARM64 architectures.</description>
      <author> (G&amp;#233;rald Barr&amp;#233;)</author>
      <guid>https://www.meziantou.net/create-a-multi-arch-docker-image-for-a-dotnet-application.htm</guid>
      <pubDate>Tue, 04 Jun 2024 06:01:16 GMT</pubDate>
    </item>
    <item>
      <title>Decompiling Tenchu: Stealth Assassins part 11: a modding framework powered by the tears of CS101 teachers</title>
      <link>https://boricj.net/tenchu1/2024/05/31/part-11.html</link>
      <description>Previously in this series of articles, I’ve provided a potpourri-style update on this project due to a lack of demonstrable progress. Since then, the wretched demon of optimizing MIPS assemblers vacuuming up copies of instructions with HI16 relocations inside branch delay slots has been tamed, so we’re back on our irregularly-scheduled program.</description>
      <author> (Jean-Baptiste Boric)</author>
      <guid>https://boricj.net/tenchu1/2024/05/31/part-11.html</guid>
      <pubDate>Mon, 03 Jun 2024 22:02:32 GMT</pubDate>
    </item>
    <item>
      <title>Even more Opentelemetry!</title>
      <link>https://blog.frankel.ch/even-more-opentelemetry/</link>
      <description>I continue to work on my Opentelemetry demo. Its main idea is to showcase traces across various technology stacks, including asynchronous communication via an MQTT queue. This week, I added a couple of components and changed the architecture. Here are some noteworthy learnings; note that some of them might not be entirely connected to OpenTelemetry.   Here’s an updated diagram. New components appear in violet, and updated components appear in green.        I want to be able to add more comp</description>
      <author> (Nicolas Fr&amp;#228;nkel)</author>
      <guid>https://blog.frankel.ch/even-more-opentelemetry/</guid>
      <pubDate>Mon, 03 Jun 2024 22:02:32 GMT</pubDate>
    </item>
    <item>
      <title>Introduction to Mapster in C#: Benefits and Quick Start Guide</title>
      <link>https://blog.ivankahl.com/introduction-to-mapster-in-csharp/</link>
      <description>Mapster is a versatile, high-performance object mapping library for .NET. This blog post provides an introductory guide to using Mapster, highlighting its key features and benefits for efficient data mapping in C# applications.</description>
      <author> (Ivan Kahl)</author>
      <guid>https://blog.ivankahl.com/introduction-to-mapster-in-csharp/</guid>
      <pubDate>Mon, 03 Jun 2024 22:02:32 GMT</pubDate>
    </item>
    <item>
      <title>Natvis for boost::unordered_map | Braden++</title>
      <link>https://blog.ganets.ky/NatvisForUnordered/</link>
      <description>Recently I’ve been working on implementing custom visualizations for the Boost.Unordered containers in the Visual Studio Natvis framework, to provide an identical debugging experience in the Boost.Unordered containers to what we get for the STL containers. Here is the file.</description>
      <author> (Braden Ganetsky)</author>
      <guid>https://blog.ganets.ky/NatvisForUnordered/</guid>
      <pubDate>Mon, 03 Jun 2024 22:02:31 GMT</pubDate>
    </item>
    <item>
      <title>Sam Altman, Lately • Of the Clock</title>
      <link>http://oftheclock.com/sam-altman-lately</link>
      <description>A few day ago, YCombinator boss Paul Graham posted an image on X1, providing an explanation behind Altman’s departure from YCombinator’s main leadership position. Graham’s attempt to dispel rumors of Altman’s supposed firing didn’t work as well as... | Of the Clock | Not for human consumption.</description>
      <author> ()</author>
      <guid>http://oftheclock.com/sam-altman-lately</guid>
      <pubDate>Mon, 03 Jun 2024 22:02:31 GMT</pubDate>
    </item>
    <item>
      <title>Probability: The Distribution Matters</title>
      <link>https://azeemba.com/posts/probability-the-distribution-matters.html</link>
      <description>Expected value only captures one aspect of a probability system.</description>
      <author> (Azeem Bande-Ali)</author>
      <guid>https://azeemba.com/posts/probability-the-distribution-matters.html</guid>
      <pubDate>Mon, 03 Jun 2024 22:02:31 GMT</pubDate>
    </item>
    <item>
      <title>Pencil Research - Acquiring an app: Transfer gotchas</title>
      <link>https://blog.pencilresearch.com/2024/06/03/acquiring-an-app.html</link>
      <description>Pencil Research has acquired Petey, an AI assistant for your Apple Watch, iPhone, and iPad. Petey’s creator, Hidde van der Ploeg, is well known for his high-quality apps, and Petey reflects this. As the acquirer, we wanted to respect the work Hidde put into his app – and also the well-deserved trust in Hidde by the app’s users – by making the transfer process seamless.</description>
      <author> (Pencil Research)</author>
      <guid>https://blog.pencilresearch.com/2024/06/03/acquiring-an-app.html</guid>
      <pubDate>Mon, 03 Jun 2024 22:02:31 GMT</pubDate>
    </item>
    <item>
      <title>Questions to ask before you join a start-up</title>
      <link>https://www.andrescn.me/article/2024/06/03/startups-offers.html</link>
      <description>It’s hard to know if a start-up will survive before joining. Many of them fail for different reasons. The big two are running out of money and shipping a product nobody wanted.</description>
      <author> ()</author>
      <guid>https://www.andrescn.me/article/2024/06/03/startups-offers.html</guid>
      <pubDate>Mon, 03 Jun 2024 22:02:31 GMT</pubDate>
    </item>
    <item>
      <title>Real-Time Settlers Of Catan</title>
      <link>https://robert.ocallahan.org/2024/06/real-time-settlers.html</link>
      <description>Sunday  2 June 2024</description>
      <author> (Robert O&amp;#39;Callahan. Christian. Repatriate Kiwi. Hacker.)</author>
      <guid>https://robert.ocallahan.org/2024/06/real-time-settlers.html</guid>
      <pubDate>Mon, 03 Jun 2024 22:02:30 GMT</pubDate>
    </item>
    <item>
      <title>Deterring a Taiwan Invasion</title>
      <link>https://www.chinatalk.media/p/deterring-a-taiwan-invasion</link>
      <description>Is there still time to stave off WWIII?</description>
      <author> (Jordan Schneider)</author>
      <guid>https://www.chinatalk.media/p/deterring-a-taiwan-invasion</guid>
      <pubDate>Mon, 03 Jun 2024 22:02:29 GMT</pubDate>
    </item>
    <item>
      <title>Lowering resource usage with foot and systemd</title>
      <link>https://rgoswami.me/posts/lowering-resource-usage-foot-systemd/</link>
      <description>Melding systemd and foot for rapid configuration updates and reduced memory consumption in sway with persistent tmux state
Background Since I often work in strong sunlight, I often want to reconfigure my terminal to use a light or a dark scheme depending on the time of day. In the process, I decided to fiddle around with custom systemd targets, since sway isn’t really good at managing long running processes like my terminal (foot) server.</description>
      <author> ([Rohit Goswami])</author>
      <guid>https://rgoswami.me/posts/lowering-resource-usage-foot-systemd/</guid>
      <pubDate>Mon, 03 Jun 2024 22:02:29 GMT</pubDate>
    </item>
    <item>
      <title>256 Seconds with dotNetDave: Handling Exceptions Part 1 – Reusable Assemblies</title>
      <link>https://dotnettips.wordpress.com/2024/06/03/256-seconds-with-dotnetdave-handling-exceptions-part-1-in-reusable-assemblies/</link>
      <description>This content discusses exception handling in Microsoft .NET, focusing on application layer and reusable assemblies. It offers insights on preventing exceptions and notifying calling code, and refer…</description>
      <author> (Published by dotNetDave)</author>
      <guid>https://dotnettips.wordpress.com/2024/06/03/256-seconds-with-dotnetdave-handling-exceptions-part-1-in-reusable-assemblies/</guid>
      <pubDate>Mon, 03 Jun 2024 22:02:29 GMT</pubDate>
    </item>
    <item>
      <title>Deploying SwiftUI on the Web</title>
      <link>https://www.carsonkatri.com/articles/deploying-swiftui-on-the-web/</link>
      <description>I recently released a web version of a SwiftUI app. However, instead of building out a separate webapp (in something like React), I brought my SwiftUI code onto the web using SwiftWasm.</description>
      <author> ()</author>
      <guid>https://www.carsonkatri.com/articles/deploying-swiftui-on-the-web/</guid>
      <pubDate>Mon, 03 Jun 2024 22:02:29 GMT</pubDate>
    </item>
    <item>
      <title>Zoom light</title>
      <link>https://nathanfriend.io/2024/05/31/zoom-light.html</link>
      <description>I built a light that glows when I’m on a Zoom call. I recently had a blast building my own keyboard. As part of that project, I connected individually-addressable LED strips to the two microcontrollers inside each half. It was way easier than I expected and the end result was fantastic! This new project was the perfect excuse to play around with these LED strips again. I wanted to engineer a way to allow my family to know I was on a Zoom call without having to open my office door. I had a vision of a nondescript, unobtrusive object that would only reveal its purpose when turned on. I decided to build a light with a partially-transparent shade; the shade would be thick enough to obscure any pattern on its inside when dark, but would clearly reveal its inner pattern when lit. How it works On a technical level, here’s how it works: A script on my MacBook listens for Zoom calls to begin When it detects a Zoom call has started, the script makes a network request to http://zoomlight/api/led/on A web server running on a wireless Raspberry Pi Pico inside the light receives the request and turns on the LED strip Build log Step 1: Hello world This was my first time working with a Raspberry Pi Pico, so my first task was to just get some code running. Before too long I was able to toggle the on-board LED on and off: Step 2: Pico web server Now that I had code compiling and running, I wanted to prove out the idea of running a web server on the wireless Pico. At first, I hand-coded my own web server, which looked something like this and actually worked okay. But I then discovered microdot and threw away my fragile, bespoke implementation for this much more fully-featured library. I could now toggle the on-board LED remotely! Step 3: The SK6812s I soldered some jumper cables to an SK6812 LED strip and connected it to the Pico. With some help from the neopixel library, I had a remotely-controllable LED strip! Step 4: The prints With the digital problems solved, I pivoted to the analog half of this project. I designed a case and shade in FreeCAD and 3D printed some prototypes using both PLA and PETG. These first attempts were okay, but neither were perfect. Both had some printing deformities that were noticeable when backlit. In addition, the shade wasn’t quite deep enough to allow the light from the LED strip to diffuse, causing the center of the light to be noticeably brighter than the top and bottom edges. I increased the depth a bit and printed a new version of both the casing and the shade in PETG. I got lucky; both were some of the cleanest prints I’ve ever managed! I usually struggle with PETG, but the 3D printing gods smiled on me that day. (Well, days. Each one took ~18 hours to print.) Step 5: Piecing it together The end was in sight. I fixed the LED strip and Pico to the inside of the casing using some hot glue. Step 6: Drilling holes It was time to mount it. After some obsessive measuring, I drilled a hole all the way through the wall above my office door (for the power cord) and mounted the casing using command strips. I popped on the shade and had a working light that I could manually trigger with curl! Step 7: Making it automatic The final step was to automate the light so that it automatically turned on when I entered a Zoom call and turned off when I exited. I experimented with a few different approaches and ultimately ended up using a rather unsatisfying method of polling every 5 seconds for the number of open Zoom ports: #!/usr/bin/env bash # How often to poll for Zoom status, in seconds INTERVAL=5 # Function to execute the command and process its output monitor_zoom() { current_state=&amp;#39;unknown&amp;#39; while true; do # output will be an integer representing the number of open Zoom ports output=$(lsof -i 4UDP | grep zoom | awk &amp;#39;END{print NR}&amp;#39;) if [[ $output -gt 2 &amp;amp;amp;&amp;amp;amp; $current_state != &amp;quot;on&amp;quot; ]]; then # In practice, when on a Zoom call, $output seems to always be 6 current_state=&amp;quot;on&amp;quot; echo &amp;quot;Turning light on&amp;quot; curl -X POST http://zoomlight/api/led/on elif [[ $output -le 2 &amp;amp;amp;&amp;amp;amp; $current_state != &amp;quot;off&amp;quot; ]]; then # In practice, when not on a Zoom call, $output seems to always be 1 current_state=&amp;quot;off&amp;quot; echo &amp;quot;Turning light off&amp;quot; curl -X POST http://zoomlight/api/led/off fi sleep $INTERVAL done } echo &amp;quot;Watching for Zoom meetings in the background with PID: $$&amp;quot; # Start the monitoring monitor_zoom (Does anyone know of a more elegant solution? I’d love to hear it!) I set up this script to run every time my machine starts (like this). Step 8: Adding a frontend Since the Pico was already running a web server, I added a simple frontend that could be accessed through a web browser. The website shows the current status of the light (via the color of the header block) and provides a way to manually control the color of the light. It uses my favorite component library, Wired Elements. Final thoughts Overall, I’m very happy with how this turned out. The light looks great and turns on and off exactly when it is supposed to! Links/resources All source files on GitLab: https://gitlab.com/nfriend/zoom-light 3D models on Thingiverse: https://www.thingiverse.com/thing:6644694 microdot, the Python web server library I use on the Pico: https://github.com/miguelgrinberg/microdot neopixel, the library that interfaces with the LED strip on the Pico: https://github.com/blaz-r/pi_pico_neopixel </description>
      <author> ()</author>
      <guid>https://nathanfriend.io/2024/05/31/zoom-light.html</guid>
      <pubDate>Mon, 03 Jun 2024 22:02:28 GMT</pubDate>
    </item>
    <item>
      <title>Rationalizing Latency Competition in High-Frequency Trading – Headlands Technologies LLC Blog</title>
      <link>https://blog.headlandstech.com/2024/05/01/opinion-rationalizing-latency-competition-in-high-frequency-trading/</link>
      <description>Introduction</description>
      <author> ()</author>
      <guid>https://blog.headlandstech.com/2024/05/01/opinion-rationalizing-latency-competition-in-high-frequency-trading/</guid>
      <pubDate>Mon, 03 Jun 2024 22:02:28 GMT</pubDate>
    </item>
    <item>
      <title>joesantos - Developer | Polarizing the new world</title>
      <link>https://joesantos.io/posts/polarizing-world/</link>
      <description>The engineering world is under an attack of drama and concepts that segregates us into different camps without us knowing. Are we doomed?</description>
      <author> ()</author>
      <guid>https://joesantos.io/posts/polarizing-world/</guid>
      <pubDate>Mon, 03 Jun 2024 22:02:28 GMT</pubDate>
    </item>
    <item>
      <title>1 June 2024 | John D. Cook</title>
      <link>https://www.johndcook.com/blog/2024/06/01/</link>
      <description>Excerpt from from John Carmack’s review of the book Bullshit Jobs.</description>
      <author> ()</author>
      <guid>https://www.johndcook.com/blog/2024/06/01/</guid>
      <pubDate>Mon, 03 Jun 2024 22:02:28 GMT</pubDate>
    </item>
    <item>
      <title>Quickly Generate Time-Series Synthetic Data with OpenAI’s Fine-Tuning API</title>
      <link>https://www.sarus.tech/post/quickly-generate-time-series-synthetic-data-with-openais-fine-tuning-api</link>
      <description>Beyond Few-Shot Learning: How LLMs Excel in Synthetic Data Generation Through Fine-Tuning</description>
      <author> (Nicolas Grislain — June 1, 2024)</author>
      <guid>https://www.sarus.tech/post/quickly-generate-time-series-synthetic-data-with-openais-fine-tuning-api</guid>
      <pubDate>Mon, 03 Jun 2024 22:02:28 GMT</pubDate>
    </item>
    <item>
      <title>Encryption At Rest: Whose Threat Model Is It Anyway?</title>
      <link>https://scottarc.blog/2024/06/02/encryption-at-rest-whose-threat-model-is-it-anyway/</link>
      <description>One of the lessons I learned during my time at AWS Cryptography (and particularly as an AWS Crypto Bar Raiser) is that the threat model for Encryption At Rest is often undefined. Prior to consultin…</description>
      <author> (Scott Arciszewski)</author>
      <guid>https://scottarc.blog/2024/06/02/encryption-at-rest-whose-threat-model-is-it-anyway/</guid>
      <pubDate>Mon, 03 Jun 2024 22:02:28 GMT</pubDate>
    </item>
    <item>
      <title>Setting up a local reverse proxy on Proxmox with Traefik and Cloudflare</title>
      <link>https://erdaltoprak.com/blog/setting-up-a-local-reverse-proxy-on-proxmox-with-traefik-and-cloudflare/</link>
      <description>Setting up a local reverse proxy on your homelab with Traefik v3 and Cloudflare</description>
      <author> (Erdal Toprak)</author>
      <guid>https://erdaltoprak.com/blog/setting-up-a-local-reverse-proxy-on-proxmox-with-traefik-and-cloudflare/</guid>
      <pubDate>Mon, 03 Jun 2024 22:02:27 GMT</pubDate>
    </item>
    <item>
      <title>The case for network acceleration in multiplayer games</title>
      <link>https://mas-bandwidth.com/the-case-for-network-acceleration-for-multiplayer-games/</link>
      <description>Fixing bad network performance greatly improves the player experience.</description>
      <author> ()</author>
      <guid>https://mas-bandwidth.com/the-case-for-network-acceleration-for-multiplayer-games/</guid>
      <pubDate>Mon, 03 Jun 2024 22:02:27 GMT</pubDate>
    </item>
    <item>
      <title>Hacking Millions of Modems (and Investigating Who Hacked My Modem)</title>
      <link>https://samcurry.net/hacking-millions-of-modems</link>
      <description>Two years ago, something very strange happened to me while working from my home network. I was exploiting a blind XXE vulnerability that required an external HTTP server to smuggle out files, so I spun up an AWS box and ran a simple Python webserver to receive the traffic from the vulnerable server.</description>
      <author> (Accidentally Discovering an Authorization Bypass on the Cox Backend API)</author>
      <guid>https://samcurry.net/hacking-millions-of-modems</guid>
      <pubDate>Mon, 03 Jun 2024 22:02:27 GMT</pubDate>
    </item>
    <item>
      <title>Libadwaita: Splitting GTK and Design Language</title>
      <link>https://tesk.page/2024/06/03/libadwaita-splitting-gtk-and-design-language/</link>
      <description>Recently, the Linux Mint Blog published Monthly News – April 2024, which goes into detail about wanting to fork and maintain older GNOME apps in collaboration with other GTK-based desktop environments. Despite the good intentions of the author, Clem, many readers interpreted this as an attack against GNOME. Specifically: GTK, libadwaita, the relationship between them, and their relevance to any desktop environment or desktop operating system. Unfortunately, many of these readers seem to have a lot of difficulty understanding what GTK is trying to be, and how libadwaita helps. In this article, we’ll look at the history of why and how libadwaita was born, the differences between GTK 4 and libadwaita in terms of scope of support, their relevance to each desktop environment and desktop operating system, and the state of GTK 4 today.</description>
      <author> (Hari Rana)</author>
      <guid>https://tesk.page/2024/06/03/libadwaita-splitting-gtk-and-design-language/</guid>
      <pubDate>Mon, 03 Jun 2024 22:02:27 GMT</pubDate>
    </item>
    <item>
      <title>Reflections on founder teams: what I learned from starting two startups</title>
      <link>https://www.chris-haarburger.com/reflections-on-founder-teams/</link>
      <description>How many founders does a startup need? What&amp;#39;s a good equity split among founders? How do you know if your potential co-founder is the right person? About the fundamental roles of the &amp;quot;builder&amp;quot; and the &amp;quot;seller&amp;quot;.</description>
      <author> ()</author>
      <guid>https://www.chris-haarburger.com/reflections-on-founder-teams/</guid>
      <pubDate>Mon, 03 Jun 2024 22:02:27 GMT</pubDate>
    </item>
    <item>
      <title>StringBuilders magic for very large strings</title>
      <link>https://steven-giesel.com/blogPost/c0144fea-0ff8-4638-be01-b62b48ef7188</link>
      <description>The StringBuilder class is used to create mutable sequences of characters. Strings are immutable, so if you need to perform multiple operations on a string, it is better to use a StringBuilder instead of a string. This is especially useful when you need to concatenate a large number of strings. But there is more magic to it, especially when we go BIG!
</description>
      <author> ()</author>
      <guid>https://steven-giesel.com/blogPost/c0144fea-0ff8-4638-be01-b62b48ef7188</guid>
      <pubDate>Mon, 03 Jun 2024 21:03:15 GMT</pubDate>
    </item>
    <item>
      <title>Cell Organelles</title>
      <link>https://xkcd.com/2941/</link>
      <description></description>
      <author> (About)</author>
      <guid>https://xkcd.com/2941/</guid>
      <pubDate>Mon, 03 Jun 2024 20:01:15 GMT</pubDate>
    </item>
    <item>
      <title>Refactor your code using alias any type - .NET Blog</title>
      <link>https://devblogs.microsoft.com/dotnet/refactor-your-code-using-alias-any-type/</link>
      <description>Explore the &amp;quot;alias any type&amp;quot; C# 12 feature through a complete demo application.</description>
      <author> (David Pine)</author>
      <guid>https://devblogs.microsoft.com/dotnet/refactor-your-code-using-alias-any-type/</guid>
      <pubDate>Mon, 03 Jun 2024 19:01:55 GMT</pubDate>
    </item>
  </channel>
</rss>