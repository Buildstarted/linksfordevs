<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>Health Checks in ASP.NET Core - Code Maze</title>
      <link>https://code-maze.com/health-checks-aspnetcore/</link>
      <description>Health Checks in ASP.NET Core allow us to determine the overall health and availability of our application infrastructure.</description>
      <author> (()x)</author>
      <guid>https://code-maze.com/health-checks-aspnetcore/</guid>
      <pubDate>Tue, 22 Mar 2022 09:02:06 GMT</pubDate>
    </item>
    <item>
      <title>Lanai, the mystery CPU architecture in LLVM</title>
      <link>https://q3k.org/lanai.html</link>
      <description>Disclaimer: I have had access to some confidential information about some of the matter discussed in this page. However, everything written here is derived form publicly available sources, and references to these sources are also provided.</description>
      <author> ()</author>
      <guid>https://q3k.org/lanai.html</guid>
      <pubDate>Tue, 22 Mar 2022 09:02:05 GMT</pubDate>
    </item>
    <item>
      <title>Microservices: Why Are We Doing This?</title>
      <link>https://michaeldehaan.substack.com/p/microservices-why-are-we-doing-this</link>
      <description>I’ve written something like this before on my old (defunct) blog before, but new thoughts and realizations required that I revisit it. The topic? Microservices. The trend to build every single application as a series of tiny web services that talk to each other is growing in prominence, and starting to be picked up by a lot of new professional developers. The problem is, many people picking up this idea have not seen the times before and just assume this is a “best practice”.</description>
      <author> (Michael DeHaan)</author>
      <guid>https://michaeldehaan.substack.com/p/microservices-why-are-we-doing-this</guid>
      <pubDate>Tue, 22 Mar 2022 08:02:09 GMT</pubDate>
    </item>
    <item>
      <title>Tutorial: Hosting Microsoft Orleans Application on Azure App Service with Cosmos DB</title>
      <link>https://nicksnettravels.builttoroam.com/tutorial-orleans-azure-app-service/</link>
      <description>This post is going to wrap up the tutorial series on building a Hello World application using Microsoft Orleans. We’re going to be publishing the application to Azure with the Silo and Services being pushed to an Azure App Service, and linked via a Cosmos DB storage. If you want to check out the first ... Read more</description>
      <author> ()</author>
      <guid>https://nicksnettravels.builttoroam.com/tutorial-orleans-azure-app-service/</guid>
      <pubDate>Tue, 22 Mar 2022 06:02:04 GMT</pubDate>
    </item>
    <item>
      <title>Hooks Considered Harmful</title>
      <link>https://labs.factorialhr.com/posts/hooks-considered-harmful</link>
      <description>React hooks changed radically how we build frontend applications allowing engineers to separate stateful logic from rendering. However, under a seemingly simple API there are some aspects of React hooks that are the source of bugs and performance issues. In this article, we will do a deep dive into the javascript internals to help us understand and overcome those pitfalls.</description>
      <author> ()</author>
      <guid>https://labs.factorialhr.com/posts/hooks-considered-harmful</guid>
      <pubDate>Tue, 22 Mar 2022 06:02:02 GMT</pubDate>
    </item>
    <item>
      <title>Why Don&amp;#39;t You Use ...</title>
      <link>https://www.brendangregg.com/blog/2022-03-19/why-dont-you-use.html</link>
      <description>Why Don&amp;#39;t You Use</description>
      <author> ()</author>
      <guid>https://www.brendangregg.com/blog/2022-03-19/why-dont-you-use.html</guid>
      <pubDate>Tue, 22 Mar 2022 06:02:02 GMT</pubDate>
    </item>
    <item>
      <title>Contravariant Dependency Injection</title>
      <link>https://blog.ploeh.dk/2022/03/21/contravariant-dependency-injection/</link>
      <description>How to use a DI Container in FP... or not.</description>
      <author> (Mark Seemann)</author>
      <guid>https://blog.ploeh.dk/2022/03/21/contravariant-dependency-injection/</guid>
      <pubDate>Tue, 22 Mar 2022 06:02:02 GMT</pubDate>
    </item>
    <item>
      <title>WIP: ILogger for ConnectionMultiplexer by NickCraver &amp;#183; Pull Request #2051 &amp;#183; StackExchange/StackExchange.Redis</title>
      <link>https://github.com/StackExchange/StackExchange.Redis/pull/2051</link>
      <description>Working on ILogger support, but without new overloads possibly. Since we support Action&amp;lt;ConfigurationOptions&amp;gt; this can be added today e.g. with o =&amp;gt; o.Logger = myLogger:
var muxer = ConnectionMulti...</description>
      <author> (StackExchange)</author>
      <guid>https://github.com/StackExchange/StackExchange.Redis/pull/2051</guid>
      <pubDate>Tue, 22 Mar 2022 03:02:07 GMT</pubDate>
    </item>
    <item>
      <title>Galaxies</title>
      <link>https://xkcd.com/2596/</link>
      <description></description>
      <author> (About)</author>
      <guid>https://xkcd.com/2596/</guid>
      <pubDate>Tue, 22 Mar 2022 03:02:06 GMT</pubDate>
    </item>
    <item>
      <title>Password Purgatory</title>
      <link>https://passwordpurgatory.com/</link>
      <description>Password Purgatory is an intentionally infuriating API to request inane and ultimately unachievable password
criteria intended to deliberately frustrate the user. Regardless of the password used, it will always be rejected
hence subjecting the user to &amp;quot;purgatory&amp;quot;. Read more in the launch blog
post.</description>
      <author> ()</author>
      <guid>https://passwordpurgatory.com/</guid>
      <pubDate>Tue, 22 Mar 2022 02:01:33 GMT</pubDate>
    </item>
    <item>
      <title>My self-hosting setup has an UPS now, here&amp;#39;s my experience with it</title>
      <link>https://ounapuu.ee/posts/2022/03/21/ups-i-did-it-again/</link>
      <description>UPS, I did it again &amp;#127925;</description>
      <author> ()</author>
      <guid>https://ounapuu.ee/posts/2022/03/21/ups-i-did-it-again/</guid>
      <pubDate>Tue, 22 Mar 2022 01:02:19 GMT</pubDate>
    </item>
    <item>
      <title>Error handling across different languages</title>
      <link>https://blog.frankel.ch/error-handling/</link>
      <description>I’ve tried Go in the past, and the least I could say is that I was not enthusiastic about it. Chief among my griefs was how the language handled errors, or more precisely, what mechanism it provided developers with to manage them. In this post, I’d like to describe how a couple of popular languages cope with errors. A time before our time I could probably go back a long time, but I needed to choose a baseline at some point. In this post, the baseline is C. If you search for &amp;#39;err</description>
      <author> (Nicolas Fr&amp;#228;nkel)</author>
      <guid>https://blog.frankel.ch/error-handling/</guid>
      <pubDate>Tue, 22 Mar 2022 01:02:18 GMT</pubDate>
    </item>
    <item>
      <title>Building Your Own Nodemon</title>
      <link>https://hire.jonasgalvez.com.br/2022/mar/20/building-your-own-nodemon/</link>
      <description>Hot reloading source code after changes is an essential DX feature. This is a solved issue in frontend development, with tools like webpack and Vite, but not so straightforward when it comes to Node.js.</description>
      <author> (Jonas Galvez)</author>
      <guid>https://hire.jonasgalvez.com.br/2022/mar/20/building-your-own-nodemon/</guid>
      <pubDate>Tue, 22 Mar 2022 01:02:18 GMT</pubDate>
    </item>
    <item>
      <title>SendilKumarN</title>
      <link>https://sendilkumarn.com/blog/my-views-on-zig-2022/</link>
      <description>Zig is a general-purpose language that will eventually replace C.</description>
      <author> ()</author>
      <guid>https://sendilkumarn.com/blog/my-views-on-zig-2022/</guid>
      <pubDate>Tue, 22 Mar 2022 01:02:18 GMT</pubDate>
    </item>
    <item>
      <title>Brian Robert Callahan</title>
      <link>https://briancallahan.net/blog/20220321.html</link>
      <description>academic, developer, with an eye towards a brighter techno-social life</description>
      <author> ()</author>
      <guid>https://briancallahan.net/blog/20220321.html</guid>
      <pubDate>Tue, 22 Mar 2022 01:02:18 GMT</pubDate>
    </item>
    <item>
      <title>Non-dotcom domains hurt startups</title>
      <link>https://www.darrennix.com/blog/non-dotcom/</link>
      <description>What do &amp;quot;zillow&amp;quot;, &amp;quot;trulia&amp;quot;, &amp;quot;figma&amp;quot;, &amp;quot;mercari&amp;quot;, &amp;quot;strava&amp;quot;, &amp;quot;zapier&amp;quot;, and &amp;quot;spotify&amp;quot; have in common? Twenty minutes ago a VC emailed me:  Hey Darren - wanted to ask you if you&amp;#39;d heard of {company}.ai? We&amp;#39;re looking at their round.  I spent a few minutes scratching my head as to why this</description>
      <author> ()</author>
      <guid>https://www.darrennix.com/blog/non-dotcom/</guid>
      <pubDate>Tue, 22 Mar 2022 01:02:17 GMT</pubDate>
    </item>
    <item>
      <title>You, your parents, and the hotness of who you marry</title>
      <link>https://dynomight.net/hotness/</link>
      <description>Why do you disagree with your parents about the importance of looks?</description>
      <author> (dynomight)</author>
      <guid>https://dynomight.net/hotness/</guid>
      <pubDate>Tue, 22 Mar 2022 01:02:17 GMT</pubDate>
    </item>
    <item>
      <title>How To Criticize Coworkers</title>
      <link>https://alexturek.com/2022-03-18-How-to-criticize-coworkers/</link>
      <description>I originally wrote this as a doc, and did a talk w/ slides in Fall 2020 at Convoy. This is very focused on how to work in a software engineering team (surprise! that’s most of what I know about!) but I’ve had friends say they’ve shown this to their partners,...</description>
      <author> (Alex Turek)</author>
      <guid>https://alexturek.com/2022-03-18-How-to-criticize-coworkers/</guid>
      <pubDate>Tue, 22 Mar 2022 01:02:17 GMT</pubDate>
    </item>
    <item>
      <title>Hacks can be Good Code Too</title>
      <link>https://brianschrader.com/archive/hacks-can-be-good-code-too/</link>
      <description>Writing code is, like everything in life, all about making tradeoffs. Code can be quick to write, but at the same time unreadable; it can be fast, but hard to maintain; and it can be flexible, but overly complex. Each of these factors are worth considering when writing Good Code. Complicating this is the fact that: what constitutes Good Code in one situation may not be ideal in another.</description>
      <author> (by Brian Schrader)</author>
      <guid>https://brianschrader.com/archive/hacks-can-be-good-code-too/</guid>
      <pubDate>Tue, 22 Mar 2022 01:02:16 GMT</pubDate>
    </item>
    <item>
      <title>Penny Wise and Cloud Foolish</title>
      <link>https://danielcompton.net/2022/03/21/penny-wise-cloud-foolish</link>
      <description>The two iron rules of cloud pricing introduced by AWS are:


Prices never go up1.
We will absolutely soak you on data transfer charges.


Last week Google Cloud published a post explaining how they we</description>
      <author> ()</author>
      <guid>https://danielcompton.net/2022/03/21/penny-wise-cloud-foolish</guid>
      <pubDate>Tue, 22 Mar 2022 01:02:16 GMT</pubDate>
    </item>
    <item>
      <title>Structured (Synchronous) Concurrency</title>
      <link>https://fsantanna.github.io/structured-concurrency.html</link>
      <description>https://twitter.com/_fsantanna</description>
      <author> ()</author>
      <guid>https://fsantanna.github.io/structured-concurrency.html</guid>
      <pubDate>Tue, 22 Mar 2022 01:02:16 GMT</pubDate>
    </item>
    <item>
      <title>Plain Text Sports</title>
      <link>https://plaintextsports.com/</link>
      <description>Instant live sports scores, play-by-play, and box scores</description>
      <author> ()</author>
      <guid>https://plaintextsports.com/</guid>
      <pubDate>Tue, 22 Mar 2022 01:02:16 GMT</pubDate>
    </item>
    <item>
      <title>Attendees from ABP Community Talks 2022.3: Domain-Driven Design &amp;amp; the ABP book</title>
      <link>https://kommunity.com/volosoft/events/abp-community-talks-20223-domain-driven-design-the-abp-book-b7d55a7b/attendees</link>
      <description>In this episode of the ABP Community Talks, Halil İbrahim Kalkan, Jon Galloway, Lee Richardson and Anto Subash will talk and discuss Domain-Driven Design, the o</description>
      <author> ()</author>
      <guid>https://kommunity.com/volosoft/events/abp-community-talks-20223-domain-driven-design-the-abp-book-b7d55a7b/attendees</guid>
      <pubDate>Tue, 22 Mar 2022 00:02:04 GMT</pubDate>
    </item>
    <item>
      <title>Release v0.5.0-pre.20220321.15 &amp;#183; DamianEdwards/MinimalApis.Extensions</title>
      <link>https://github.com/DamianEdwards/MinimalApis.Extensions/releases/tag/v0.5.0-pre.20220321.15</link>
      <description>Adds new Body&amp;lt;TBody&amp;gt; binding type for binding the request body to a string, byte[], or ReadOnlyMemory&amp;lt;byte&amp;gt; delegate parameter, e.g. app.MapGet(&amp;quot;/myapi&amp;quot;, (Body&amp;lt;string&amp;gt; body) =&amp;gt; $&amp;quot;Received {body}&amp;quot;);...</description>
      <author> (DamianEdwards)</author>
      <guid>https://github.com/DamianEdwards/MinimalApis.Extensions/releases/tag/v0.5.0-pre.20220321.15</guid>
      <pubDate>Tue, 22 Mar 2022 00:02:03 GMT</pubDate>
    </item>
    <item>
      <title>Enemies – real-time cinematic teaser | Unity</title>
      <link>https://youtu.be/eXYUNrgqWUU</link>
      <description>Enemies is the latest project by Unity’s award-winning Demo Team. It showcases Unity’s capabilities for powering high-end visuals in 2022, including the late...</description>
      <author> (Unity
  
  
  
    Unity
  




  
    
    
  



    •)</author>
      <guid>https://youtu.be/eXYUNrgqWUU</guid>
      <pubDate>Mon, 21 Mar 2022 23:02:12 GMT</pubDate>
    </item>
    <item>
      <title>New Video: An Early Look at C# 11
</title>
      <link>https://wildermuth.com/2022/03/20/early-look-at-csharp-11/</link>
      <description>I&amp;#39;ve started staying on top of early releases on .NET 7 and C# 11 already. In this new Coding Shorts video, I look at four of the released changes to C# and hopefully you can get a head start on seeing where C# is going.
</description>
      <author> ()</author>
      <guid>https://wildermuth.com/2022/03/20/early-look-at-csharp-11/</guid>
      <pubDate>Mon, 21 Mar 2022 21:02:32 GMT</pubDate>
    </item>
    <item>
      <title>Sentiment Classification of IMDB Movie Review Data Using a PyTorch LSTM Network -- Visual Studio Magazine</title>
      <link>https://visualstudiomagazine.com/articles/2022/03/21/sentiment-classification-imdb.aspx</link>
      <description>This demo from Dr. James McCaffrey of Microsoft Research of creating a prediction system for IMDB data using an LSTM network can be a guide to create a classification system for most types of text data.
</description>
      <author> (By James McCaffrey03/21/2022)</author>
      <guid>https://visualstudiomagazine.com/articles/2022/03/21/sentiment-classification-imdb.aspx</guid>
      <pubDate>Mon, 21 Mar 2022 21:02:26 GMT</pubDate>
    </item>
    <item>
      <title>Suffer from Ctrl+S fatigue? We have a feature for you</title>
      <link>https://devblogs.microsoft.com/visualstudio/suffer-from-ctrls-fatigue-we-have-a-feature-for-you/</link>
      <description>The idea of the “Integrated Development Experience” is a tool that brings all the systems a developer needs to develop their application into a single place. Coding, debugging, publishing, profiling… these are all tools that Visual Studio brings to our developers.</description>
      <author> (Dante Gagne)</author>
      <guid>https://devblogs.microsoft.com/visualstudio/suffer-from-ctrls-fatigue-we-have-a-feature-for-you/</guid>
      <pubDate>Mon, 21 Mar 2022 21:02:23 GMT</pubDate>
    </item>
    <item>
      <title>Network performance update: Security Week</title>
      <link>https://blog.cloudflare.com/network-performance-update-security-week/</link>
      <description>Today, we’re proud to report we are the fastest provider in 71% of the top 1,000 most reported networks around the world</description>
      <author> (David Tuber)</author>
      <guid>https://blog.cloudflare.com/network-performance-update-security-week/</guid>
      <pubDate>Mon, 21 Mar 2022 17:01:36 GMT</pubDate>
    </item>
    <item>
      <title>Middleware in .NET 6 - Custom Middleware Classes</title>
      <link>https://exceptionnotfound.net/middleware-in-asp-net-6-custom-middleware-classes/</link>
      <description>Let&amp;#39;s build custom ASP.NET 6 Middleware classes, including a logger and a simple response middleware.</description>
      <author> (GitHub)</author>
      <guid>https://exceptionnotfound.net/middleware-in-asp-net-6-custom-middleware-classes/</guid>
      <pubDate>Mon, 21 Mar 2022 15:01:38 GMT</pubDate>
    </item>
    <item>
      <title>Performance benefits of sealed class in .NET - G&amp;#233;rald Barr&amp;#233;</title>
      <link>https://www.meziantou.net/performance-benefits-of-sealed-class.htm</link>
      <description>In this post, I describe the performance benefits of sealed classes in .NET.</description>
      <author> (G&amp;#233;rald Barr&amp;#233;)</author>
      <guid>https://www.meziantou.net/performance-benefits-of-sealed-class.htm</guid>
      <pubDate>Mon, 21 Mar 2022 15:01:38 GMT</pubDate>
    </item>
    <item>
      <title>Application security: Cloudflare’s view</title>
      <link>https://blog.cloudflare.com/application-security/</link>
      <description>In this post, we share some of the insights we’ve gathered from the 32 million HTTP requests/second that pass through our network</description>
      <author> (Michael Tremante)</author>
      <guid>https://blog.cloudflare.com/application-security/</guid>
      <pubDate>Mon, 21 Mar 2022 13:01:22 GMT</pubDate>
    </item>
    <item>
      <title>Hello Podman using .NET | Red Hat Developer</title>
      <link>https://developers.redhat.com/articles/2022/03/21/hello-podman-using-net</link>
      <description>The Docker.DotNet library lets .NET programs control containers using Podman or Docker. This tutorial shows you how it&amp;#39;s done.</description>
      <author> (Tom Deseyn)</author>
      <guid>https://developers.redhat.com/articles/2022/03/21/hello-podman-using-net</guid>
      <pubDate>Mon, 21 Mar 2022 10:02:04 GMT</pubDate>
    </item>
  </channel>
</rss>