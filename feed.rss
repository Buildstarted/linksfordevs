<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>Copying is the way design works</title>
      <link>https://matthewstrom.com/writing/copying/</link>
      <description>What exists in the space between riffing and ripping</description>
      <author> ()</author>
      <guid>https://matthewstrom.com/writing/copying/</guid>
      <pubDate>Tue, 23 Jul 2024 01:01:00 GMT</pubDate>
    </item>
    <item>
      <title>President Venn Diagram</title>
      <link>https://xkcd.com/2962/</link>
      <description></description>
      <author> (About)</author>
      <guid>https://xkcd.com/2962/</guid>
      <pubDate>Tue, 23 Jul 2024 00:01:00 GMT</pubDate>
    </item>
    <item>
      <title>Differentiating rate limits in Apache APISIX</title>
      <link>https://blog.frankel.ch/different-rate-limits-apisix/</link>
      <description>In my talk Evolving your APIs, I mention that an API Gateways is a Reverse Proxy &amp;#39;on steroids&amp;#39;. One key difference between the former and the latter is that the API Gateway is not unfriendly to business logic. The poster child is rate-limiting.   Rate-limiting is an age-old Reverse Proxy feature focused on protecting against DDoS attacks. It treats all clients the same and is purely technical. In this day and age, most API providers offer different subscription tiers; the higher the tier, the hig</description>
      <author> (Nicolas Fr&amp;#228;nkel)</author>
      <guid>https://blog.frankel.ch/different-rate-limits-apisix/</guid>
      <pubDate>Mon, 22 Jul 2024 23:01:24 GMT</pubDate>
    </item>
    <item>
      <title>Mapping symbols: rethinking for efficiency</title>
      <link>https://maskray.me/blog/2024-07-21-mapping-symbols-rethinking-for-efficiency</link>
      <description>In object files, certain code patterns embed data within instructions or transitions occur between instruction sets. This can create hurdles for disassemblers, which might misinterpret data as code, r</description>
      <author> (MaskRay)</author>
      <guid>https://maskray.me/blog/2024-07-21-mapping-symbols-rethinking-for-efficiency</guid>
      <pubDate>Mon, 22 Jul 2024 23:01:24 GMT</pubDate>
    </item>
    <item>
      <title>Quantifying Prospective Jobs</title>
      <link>https://mordenstar.com/blog/measuring-job-satisfaction</link>
      <description>This article explores creating a means of evaluating new job opportunities based on four key factors - Meaning, Knowledge, People, and Compensation.</description>
      <author> (Shaun Pedicini)</author>
      <guid>https://mordenstar.com/blog/measuring-job-satisfaction</guid>
      <pubDate>Mon, 22 Jul 2024 23:01:23 GMT</pubDate>
    </item>
    <item>
      <title>Brr Wants A Job – brr</title>
      <link>https://brr.fyi/posts/brr-wants-a-job</link>
      <description>8 months post-ice, it&amp;#39;s time for something new!</description>
      <author> (brr)</author>
      <guid>https://brr.fyi/posts/brr-wants-a-job</guid>
      <pubDate>Mon, 22 Jul 2024 23:01:23 GMT</pubDate>
    </item>
    <item>
      <title>On the CrowdStrike Incident</title>
      <link>https://thezvi.wordpress.com/2024/07/22/on-the-crowdstrike-incident/</link>
      <description>Things went very wrong on Friday. A bugged CrowdStrike update temporarily bricked quite a lot of computers, bringing down such fun things as airlines, hospitals and 911 services. It was serious out…</description>
      <author> (Posted on)</author>
      <guid>https://thezvi.wordpress.com/2024/07/22/on-the-crowdstrike-incident/</guid>
      <pubDate>Mon, 22 Jul 2024 23:01:23 GMT</pubDate>
    </item>
    <item>
      <title>Killing long running queries in Postgres</title>
      <link>https://www.sheshbabu.com/posts/killing-long-running-queries-in-postgres/</link>
      <description>Finding and terminating long running queries in Postgres</description>
      <author> (Sheshbabu Chinnakonda)</author>
      <guid>https://www.sheshbabu.com/posts/killing-long-running-queries-in-postgres/</guid>
      <pubDate>Mon, 22 Jul 2024 23:01:23 GMT</pubDate>
    </item>
    <item>
      <title>How not to use box shadows</title>
      <link>https://dgerrells.com/blog/how-not-to-use-box-shadows?continueFlag=e0c3df0ed8bf743a01d0afb946521af7</link>
      <description>So you think you know box shadows huh? I bet you didn&amp;#39;t know they could do this.</description>
      <author> ()</author>
      <guid>https://dgerrells.com/blog/how-not-to-use-box-shadows?continueFlag=e0c3df0ed8bf743a01d0afb946521af7</guid>
      <pubDate>Mon, 22 Jul 2024 23:01:22 GMT</pubDate>
    </item>
    <item>
      <title>BitBuilt - Giving Life to Old Consoles</title>
      <link>https://bitbuilt.net/forums/index.php?threads%2Fkawaii.6474%2F=</link>
      <description />
      <author> ()</author>
      <guid>https://bitbuilt.net/forums/index.php?threads%2Fkawaii.6474%2F=</guid>
      <pubDate>Mon, 22 Jul 2024 23:01:21 GMT</pubDate>
    </item>
    <item>
      <title>Simulating an ice sheet</title>
      <link>https://jelmar.eu/blog/simulating_ice</link>
      <description>Using the SICOPOLIS model, we simulate the Greenland ice sheet under a high-emissions scenario.</description>
      <author> ()</author>
      <guid>https://jelmar.eu/blog/simulating_ice</guid>
      <pubDate>Mon, 22 Jul 2024 23:01:21 GMT</pubDate>
    </item>
    <item>
      <title>After CrowdStrike, Programmers Deserve Consequences.</title>
      <link>https://mccue.dev/pages/7-20-24-programmers-deserve-consequences</link>
      <description>by:   Ethan McCue</description>
      <author> ()</author>
      <guid>https://mccue.dev/pages/7-20-24-programmers-deserve-consequences</guid>
      <pubDate>Mon, 22 Jul 2024 23:01:21 GMT</pubDate>
    </item>
    <item>
      <title>When Objects Are Not Enough</title>
      <link>https://www.tonysm.com/when-objects-are-not-enough/</link>
      <description>Alan Kay mentions in a talk that the Smalltalk don&amp;#39;t scale quite well to big teams and infrastructure. However, he had some ideas on how to make OOP scale.</description>
      <author> ()</author>
      <guid>https://www.tonysm.com/when-objects-are-not-enough/</guid>
      <pubDate>Mon, 22 Jul 2024 23:01:20 GMT</pubDate>
    </item>
    <item>
      <title>Engineering the world’s highest cited cat, Larry</title>
      <link>https://reeserichardson.blog/2024/07/18/engineering-the-worlds-highest-cited-cat-larry/</link>
      <description>A citation manipulation scheme so easy, even a cat can do it.</description>
      <author> (Reese Richardson)</author>
      <guid>https://reeserichardson.blog/2024/07/18/engineering-the-worlds-highest-cited-cat-larry/</guid>
      <pubDate>Mon, 22 Jul 2024 23:01:20 GMT</pubDate>
    </item>
    <item>
      <title>Baking An Open Source Cake</title>
      <link>https://xuanwo.io/2024/06-baking-an-open-source-cake/</link>
      <description>An infrastructure engineer, focused on distributed storage system</description>
      <author> (Xuanwo)</author>
      <guid>https://xuanwo.io/2024/06-baking-an-open-source-cake/</guid>
      <pubDate>Mon, 22 Jul 2024 23:01:20 GMT</pubDate>
    </item>
    <item>
      <title>How to find unused Prometheus metrics using mimirtool</title>
      <link>https://0xdc.me/blog/how-to-find-unused-prometheus-metrics-using-mimirtool/</link>
      <description>In this article, I will explain how I used mimirtool to identify which metrics were used on the platform, and which wasn&amp;#39;t.</description>
      <author> ()</author>
      <guid>https://0xdc.me/blog/how-to-find-unused-prometheus-metrics-using-mimirtool/</guid>
      <pubDate>Mon, 22 Jul 2024 23:01:19 GMT</pubDate>
    </item>
    <item>
      <title>What’s the point? BigDecimal in review</title>
      <link>https://dmiller.github.io/clojure-clr-next/general/2024/07/21/whats-the-point.html</link>
      <description>More to the point: Where’s the point? Recently I had to dig into the BigDecimal implementation to fix a reported bug. Every time I have to look at the BigDecimal code, it is a journey of rediscovery. I’m going to write down a few things to save me some time in the future.</description>
      <author> ()</author>
      <guid>https://dmiller.github.io/clojure-clr-next/general/2024/07/21/whats-the-point.html</guid>
      <pubDate>Mon, 22 Jul 2024 23:01:19 GMT</pubDate>
    </item>
    <item>
      <title>Share specs, Not execution</title>
      <link>https://prashamhtrivedi.in/share-specs-not-execution/</link>
      <description>There should be a clear rule: Share the specs, not the execution. This post tales the tale of why this is important and how two tools, Swagger and Postman, can work with this rule.</description>
      <author> ()</author>
      <guid>https://prashamhtrivedi.in/share-specs-not-execution/</guid>
      <pubDate>Mon, 22 Jul 2024 23:01:19 GMT</pubDate>
    </item>
    <item>
      <title>Prakhar Gupta</title>
      <link>https://www.softwaredesign.ing/blog/why-technical-cofounders-reject-you</link>
      <description>Software Engineer, LITM</description>
      <author> (Prakhar Gupta)</author>
      <guid>https://www.softwaredesign.ing/blog/why-technical-cofounders-reject-you</guid>
      <pubDate>Mon, 22 Jul 2024 23:01:19 GMT</pubDate>
    </item>
    <item>
      <title>Fixing a Protel Payphone Part 2: Installing ExpressNet</title>
      <link>https://philtel.org/2024/07/07/fixing-a-protel-pt2-xnet.html</link>
      <description>This post is a continuation in a series, “Fixing a Protel Payphone.” To view the previous installment, check out Fixing a Protel Payphone Part 1: Getting Dial Tone</description>
      <author> ()</author>
      <guid>https://philtel.org/2024/07/07/fixing-a-protel-pt2-xnet.html</guid>
      <pubDate>Mon, 22 Jul 2024 23:01:19 GMT</pubDate>
    </item>
    <item>
      <title>Sarvasv Kulpati</title>
      <link>https://sarvasvkulpati.com/attention-bubbles</link>
      <description>Jul 9, 2024</description>
      <author> ()</author>
      <guid>https://sarvasvkulpati.com/attention-bubbles</guid>
      <pubDate>Mon, 22 Jul 2024 23:01:19 GMT</pubDate>
    </item>
    <item>
      <title>Low Impact Website | Jason A. Heppler</title>
      <link>https://jasonheppler.org/low-impact/</link>
      <description></description>
      <author> (Jason A. Heppler)</author>
      <guid>https://jasonheppler.org/low-impact/</guid>
      <pubDate>Mon, 22 Jul 2024 23:01:19 GMT</pubDate>
    </item>
    <item>
      <title>How conditional breakpoints work &amp;#128034;</title>
      <link>https://werat.dev/blog/how-conditional-breakpoints-work/</link>
      <description>Conditional breakpoints are extremely useful, but everyone knows [citation needed] that they’re super slow, to the point where people stop using them. Visual Studio recently did some good improvements and @ryanjfleury still dunked on it for being too slow. But even raddbg takes ~2 seconds to execute 10000 iterations of a simple loop with conditional breakpoints inside. For comparison, the same loop without breakpoints takes less than 1ms. So why is it so damn slow?
Let’s explore how conditional breakpoints are typically implemented in modern debuggers, where the performance problems come from and what can be done to make things go fast.</description>
      <author> (Andy Hippo)</author>
      <guid>https://werat.dev/blog/how-conditional-breakpoints-work/</guid>
      <pubDate>Mon, 22 Jul 2024 23:01:19 GMT</pubDate>
    </item>
    <item>
      <title>Mastering Error Insights in .NET MAUI: Sentry vs. Firebase Crashlytics</title>
      <link>https://dev.to/vhugogarcia/mastering-error-insights-in-net-maui-sentry-vs-firebase-crashlytics-5aj3</link>
      <description>As the .NET MAUI ecosystem gains momentum, developers are keen to adopt robust error monitoring...</description>
      <author> ()</author>
      <guid>https://dev.to/vhugogarcia/mastering-error-insights-in-net-maui-sentry-vs-firebase-crashlytics-5aj3</guid>
      <pubDate>Mon, 22 Jul 2024 21:01:03 GMT</pubDate>
    </item>
    <item>
      <title>Add AI to Your .NET Apps Easily with Prompty - .NET Blog</title>
      <link>https://devblogs.microsoft.com/dotnet/add-ai-to-your-dotnet-apps-easily-with-prompty/</link>
      <description>Learn how to integrate AI into your .NET applications with Prompty, a powerful Visual Studio Code extension.</description>
      <author> (Bruno Capuano)</author>
      <guid>https://devblogs.microsoft.com/dotnet/add-ai-to-your-dotnet-apps-easily-with-prompty/</guid>
      <pubDate>Mon, 22 Jul 2024 19:00:59 GMT</pubDate>
    </item>
    <item>
      <title>No More Blue Fridays</title>
      <link>https://www.brendangregg.com/blog/2024-07-22/no-more-blue-fridays.html</link>
      <description>No More Blue Fridays: How eBPF is already being adopted to prevent kernel crashes.</description>
      <author> ()</author>
      <guid>https://www.brendangregg.com/blog/2024-07-22/no-more-blue-fridays.html</guid>
      <pubDate>Mon, 22 Jul 2024 17:00:55 GMT</pubDate>
    </item>
    <item>
      <title>Organizing the five creation dispositions of the Create&amp;#173;File function - The Old New Thing</title>
      <link>https://devblogs.microsoft.com/oldnewthing/20240722-00/?p=110026</link>
      <description>Six possibilities, but only five useful ones.</description>
      <author> (Raymond Chen)</author>
      <guid>https://devblogs.microsoft.com/oldnewthing/20240722-00/?p=110026</guid>
      <pubDate>Mon, 22 Jul 2024 14:01:03 GMT</pubDate>
    </item>
    <item>
      <title>We&amp;#39;re good, seriously</title>
      <link>https://forum.jellyfin.org/t-we-re-good-seriously</link>
      <description>This message was posted to our OpenCollective here. However, their page layout leaves a lot to be desired, with the post being very far down the page. So it is reproduced here for posterity. We have q</description>
      <author> (Project Leader)</author>
      <guid>https://forum.jellyfin.org/t-we-re-good-seriously</guid>
      <pubDate>Mon, 22 Jul 2024 12:01:00 GMT</pubDate>
    </item>
    <item>
      <title>GitHub - BurntSushi/jiff: A date-time library for Rust that encourages you to jump into the pit of success.</title>
      <link>https://github.com/BurntSushi/jiff</link>
      <description>A date-time library for Rust that encourages you to jump into the pit of success. - BurntSushi/jiff</description>
      <author> (BurntSushi)</author>
      <guid>https://github.com/BurntSushi/jiff</guid>
      <pubDate>Mon, 22 Jul 2024 12:00:59 GMT</pubDate>
    </item>
    <item>
      <title>The state machine in C# with async/await</title>
      <link>https://steven-giesel.com/blogPost/720a48fd-0abe-4c32-83ac-26926d501895</link>
      <description>You often here that the async/await keywords leads to a state machine. But what does that mean? Let&amp;#39;s discuss this with a simple example.
</description>
      <author> ()</author>
      <guid>https://steven-giesel.com/blogPost/720a48fd-0abe-4c32-83ac-26926d501895</guid>
      <pubDate>Mon, 22 Jul 2024 07:01:02 GMT</pubDate>
    </item>
    <item>
      <title>Composing Linq Queries
</title>
      <link>https://wildermuth.com/2024/07/20/composing-linq-queries/</link>
      <description>At one of my clients, I was showing him how to structure a complex Linq query. This came as a surprise to him and I thought it was worth a quick blog entry.
</description>
      <author> ()</author>
      <guid>https://wildermuth.com/2024/07/20/composing-linq-queries/</guid>
      <pubDate>Mon, 22 Jul 2024 06:01:10 GMT</pubDate>
    </item>
    <item>
      <title>Migrating .NET APIs with Obsolete Attribute</title>
      <link>https://www.compositional-it.com/news-blog/migrating-net-apis-with-obsolete-attribute/</link>
      <description>Creating APIs for consumers can be a challenging skill to master. We have to balance APIs that are flexible for reasonable changes, but not overly verbose or complicated in order to cater for all possibilities rather than focusing on the here-and-now. Sometimes, you&amp;#39;ll get it wrong and realise that you need to change the way…</description>
      <author> (By Isaac Abraham)</author>
      <guid>https://www.compositional-it.com/news-blog/migrating-net-apis-with-obsolete-attribute/</guid>
      <pubDate>Mon, 22 Jul 2024 06:01:10 GMT</pubDate>
    </item>
    <item>
      <title>ILSpy for macOS: First Public Beta Release</title>
      <link>https://avaloniaui.net/blog/ilspy-for-macos-first-public-beta-release</link>
      <description>Announcing the first public beta release of ILSpy for macOS, powered by Avalonia XPF. </description>
      <author> ()</author>
      <guid>https://avaloniaui.net/blog/ilspy-for-macos-first-public-beta-release</guid>
      <pubDate>Mon, 22 Jul 2024 06:01:09 GMT</pubDate>
    </item>
    <item>
      <title>ASP.NET8 using DataTables.net – Part4 – Multilingual</title>
      <link>https://www.codeproject.com/Articles/5385407/ASP-NET8-using-DataTables-net-Part4-Multilingual</link>
      <description>A practical guide to using jQuery DataTables.net component in Asp.Net 8 MVC application.</description>
      <author> (Mark Pelf)</author>
      <guid>https://www.codeproject.com/Articles/5385407/ASP-NET8-using-DataTables-net-Part4-Multilingual</guid>
      <pubDate>Mon, 22 Jul 2024 06:01:09 GMT</pubDate>
    </item>
    <item>
      <title>EF Core - The conversion of a datetime2 data type to a datetime data type resulted in an out-of-range value</title>
      <link>https://bartwullems.blogspot.com/2024/07/ef-core-conversion-of-datetime2-data.html</link>
      <description>Athough EF Core is a developer friendly Object-Relational Mapper (ORM), working with it isn&amp;#39;t without its challenges. One error that we enco...</description>
      <author> (Share)</author>
      <guid>https://bartwullems.blogspot.com/2024/07/ef-core-conversion-of-datetime2-data.html</guid>
      <pubDate>Mon, 22 Jul 2024 06:01:09 GMT</pubDate>
    </item>
    <item>
      <title>Array Grouping in JavaScript</title>
      <link>https://www.telerik.com/blogs/array-grouping-javascript</link>
      <description>Combining data into groups—like Object.groupBy and Map.groupBy in JavaScript—allows you to compute higher order datasets, like grouping employees by department.</description>
      <author> ()</author>
      <guid>https://www.telerik.com/blogs/array-grouping-javascript</guid>
      <pubDate>Mon, 22 Jul 2024 06:01:09 GMT</pubDate>
    </item>
    <item>
      <title>Auto-document dotnet CLI tool via dynamically generated markdown readme fragments</title>
      <link>https://www.cazzulino.com/auto-doc-cli.html</link>
      <description>Every time I create a new CLI tool, I face the challenge of keeping the project and package readme (for dotnet tools like dotnet-trx) up to date with the evolving tool itself. It’s annoying and repetitive (run with --help, copy-paste) and it’s not uncommon to end up with stale docs. Here’s one way to automate the whole thing so you can just focus on making your tool awesome. First, have your project emit the help to a text file, say help.md: &amp;amp;lt;Target Name=&amp;quot;RenderHelp&amp;quot; AfterTargets=&amp;quot;Build&amp;quot;&amp;amp;gt; &amp;amp;lt;WriteLinesToFile Lines=&amp;quot;```shell&amp;quot; Overwrite=&amp;quot;true&amp;quot; File=&amp;quot;help.md&amp;quot; /&amp;amp;gt; &amp;amp;lt;Exec Command=&amp;quot;dotnet run --no-build -- --help &amp;amp;amp;gt;&amp;amp;amp;gt; help.md&amp;quot; EnvironmentVariables=&amp;quot;NO_COLOR=true&amp;quot; /&amp;amp;gt; &amp;amp;lt;WriteLinesToFile...</description>
      <author> (Daniel Cazzulino)</author>
      <guid>https://www.cazzulino.com/auto-doc-cli.html</guid>
      <pubDate>Mon, 22 Jul 2024 06:01:08 GMT</pubDate>
    </item>
  </channel>
</rss>