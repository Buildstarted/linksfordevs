<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/feed.xml" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/feed.xml</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>AmigaVision</title>
      <link>https://amiga.vision/</link>
      <description>The ultimate Amiga games &amp; demo scene setup for MiSTer &amp; Pocket FPGAs, emulators, and real hardware. Open source, community driven. Formerly known as MegaAGS.</description>
      <category>gaming</category>
      <category>hardware</category>
      <guid>https://amiga.vision/</guid>
      <pubDate>Sun, 24 Aug 2025 21:02:10 GMT</pubDate>
    </item>
    <item>
      <title>Mariano Gappa's Blog</title>
      <link>https://marianogappa.github.io/software/2025/08/24/i-made-two-card-games-in-go/</link>
      <description>After 15 years as a software engineer, I realized I had never actually built and published a game.</description>
      <category>webasm</category>
      <category>gaming</category>
      <category>javascript</category>
      <category>git</category>
      <guid>https://marianogappa.github.io/software/2025/08/24/i-made-two-card-games-in-go/</guid>
      <pubDate>Sun, 24 Aug 2025 21:02:06 GMT</pubDate>
    </item>
    <item>
      <title>A German ISP tampered with their DNS - specifically to sabotage my website</title>
      <link>https://lina.sh/blog/telefonica-sabotages-me</link>
      <description>One of Germany's biggest ISPs changed how their DNS works, right after I exposed an organization that they‚Äôre part of.</description>
      <category>dns</category>
      <guid>https://lina.sh/blog/telefonica-sabotages-me</guid>
      <pubDate>Sun, 24 Aug 2025 13:02:01 GMT</pubDate>
    </item>
    <item>
      <title>how to build a coding agent: free workshop</title>
      <link>https://ghuntley.com/agent/</link>
      <description>It's not that hard to build a coding agent. 300 lines of code running in a loop with LLM tokens. You just keep throwing tokens at the loop, and then you've got yourself an agent.</description>
      <category>nodejs</category>
      <category>javascript</category>
      <category>ai</category>
      <category>vscode</category>
      <category>amazon</category>
      <guid>https://ghuntley.com/agent/</guid>
      <pubDate>Sun, 24 Aug 2025 13:01:56 GMT</pubDate>
    </item>
    <item>
      <title>What makes Claude Code so damn good (and how to recreate that magic in your agent)!?</title>
      <link>https://minusx.ai/blog/decoding-claude-code/</link>
      <description>Claude Code is the most delightful AI agent/workflow I have used so far.  Not only does it make targeted edits or vibe coding throwaway tools less annoying, ...</description>
      <author> (vivek)</author>
      <category>regex</category>
      <category>git</category>
      <category>javascript</category>
      <category>ai</category>
      <guid>https://minusx.ai/blog/decoding-claude-code/</guid>
      <pubDate>Sun, 24 Aug 2025 06:02:02 GMT</pubDate>
    </item>
    <item>
      <title>It‚Äôs not wrong that "ü§¶üèº‚Äç‚ôÇÔ∏è".length == 7</title>
      <link>https://hsivonen.fi/string-length/</link>
      <description>From time to time, someone shows that in JavaScript the .length of a string containing an emoji results in a number greater than 1 (typically 2) and then proceeds to the conclusion that haha JavaScript is so broken‚Äîand is rewarded with many likes. In this post, I will try to convince you that ridiculing JavaScript for this is less insightful than it first appears and that Swift‚Äôs approach to string length isn‚Äôt unambiguously the best one. Python 3‚Äôs approach is unambiguously the worst one, though.</description>
      <category>rust</category>
      <category>python</category>
      <category>encryption</category>
      <category>javascript</category>
      <guid>https://hsivonen.fi/string-length/</guid>
      <pubDate>Sun, 24 Aug 2025 02:01:55 GMT</pubDate>
    </item>
    <item>
      <title>Everyday Hacks to Practice American English</title>
      <link>https://aishwaryagoel.com/everyday-hacks-to-practice-american-english/</link>
      <description>Practical hacks for Indians to practice American English daily and sound clearer, more natural.</description>
      <category>audio</category>
      <category>marketing</category>
      <category>ai</category>
      <category>gaming</category>
      <category>youtube</category>
      <guid>https://aishwaryagoel.com/everyday-hacks-to-practice-american-english/</guid>
      <pubDate>Sun, 24 Aug 2025 00:03:25 GMT</pubDate>
    </item>
    <item>
      <title>Authoring binary files, using an assembler</title>
      <link>https://jvernay.fr/en/blog/authoring-binary-files/</link>
      <description>Publication: 2025-08-23</description>
      <category>regex</category>
      <category>compilers</category>
      <category>javascript</category>
      <guid>https://jvernay.fr/en/blog/authoring-binary-files/</guid>
      <pubDate>Sun, 24 Aug 2025 00:03:22 GMT</pubDate>
    </item>
    <item>
      <title>SurrealDB is sacrificing data durability to make benchmarks look better</title>
      <link>https://blog.cf8.gg/surrealdbs-ch/</link>
      <description>üö®TL;DR: If you are a SurrealDB user running any SurrealDB instance backed by the RocksDB or SurrealKV storage backends you MUST EXPLICITLY set SURREAL_SYNC_DATA=true in your environment variables otherwise your instance is NOT crash safe and can very easily corrupt.

If you're familiar with Rust or</description>
      <category>wiki</category>
      <category>sql</category>
      <category>rust</category>
      <category>marketing</category>
      <guid>https://blog.cf8.gg/surrealdbs-ch/</guid>
      <pubDate>Sun, 24 Aug 2025 00:03:16 GMT</pubDate>
    </item>
    <item>
      <title>Pedram Navid | I finally tried DSPy and now I get why everyone won't shut up about it</title>
      <link>https://pedramnavid.com/blog/dspy-part-one/</link>
      <description>DSPy is my new favorite tool for building LLM applications, and it should be yours too</description>
      <category>sql</category>
      <category>javascript</category>
      <category>marketing</category>
      <guid>https://pedramnavid.com/blog/dspy-part-one/</guid>
      <pubDate>Sun, 24 Aug 2025 00:03:13 GMT</pubDate>
    </item>
    <item>
      <title>How To Use Obsidian To Write Astro Markdown Content</title>
      <link>https://bryanhogan.com/blog/obsidian-astro-submodule</link>
      <description>How to use Obsidian to write Astro markdown content in a simple and intuitive way using GitHub submodules.</description>
      <category>2ndbrain</category>
      <category>visualstudio</category>
      <category>git</category>
      <category>nodejs</category>
      <category>vscode</category>
      <guid>https://bryanhogan.com/blog/obsidian-astro-submodule</guid>
      <pubDate>Sun, 24 Aug 2025 00:03:09 GMT</pubDate>
    </item>
    <item>
      <title>AUR Chaos malware: an analysis</title>
      <link>https://www.mh4ckt3mh4ckt1c4s.xyz/blog/aur-chaos-malware-analysis/</link>
      <description>What happened, and an investigation of the malware</description>
      <category>git</category>
      <category>dns</category>
      <category>linux</category>
      <category>python</category>
      <category>devops</category>
      <guid>https://www.mh4ckt3mh4ckt1c4s.xyz/blog/aur-chaos-malware-analysis/</guid>
      <pubDate>Sun, 24 Aug 2025 00:03:05 GMT</pubDate>
    </item>
    <item>
      <title>It's okay to solve a problem twice</title>
      <link>https://til.andrew-quinn.me/posts/it-s-okay-to-solve-a-problem-twice/</link>
      <description>Quoth
‚ÄúHow to Become a Hacker‚Äù:
2. No problem should ever have to be solved twice.
Creative brains are a valuable, limited resource. They shouldn't be wasted on re-inventing the wheel when there are so many fascinating new problems waiting out there.

Much more at the original post, including preemptive rebuttals to what
I‚Äôm about to describe. This post is entirely about cataloguing my own
error.
I took this maxim, perhaps, a little too close to heart when I was
starting out as a software guy, 15-odd years ago. This is my
apology to past me. Past me, I apologize.</description>
      <category>python</category>
      <guid>https://til.andrew-quinn.me/posts/it-s-okay-to-solve-a-problem-twice/</guid>
      <pubDate>Sun, 24 Aug 2025 00:03:01 GMT</pubDate>
    </item>
    <item>
      <title>Twenty Years of Blog Posts</title>
      <link>https://www.charlespetzold.com/blog/2025/08/Twenty-Years-of-Blog-Posts.html</link>
      <description>Today is the 20th anniversary of this blog. I posted my first entry 20 years ago as I was finishing my book Programming Microsoft Windows Forms. Since then, I‚Äôve posted over 900 entries, all of which are still online.</description>
      <category>javascript</category>
      <category>html</category>
      <guid>https://www.charlespetzold.com/blog/2025/08/Twenty-Years-of-Blog-Posts.html</guid>
      <pubDate>Sun, 24 Aug 2025 00:02:57 GMT</pubDate>
    </item>
    <item>
      <title>Most Externalities are Solved with Technology, Not Coordination</title>
      <link>https://www.maximum-progress.com/p/most-externalities-are-solved-with</link>
      <description>Econ 101 Needs More Progress Studies</description>
      <category>health</category>
      <guid>https://www.maximum-progress.com/p/most-externalities-are-solved-with</guid>
      <pubDate>Sun, 24 Aug 2025 00:02:54 GMT</pubDate>
    </item>
    <item>
      <title>My year-long quest to debug a single TCP connection</title>
      <link>https://fdi.sk/posts/tcpinfo/</link>
      <description>How a persistent bug led me to write go-tcpinfo for kernel-level metrics.</description>
      <category>linux</category>
      <category>python</category>
      <category>containers</category>
      <guid>https://fdi.sk/posts/tcpinfo/</guid>
      <pubDate>Sun, 24 Aug 2025 00:02:50 GMT</pubDate>
    </item>
    <item>
      <title>Skymont in Gaming Workloads</title>
      <link>https://old.chipsandcheese.com/2025/08/20/skymont-in-gaming-workloads/</link>
      <description>E-Cores are central in Intel‚Äôs CPU strategy. Their small area footprint helps Intel achieve high multithreaded performance in a low area footprint. But E-Cores don‚Äôt derive their strength from numb‚Ä¶</description>
      <category>gaming</category>
      <category>hardware</category>
      <guid>https://old.chipsandcheese.com/2025/08/20/skymont-in-gaming-workloads/</guid>
      <pubDate>Sun, 24 Aug 2025 00:02:45 GMT</pubDate>
    </item>
    <item>
      <title>Materialized views are obviously useful</title>
      <link>https://sophiebits.com/2025/08/22/materialized-views-are-obviously-useful</link>
      <description>As programmers we spend a lot of time shuttling data back and forth between different systems and transforming it from one format to another. Sometimes it gets pretty miserable!</description>
      <author> (Sophie Alpert)</author>
      <category>sql</category>
      <category>cloud</category>
      <category>nodejs</category>
      <guid>https://sophiebits.com/2025/08/22/materialized-views-are-obviously-useful</guid>
      <pubDate>Sun, 24 Aug 2025 00:02:41 GMT</pubDate>
    </item>
    <item>
      <title>ChatGPT 6 is a jerk</title>
      <link>https://jesseduffield.com/ChatGPT-6-is-a-jerk/</link>
      <description>You: Good morning ChatGPT 6! Nice to meet you.

</description>
      <category>ai</category>
      <guid>https://jesseduffield.com/ChatGPT-6-is-a-jerk/</guid>
      <pubDate>Sun, 24 Aug 2025 00:02:38 GMT</pubDate>
    </item>
    <item>
      <title>Coding is deciding</title>
      <link>https://benmccormick.org/2025/08/22/coding-is-deciding.html</link>
      <description>We often talk about computer programs purely as collections of ‚Äúcode‚Äù.  Lately I‚Äôve been thinking about it a bit differently: a computer program is the encoding of a huge series of nested decisions, made intentionally or otherwise.</description>
      <category>python</category>
      <category>ruby</category>
      <category>ai</category>
      <guid>https://benmccormick.org/2025/08/22/coding-is-deciding.html</guid>
      <pubDate>Sun, 24 Aug 2025 00:02:34 GMT</pubDate>
    </item>
    <item>
      <title>Little Green Viper Software Development LLC</title>
      <link>https://littlegreenviper.com/testing-harness-vs-unit/</link>
      <description>Software Development For People That Help People.</description>
      <category>math</category>
      <guid>https://littlegreenviper.com/testing-harness-vs-unit/</guid>
      <pubDate>Sun, 24 Aug 2025 00:02:31 GMT</pubDate>
    </item>
    <item>
      <title>There Has Never Been a Better Time to be a Junior Developer - And It Won't Last Forever</title>
      <link>https://aaronstannard.com/jr-developer/</link>
      <description>AI as Mentorship-as-a-Service</description>
      <author> (https://aaronstannard.com/about/)</author>
      <category>ai</category>
      <category>css</category>
      <category>python</category>
      <category>aspnet</category>
      <category>sql</category>
      <guid>https://aaronstannard.com/jr-developer/</guid>
      <pubDate>Sun, 24 Aug 2025 00:02:26 GMT</pubDate>
    </item>
    <item>
      <title>Shell we Nix?</title>
      <link>https://abdelrahman.sh/2025/03/shell-we-nix/</link>
      <description>Ever wanted a way to quickly &amp; temporarily install an amusing command-line tool that you read about on the interwebz?
I certainly needed something like that since forever. Every now and then I gotta compress a JPEG using imagemagick, format a markdown file using prettier, or demonstrate to my colleagues that [,,,].length is a valid JavaScript expression, while not having Node.js installed on my machine.
Second best thing I had was Homebrew. I‚Äôd brew install the tool, take it for a spin, and hopefully remember to brew uninstall it afterwards - or else it‚Äôll not only bloat my system, but also slow down brew upgrades even more for the forseable future until I factory-reset my machine next Spring cleaning.</description>
      <category>nodejs</category>
      <category>javascript</category>
      <guid>https://abdelrahman.sh/2025/03/shell-we-nix/</guid>
      <pubDate>Sun, 24 Aug 2025 00:02:22 GMT</pubDate>
    </item>
    <item>
      <title>Building a model of a model building ‚Äî Jerome Paulos</title>
      <link>https://jero.zone/posts/cbr-building</link>
      <description>I‚Äôm writing this in a building with 756 windows.</description>
      <category>2ndbrain</category>
      <category>math</category>
      <guid>https://jero.zone/posts/cbr-building</guid>
      <pubDate>Sun, 24 Aug 2025 00:02:18 GMT</pubDate>
    </item>
    <item>
      <title>(Train Time) Recurrence as a necessary condition for General Intelligence</title>
      <link>https://fchaubard.github.io/recurrence.html</link>
      <description>To get to AGI, we need an architecture that is "Turing Complete". And a necessary condition of an architecture to be turing complete is ‚Äúunbounded recurrence/iterations‚Äù. The program needs to be able to call itself as many times as it wants. LLMs / diffusion models are said to be ‚ÄúTuring Complete‚Äù [1]. However, this is only true at test time, NOT during training. Infinite recursion is not possible in just one foreward pass of the model as is done during training. To make this work at all, we need to teacher force explicitly the intermediary goal states (per time step) to achieve any amount of success (CoT for LLMs, and a bit denoised noisy input for diffusion). However, this is much more limiting than most people can comprehend. We train it this way and then cross our fingers and hope that the non-recurrent model can be called in a while true loop and will magically become turing complete.</description>
      <category>2ndbrain</category>
      <guid>https://fchaubard.github.io/recurrence.html</guid>
      <pubDate>Sun, 24 Aug 2025 00:02:15 GMT</pubDate>
    </item>
    <item>
      <title>The kids are alright</title>
      <link>https://www.bitecode.dev/p/the-kids-are-alright</link>
      <description>How can one without Git, swallow so many bytes?</description>
      <category>ai</category>
      <category>rust</category>
      <category>dns</category>
      <category>gaming</category>
      <category>git</category>
      <guid>https://www.bitecode.dev/p/the-kids-are-alright</guid>
      <pubDate>Sun, 24 Aug 2025 00:02:12 GMT</pubDate>
    </item>
    <item>
      <title>Naming Things: The Most Underrated Skill in Software Development ~ Andrea Canton</title>
      <link>https://andreacanton.dev/posts/2025-08-23-naming-things/</link>
      <description>Website of Andrea Canton a vegetarian fullstack developer based in Verona, Italy.</description>
      <category>ai</category>
      <category>sql</category>
      <guid>https://andreacanton.dev/posts/2025-08-23-naming-things/</guid>
      <pubDate>Sun, 24 Aug 2025 00:02:07 GMT</pubDate>
    </item>
  </channel>
</rss>