<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>How GitHub monopolized code hosting</title>
      <link>https://graphite.dev/blog/github-monopoly-on-code-hosting</link>
      <description>How GitHub became a version control monopoly</description>
      <author> (Written by)</author>
      <guid>https://graphite.dev/blog/github-monopoly-on-code-hosting</guid>
      <pubDate>Sat, 30 Mar 2024 17:01:00 GMT</pubDate>
    </item>
    <item>
      <title>Actionable Interview Tips – Dev Leader Weekly 37</title>
      <link>https://www.devleader.ca/2024/03/30/actionable-interview-tips-dev-leader-weekly-37/</link>
      <description>Welcome to another issue of Dev Leader Weekly! In this issue, I discuss the second of a 3-part series with a focus on actionable interview tips!</description>
      <author> (https://www.facebook.com/devleaderca)</author>
      <guid>https://www.devleader.ca/2024/03/30/actionable-interview-tips-dev-leader-weekly-37/</guid>
      <pubDate>Sat, 30 Mar 2024 14:01:03 GMT</pubDate>
    </item>
    <item>
      <title>Urgent Alert: Stealthy Backdoor Discovered in XZ Compression Utilities - Cyber Kendra</title>
      <link>https://www.cyberkendra.com/2024/03/major-linux-distributions-impacted-by.html</link>
      <description>Critical Backdoor Found in xz Data Compression Tool</description>
      <author> (Cyber Kendra)</author>
      <guid>https://www.cyberkendra.com/2024/03/major-linux-distributions-impacted-by.html</guid>
      <pubDate>Sat, 30 Mar 2024 12:00:59 GMT</pubDate>
    </item>
    <item>
      <title>We are under DDoS attack and we do nothing</title>
      <link>https://tableplus.com/blog/2024/03/how-we-deal-with-ddos.html</link>
      <description>Modern, native SQL client with intuitive GUI tools to create, access, query &amp;amp; edit multiple relational databases: MySQL, PostgreSQL, SQLite, Microsoft SQL Server, Amazon Redshift, MariaDB, CockroachDB, Vertica, and Redis.</description>
      <author> (Huy Pham)</author>
      <guid>https://tableplus.com/blog/2024/03/how-we-deal-with-ddos.html</guid>
      <pubDate>Sat, 30 Mar 2024 12:00:59 GMT</pubDate>
    </item>
    <item>
      <title>My list of challenging software projects some programmers should try</title>
      <link>https://www.andreinc.net/2024/03/28/programming-projects-ideas</link>
      <description>Unsolicited advice</description>
      <author> (Andrei Ciobanu)</author>
      <guid>https://www.andreinc.net/2024/03/28/programming-projects-ideas</guid>
      <pubDate>Sat, 30 Mar 2024 02:01:02 GMT</pubDate>
    </item>
    <item>
      <title>Horizontally Scaling ASP.NET Core APIs With YARP Load Balancing</title>
      <link>https://www.milanjovanovic.tech/blog/horizontally-scaling-aspnetcore-apis-with-yarp-load-balancing</link>
      <description>When a single server reaches its limits, performance degrades, leading to slow response times, errors, or complete downtime. We&amp;#39;ll dive into load balancing, why it matters, and how YARP simplifies the process for .NET applications.</description>
      <author> (Milan Jovanović)</author>
      <guid>https://www.milanjovanovic.tech/blog/horizontally-scaling-aspnetcore-apis-with-yarp-load-balancing</guid>
      <pubDate>Sat, 30 Mar 2024 01:00:34 GMT</pubDate>
    </item>
    <item>
      <title>Architecture Pitfalls: Don’t use your ORM entities for everything — embrace the SQL!</title>
      <link>https://www.blackparrotlabs.io/post/architecture-pitfalls-dont-use-your-orm-entities-for-everything</link>
      <description>Black Parrot Labs Blog: When designing an application with JPA/Hibernate, I’ve encountered a common pattern that suggests developers should channel as many of their interactions as possible with their database via their persistence entities and ORM, avoiding writing SQL&amp;#160;at all costs.&amp;#160;‍This mostly seems to stem from a belief that this approach will maximise model flexibility and database portability. Sometimes it&amp;#39;s also an aversion to learning SQL.&amp;#160;‍There’s a grain of truth to the portability argument, but in practice, the downsides of restricting yourself so significantly is usually a bad decision for a few reasons that I&amp;#39;ll outline in this post.</description>
      <author> (Marc Savy)</author>
      <guid>https://www.blackparrotlabs.io/post/architecture-pitfalls-dont-use-your-orm-entities-for-everything</guid>
      <pubDate>Fri, 29 Mar 2024 23:02:08 GMT</pubDate>
    </item>
  </channel>
</rss>