<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>Tapping into Database Views with EF Core: Reverse Engineering Made Easy - Chris Woody Woodruff</title>
      <link>https://woodruff.dev/tapping-into-database-views-with-ef-core-reverse-engineering-made-easy/</link>
      <description>Not all database tables are created equal! Sometimes, you don’t need direct access to raw data—you need a refined, read-only version that makes querying easier. That’s where database views come in!</description>
      <author> ()</author>
      <guid>https://woodruff.dev/tapping-into-database-views-with-ef-core-reverse-engineering-made-easy/</guid>
      <pubDate>Mon, 10 Feb 2025 14:01:57 GMT</pubDate>
    </item>
    <item>
      <title>Deep dive into LLMs like ChatGPT by Andrej Karpathy (TL;DR)</title>
      <link>https://anfalmushtaq.com/articles/deep-dive-into-llms-like-chatgpt-tldr</link>
      <description>A TL;DR version of Andrej Karpathy&amp;#39;s &amp;quot;Deep dive into LLMs like ChatGPT&amp;quot; video.</description>
      <author> ()</author>
      <guid>https://anfalmushtaq.com/articles/deep-dive-into-llms-like-chatgpt-tldr</guid>
      <pubDate>Mon, 10 Feb 2025 13:01:53 GMT</pubDate>
    </item>
    <item>
      <title>M: Grab Bag 4 (Category Compilation) #18～#24</title>
      <link>https://youtube.com/watch?v=mQ00_aOCvX4</link>
      <description>In Category M: Grab Bag, you never know what you&amp;#39;re going to get. Here, we delve into topics that don&amp;#39;t quite fit neatly into the other categories—though the conversations still largely revolve around games. Check it out and see what you think!

[Index]
0:00 Opening
0:11 M-18 The Team Behind Super Smash Bros. Brawl
6:44 M-19 Guidelines
9:40 M-20 Show and Tell: Some Rare Belongings
14:21 M-21 Game &amp;amp; Watch Designs
18:42 M-22 Creators Change, Too
21:08 M-23 Long Ago, Numbers Were Used to Draw Pixel Art
25:14 M-24 Turning Gift-Giving Into a Game

[Playlist M: Grab Bag]
https://www.youtube.com/playlist?list=PLgKCjZ2WsVLS1xisCnw_DpTg52sy7upu_</description>
      <author> (Masahiro Sakurai on Creating Games)</author>
      <guid>https://youtube.com/watch?v=mQ00_aOCvX4</guid>
      <pubDate>Mon, 10 Feb 2025 12:01:33 GMT</pubDate>
    </item>
    <item>
      <title>To buy a Tesla Model 3, only to end up in hell</title>
      <link>https://www.myteslaexperience.com/2025-02-01/to-buy-a-tesla-mode-3-only-to-end-up-in-hell</link>
      <description>Four months ago I decided to buy a Tesla Model 3. What promised to be an exciting adventure in the world of electric cars, and some of the most advanced technology brought directly from Silicon Valley, ended up becoming a nightmare from which I still have not found my way out.</description>
      <author> ()</author>
      <guid>https://www.myteslaexperience.com/2025-02-01/to-buy-a-tesla-mode-3-only-to-end-up-in-hell</guid>
      <pubDate>Mon, 10 Feb 2025 11:01:41 GMT</pubDate>
    </item>
    <item>
      <title>Elementary Functions and NOT Following the IEEE 754 Floating-Point Standard — TRYING TO FIND THE OBVIOUS</title>
      <link>http://www.hlsl.co.uk/blog/2020/1/29/ieee754-is-not-followed</link>
      <description>The  IEEE-754  Standard for floating-point numbers was introduced initially in 1985 to solve the problem of diverse floating point implementations prevent code being portable and increase stability across platforms.  It has been widely adopted and revised over the last 30 years and if you have dealt</description>
      <author> ()</author>
      <guid>http://www.hlsl.co.uk/blog/2020/1/29/ieee754-is-not-followed</guid>
      <pubDate>Mon, 10 Feb 2025 10:01:37 GMT</pubDate>
    </item>
    <item>
      <title>Managed Postgres Instance: Neon</title>
      <link>https://steven-giesel.com/blogPost/e4720110-d276-4591-adf2-bea2351de6da</link>
      <description>A contributor for this blog was recently filing a Pull Request to support Postgres. As I didn&amp;#39;t want to run that thing locally to test, I needed a cloud service. That is why I tried neon.
</description>
      <author> ()</author>
      <guid>https://steven-giesel.com/blogPost/e4720110-d276-4591-adf2-bea2351de6da</guid>
      <pubDate>Mon, 10 Feb 2025 05:02:13 GMT</pubDate>
    </item>
    <item>
      <title>LIMO: Less is More for Reasoning</title>
      <link>https://arxiv.org/abs/2502.03387</link>
      <description>We present a fundamental discovery that challenges our understanding of how complex reasoning emerges in large language models. While conventional wisdom suggests that sophisticated reasoning tasks demand extensive training data (&amp;gt;100,000 examples), we demonstrate that complex mathematical reasoning abilities can be effectively elicited with surprisingly few examples. Through comprehensive experiments, our proposed model LIMO demonstrates unprecedented performance in mathematical reasoning. With merely 817 curated training samples, LIMO achieves 57.1% accuracy on AIME and 94.8% on MATH, improving from previous SFT-based models&amp;#39; 6.5% and 59.2% respectively, while only using 1% of the training data required by previous approaches. LIMO demonstrates exceptional out-of-distribution generalization, achieving 40.5% absolute improvement across 10 diverse benchmarks, outperforming models trained on 100x more data, challenging the notion that SFT leads to memorization rather than generalization. Based on these results, we propose the Less-Is-More Reasoning Hypothesis (LIMO Hypothesis): In foundation models where domain knowledge has been comprehensively encoded during pre-training, sophisticated reasoning capabilities can emerge through minimal but precisely orchestrated demonstrations of cognitive processes. This hypothesis posits that the elicitation threshold for complex reasoning is determined by two key factors: (1) the completeness of the model&amp;#39;s encoded knowledge foundation during pre-training, and (2) the effectiveness of post-training examples as &amp;quot;cognitive templates&amp;quot; that show the model how to utilize its knowledge base to solve complex reasoning tasks. To facilitate reproducibility and future research in data-efficient reasoning, we release LIMO as a comprehensive open-source suite at https://github.com/GAIR-NLP/LIMO.</description>
      <author> ()</author>
      <guid>https://arxiv.org/abs/2502.03387</guid>
      <pubDate>Mon, 10 Feb 2025 04:01:46 GMT</pubDate>
    </item>
    <item>
      <title>Why Blog If Nobody Reads It?</title>
      <link>https://andysblog.uk/why-blog-if-nobody-reads-it/</link>
      <description>What&amp;#39;s the point of blogging?</description>
      <author> ()</author>
      <guid>https://andysblog.uk/why-blog-if-nobody-reads-it/</guid>
      <pubDate>Mon, 10 Feb 2025 02:01:43 GMT</pubDate>
    </item>
    <item>
      <title>Scaling with PostgreSQL without boiling the ocean</title>
      <link>https://www.shayon.dev/post/2025/40/scaling-with-postgresql-without-boiling-the-ocean/</link>
      <description>Practical scaling strategies for application developers who don&amp;#39;t have a dedicated database team</description>
      <author> ()</author>
      <guid>https://www.shayon.dev/post/2025/40/scaling-with-postgresql-without-boiling-the-ocean/</guid>
      <pubDate>Sun, 09 Feb 2025 23:02:22 GMT</pubDate>
    </item>
    <item>
      <title>Using an LLM to revamp my site</title>
      <link>https://devinlogan.org/2025/02/09/jekyll.html</link>
      <description>This is a meandering post about my personal experience using Claude (just the LLM I happened to be casually using already – I have no affiliation and I also didn’t spend any amount of time trying to pick the “best” LLM for my project) to redesign my site and my broader takeaways on using LLMs for technical projects like this.</description>
      <author> ()</author>
      <guid>https://devinlogan.org/2025/02/09/jekyll.html</guid>
      <pubDate>Sun, 09 Feb 2025 23:02:22 GMT</pubDate>
    </item>
    <item>
      <title>Using Regex to migrate from Fluent Assertions to XUnit Assertions</title>
      <link>https://ilovedotnet.org/blogs/using-regex-to-migrate-from-fluent-assertions-to-xunit-assertions/</link>
      <description>In this post I will teach you how to use regular expression to migrate from Fluent Assertions to XUnit Assertions. All with live working demo.</description>
      <author> ()</author>
      <guid>https://ilovedotnet.org/blogs/using-regex-to-migrate-from-fluent-assertions-to-xunit-assertions/</guid>
      <pubDate>Sun, 09 Feb 2025 23:02:22 GMT</pubDate>
    </item>
    <item>
      <title>Password Math</title>
      <link>https://www.charlespetzold.com/blog/2025/02/Password-Math.html</link>
      <description>A friend from my PC Magazine days recently posted on Facebook a little mathematics anomaly that he encountered while trying to figure out the number of possible passwords under certain conditions. He began with the stipulation that a four-character password had to be constructed from characters from each of four groups: 26 uppercase letters (which I’ll abbreviate as U), 26 lowercase letters (L), 10 numeric digits (N), and 18 special characters (S), for a total of 80.</description>
      <author> ()</author>
      <guid>https://www.charlespetzold.com/blog/2025/02/Password-Math.html</guid>
      <pubDate>Sun, 09 Feb 2025 23:02:21 GMT</pubDate>
    </item>
    <item>
      <title>Fixing Europe&amp;#39;s broken patent system.</title>
      <link>https://josef.cn/blog/europe-patent-reform</link>
      <description>How to Fight Innovation&amp;#39;s Silent Killer | High costs, no flexibility, and lost ideas. Here’s how simple reforms can fix it. By Josef Chen</description>
      <author> ()</author>
      <guid>https://josef.cn/blog/europe-patent-reform</guid>
      <pubDate>Sun, 09 Feb 2025 23:02:21 GMT</pubDate>
    </item>
    <item>
      <title>7-langs-in-12-months</title>
      <link>https://mode80.github.io/7-langs-in-12-months.html</link>
      <description>I began last year with a goal to really understand machine learning. I feel utterly lucky to be alive at a time when software is taking its first tentative steps into the realm of intelligence, and I want front row seats to this historic event. Once this has occurred, computers will speak my language. But to see it unfold, I must learn to speak theirs...</description>
      <author> ()</author>
      <guid>https://mode80.github.io/7-langs-in-12-months.html</guid>
      <pubDate>Sun, 09 Feb 2025 23:02:21 GMT</pubDate>
    </item>
    <item>
      <title>What I&amp;#39;ve learned from a year of CTFs</title>
      <link>https://cqql.site/ctf/what_ive_learned.html</link>
      <description>Home</description>
      <author> ()</author>
      <guid>https://cqql.site/ctf/what_ive_learned.html</guid>
      <pubDate>Sun, 09 Feb 2025 23:02:21 GMT</pubDate>
    </item>
    <item>
      <title>Getting the KIM-1 to talk to my Mac</title>
      <link>https://blog.jgc.org/2025/02/getting-kim-1-to-talk-to-my-mac.html</link>
      <description>I&amp;#39;ve written before about my 1976 KIM-1  and code I wrote  for a similar one long ago. But I hadn&amp;#39;t done much with the KIM-1 and strongly be...</description>
      <author> ()</author>
      <guid>https://blog.jgc.org/2025/02/getting-kim-1-to-talk-to-my-mac.html</guid>
      <pubDate>Sun, 09 Feb 2025 23:02:21 GMT</pubDate>
    </item>
    <item>
      <title> Surface-Stable Fractal Dither on Playdate &amp;#183;  Aras&amp;#39; website</title>
      <link>https://aras-p.info/blog/2025/02/09/Surface-Stable-Fractal-Dither-on-Playdate/</link>
      <description>Rune Skovbo Johansen has a really sweet Surface-Stable Fractal Dithering
technique, where the dither dots “stick” to 3D surfaces, yet the dot density adapts to the view distance and zoom
level.</description>
      <author> ()</author>
      <guid>https://aras-p.info/blog/2025/02/09/Surface-Stable-Fractal-Dither-on-Playdate/</guid>
      <pubDate>Sun, 09 Feb 2025 23:02:20 GMT</pubDate>
    </item>
    <item>
      <title>Aaron&amp;#39;s Blog</title>
      <link>https://aaron-blog.onrender.com/post/the-age-of-llms</link>
      <description>2/9/20251 mins read</description>
      <author> ()</author>
      <guid>https://aaron-blog.onrender.com/post/the-age-of-llms</guid>
      <pubDate>Sun, 09 Feb 2025 23:02:20 GMT</pubDate>
    </item>
    <item>
      <title>Why I&amp;#39;m Excited About Nostr</title>
      <link>https://mylessnider.com/articles/why-im-excited-about-nostr</link>
      <description>Social media as it was meant to be. </description>
      <author> ()</author>
      <guid>https://mylessnider.com/articles/why-im-excited-about-nostr</guid>
      <pubDate>Sun, 09 Feb 2025 23:02:20 GMT</pubDate>
    </item>
    <item>
      <title>Building a Cross-Chain Bridge</title>
      <link>https://blog.anirudha.dev/building-a-cross-chain-bridge</link>
      <description>How to build a decentralised asset bridge</description>
      <author> (https://hashnode.com/@anirudha)</author>
      <guid>https://blog.anirudha.dev/building-a-cross-chain-bridge</guid>
      <pubDate>Sun, 09 Feb 2025 23:02:19 GMT</pubDate>
    </item>
    <item>
      <title>Let constraints drive consistency</title>
      <link>https://dimamik.com/posts/general/let_constraints_drive_consistency/</link>
      <description>Best practices, derived from my own experience, that help us to enforce data consistency in a large production database (PostgreSQL and Ecto).</description>
      <author> ()</author>
      <guid>https://dimamik.com/posts/general/let_constraints_drive_consistency/</guid>
      <pubDate>Sun, 09 Feb 2025 23:02:19 GMT</pubDate>
    </item>
    <item>
      <title>Spec-driven Vibe-coding</title>
      <link>https://vivekhaldar.com/articles/spec-driven-vibe-coding/</link>
      <description>Giving a name to an amorphous new thing is a powerful act. And that’s what Karpathy did, via tweet:

There’s a new kind of coding I call “vibe coding”, where you fully give in to the vibes, embrace exponentials, and forget that the code even exists. It’s possible because the LLMs (e.g. Cursor Composer w Sonnet) are getting too good. Also I just talk to Composer with SuperWhisper so I barely even touch the keyboard. I ask for the dumbest things like “decrease the padding on the sidebar by half” because I’m too lazy to find it. I “Accept All” always, I don’t read the diffs anymore. When I get error messages I just copy paste them in with no comment, usually that fixes it. The code grows beyond my usual comprehension, I’d have to really read through it for a while. Sometimes the LLMs can’t fix a bug so I just work around it or ask for random changes until it goes away. It’s not too bad for throwaway weekend projects, but still quite amusing. I’m building a project or webapp, but it’s not really coding - I just see stuff, say stuff, run stuff, and copy paste stuff, and it mostly works.</description>
      <author> ()</author>
      <guid>https://vivekhaldar.com/articles/spec-driven-vibe-coding/</guid>
      <pubDate>Sun, 09 Feb 2025 23:02:18 GMT</pubDate>
    </item>
    <item>
      <title>OpenAI&amp;#39;s First Fear - its daniel johns</title>
      <link>https://itsdanieljohns.com/blog/openai-first-fear/</link>
      <description>An exploration of how OpenAI’s fear of public perception led to hesitant decisions, branding confusion, and the importance of bold innovation.</description>
      <author> ()</author>
      <guid>https://itsdanieljohns.com/blog/openai-first-fear/</guid>
      <pubDate>Sun, 09 Feb 2025 23:02:18 GMT</pubDate>
    </item>
    <item>
      <title>How I code with LLMs these days</title>
      <link>https://www.phillipcarter.dev/posts/coding-with-llms</link>
      <description>Practical tips for developers looking to use AI coding assistants</description>
      <author> ()</author>
      <guid>https://www.phillipcarter.dev/posts/coding-with-llms</guid>
      <pubDate>Sun, 09 Feb 2025 23:02:16 GMT</pubDate>
    </item>
    <item>
      <title>computer graphics, mathematics, shaders, fractals, demoscene and more</title>
      <link>https://iquilezles.org/articles/gpuconditionals/</link>
      <description>Tutorials and articles of Inigo Quilez on computer graphics, fractals, demoscene, shaders and more.</description>
      <author> ()</author>
      <guid>https://iquilezles.org/articles/gpuconditionals/</guid>
      <pubDate>Sun, 09 Feb 2025 21:01:55 GMT</pubDate>
    </item>
  </channel>
</rss>