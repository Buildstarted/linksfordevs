<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/feed.xml" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/feed.xml</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>Tips for Improving API Performance in ASP.NET Core</title>
      <link>https://dev.to/this-is-learning/tips-for-improving-api-performance-in-aspnet-core-n4o</link>
      <description>APIs are the backbone of modern applications, but even the cleanest code can drag if performance...</description>
      <guid>https://dev.to/this-is-learning/tips-for-improving-api-performance-in-aspnet-core-n4o</guid>
      <pubDate>Sun, 01 Jun 2025 21:02:14 GMT</pubDate>
    </item>
    <item>
      <title>Root Shell on Credit Card Terminal</title>
      <link>https://stefan-gloor.ch/yomani-hack</link>
      <description>In this project, I started to reverse engineer payment card
        terminals because they seemed to be an interesting target for security
        research, given the high stakes involved. Although I initially didn’t
        knew much about this industry, I did expect a ton of security features
        and a very security-hardened device. And to some degree, this was also
        correct.</description>
      <guid>https://stefan-gloor.ch/yomani-hack</guid>
      <pubDate>Sun, 01 Jun 2025 20:02:20 GMT</pubDate>
    </item>
    <item>
      <title>Figma Slides is a Beautiful Disaster</title>
      <link>https://allenpike.com/2025/figma-slides-beautiful-disaster</link>
      <description>Some highlights and lowlights.</description>
      <guid>https://allenpike.com/2025/figma-slides-beautiful-disaster</guid>
      <pubDate>Sun, 01 Jun 2025 17:02:13 GMT</pubDate>
    </item>
    <item>
      <title>Learn to Build an AI to Play Tempest Step by Step</title>
      <link>https://youtube.com/watch?v=tM3j_qjTPXg</link>
      <description>Dave takes you through the process of building a complete AI to play the classic vector arcade game, Tempest.   Free Sample of my Book on the Spectrum: https://amzn.to/3zBinWM

Check out ShopTalk, our weekly podcast, every Friday!
https://www.youtube.com/@davepl

Follow me on X: https://x.com/davepl1968
Facebook: https://www.facebook.com/davepl

Github code for the Tempest AI: https://github.com/davepl/tempest_ai

Check out Code Bullet, my inspiration for starting this project, and a great channel!
https://www.youtube.com/@UC0e3QhIYukixgh5VVpKHH9Q</description>
      <author> (Dave's Garage)</author>
      <guid>https://youtube.com/watch?v=tM3j_qjTPXg</guid>
      <pubDate>Sun, 01 Jun 2025 15:02:12 GMT</pubDate>
    </item>
    <item>
      <title>What is 32-bit Float Recording? | TASCAM | International Website</title>
      <link>https://tascam.jp/int/feature/32-bit_float</link>
      <description>Digital recording technology has come a long way, and at the forefront of recording tech you'll find 32- bit floating point recorders.</description>
      <guid>https://tascam.jp/int/feature/32-bit_float</guid>
      <pubDate>Sun, 01 Jun 2025 00:02:32 GMT</pubDate>
    </item>
    <item>
      <title>SCP-3434: Istanbul Taxi Superorganism</title>
      <link>https://solmaz.io/log/2025/05/31/scp-3434/</link>
      <description>Item #: SCP-3434</description>
      <guid>https://solmaz.io/log/2025/05/31/scp-3434/</guid>
      <pubDate>Sun, 01 Jun 2025 00:02:32 GMT</pubDate>
    </item>
    <item>
      <title>How to store data on paper?</title>
      <link>https://www.monperrus.net/martin/store-data-paper</link>
      <description>How to print my voice? How to put music on paper? How to print an executable program? All this boils down to storing digital data on paper. This is also called paper data storage. Arrived in this domain from poetry, I’ve been investigating the area for some time. Here is what I found.</description>
      <guid>https://www.monperrus.net/martin/store-data-paper</guid>
      <pubDate>Sun, 01 Jun 2025 00:02:31 GMT</pubDate>
    </item>
    <item>
      <title>Unexpected Gotchas in Making a Game Deterministic</title>
      <link>https://www.jfgeyelin.com/2025/05/unexpected-gotchas-in-making-game.html</link>
      <description>When aiming for a fully deterministic program, it is common knowledge that you have to deterministically seed your random number generators,...</description>
      <guid>https://www.jfgeyelin.com/2025/05/unexpected-gotchas-in-making-game.html</guid>
      <pubDate>Sun, 01 Jun 2025 00:02:30 GMT</pubDate>
    </item>
    <item>
      <title>Minimum Viable Curiousity</title>
      <link>https://randsinrepose.com/archives/minimum-viable-curiousity/</link>
      <description>I was in the city a few weeks ago and exclusively used Waymo for the entire trip. My biggest complaint? I needed to walk four minutes to a pick-up spot. Other than that, the car just showed up, traversed San Francisco streets easily, and the cost was reasonable1.  Sitting in the back seat watching t</description>
      <guid>https://randsinrepose.com/archives/minimum-viable-curiousity/</guid>
      <pubDate>Sun, 01 Jun 2025 00:02:30 GMT</pubDate>
    </item>
    <item>
      <title>Why I Switched to UTC and Never Looked Back</title>
      <link>https://timestripe.com/magazine/blog/timezone/</link>
      <description>A story about how switching all devices to UTC five years ago simplified time management across global schedules, offering a practical solution for remote workers and travelers to boost productivity.</description>
      <guid>https://timestripe.com/magazine/blog/timezone/</guid>
      <pubDate>Sun, 01 Jun 2025 00:02:29 GMT</pubDate>
    </item>
    <item>
      <title>Progressive JSON — overreacted</title>
      <link>https://overreacted.io/progressive-json/</link>
      <description>Why streaming isn't enough.</description>
      <guid>https://overreacted.io/progressive-json/</guid>
      <pubDate>Sun, 01 Jun 2025 00:02:29 GMT</pubDate>
    </item>
    <item>
      <title>Short alphanumeric pseudo random identifiers in Postgres</title>
      <link>https://andyatkinson.com/generating-short-alphanumeric-public-id-postgres</link>
      <description>Introduction In this post, we’ll cover a way to generate short, alphanumeric, pseudo random identifiers using native Postgres tactics.</description>
      <guid>https://andyatkinson.com/generating-short-alphanumeric-public-id-postgres</guid>
      <pubDate>Sun, 01 Jun 2025 00:02:29 GMT</pubDate>
    </item>
    <item>
      <title>Alexa, shame on you</title>
      <link>https://kg.dev/thoughts/alexa</link>
      <description>I don’t ask much of Alexa. I really don’t."Alexa, all lights on""Alexa, next song""Alexa, weather"And somehow, it still manages to baffle me with how poorly it performs. Five years ago, I saw this thing as magical. Somehow, it was able to take my voice from across the room, convert it into a command, and do what I wanted it to do most of the time. But times have changed.Today, we have large language models which can write hundreds of lines of working code, understand voice with near-perfect accuracy, and actually generate audio waves instead of just using text-to-speech. 4 years of incredible, mind-blowing advancements –&amp;nbsp;and Alexa hasn’t changed a bit.Here is something that happened this morning:"Alexa, play the previous song again""Here is a song you recently played"I don’t know how Alexa works under the hood. I’m sure it’s very complicated and not something that can be upgraded easily, but it’s down right embarrassing that in this day and age, Alexa can’t play the previous song about half the time I ask it to. It fails to turn on/off all the lights in my apartment maybe a third of the time. It randomly disconnects from my smart home devices. I’ve completely given up on trying to program a scene into it.I know I’m complaining a lot, but come on. We deserve better.Please, Amazon, fix Alexa.</description>
      <guid>https://kg.dev/thoughts/alexa</guid>
      <pubDate>Sun, 01 Jun 2025 00:02:29 GMT</pubDate>
    </item>
    <item>
      <title>Why agents are bad pair programmers</title>
      <link>https://justin.searls.co/posts/why-agents-are-bad-pair-programmers/</link>
      <description>LLM agents make bad pairs because they code faster than humans think.
I'll admit, I've had a lot of fun using GitHub Copilot's agent mode in VS Code this month.…</description>
      <author> (https://justin.searls.co/about)</author>
      <guid>https://justin.searls.co/posts/why-agents-are-bad-pair-programmers/</guid>
      <pubDate>Sun, 01 Jun 2025 00:02:29 GMT</pubDate>
    </item>
    <item>
      <title>Leaving Bluesky</title>
      <link>https://emilyliu.me/blog/leaving-bluesky</link>
      <description>At one of my first Bluesky team retreats, a colleage offhandedly commented, “These are the good ol' days.”
In early 2023, Bluesky had only a handful of users and a team of under 10 people, and I already knew he was right.</description>
      <guid>https://emilyliu.me/blog/leaving-bluesky</guid>
      <pubDate>Sun, 01 Jun 2025 00:02:29 GMT</pubDate>
    </item>
  </channel>
</rss>