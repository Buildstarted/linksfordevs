<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>Finding Symbols in Your C# Projects Using Roslyn</title>
      <link>https://www.codingwithcalvin.net/finding-symbols-in-your-c-projects-using-roslyn/</link>
      <description>From a Visual Studio extension, learn how to search and navigate to, a symbol in the currently loaded solution using Roslyn.</description>
      <author> (Calvin A. Allen)</author>
      <guid>https://www.codingwithcalvin.net/finding-symbols-in-your-c-projects-using-roslyn/</guid>
      <pubDate>Fri, 30 Jun 2023 18:02:01 GMT</pubDate>
    </item>
    <item>
      <title>.NET Languages PM and Friends Talk About F# | fsharpConf 2023</title>
      <link>https://youtube.com/watch?v=yhM0qq4aUbA</link>
      <description>Join Kathleen Dollard, Vlad Zarytovskii and Chet Husk will talk about the last year in F#, what you might see in F# 8, and thoughts about the future. Bring y...</description>
      <author> (dotnet
  
  
  
    dotnet
  






    •)</author>
      <guid>https://youtube.com/watch?v=yhM0qq4aUbA</guid>
      <pubDate>Fri, 30 Jun 2023 17:04:20 GMT</pubDate>
    </item>
    <item>
      <title>File for Divorce from LLVM &amp;#183; Issue #16270 &amp;#183; ziglang/zig</title>
      <link>https://github.com/ziglang/zig/issues/16270</link>
      <description>I&amp;#39;m sorry honey, it&amp;#39;s just not working out. Our relationship worked when we were younger, but we&amp;#39;re both older now and we&amp;#39;ve grown apart. This issue is to fully eliminate LLVM, Clang, and LLD libra...</description>
      <author> (ziglang)</author>
      <guid>https://github.com/ziglang/zig/issues/16270</guid>
      <pubDate>Fri, 30 Jun 2023 17:04:19 GMT</pubDate>
    </item>
    <item>
      <title>&amp;quot;Could not connect to the TV. Please make sure that you are using the AC adapter supplied with this console.&amp;quot;</title>
      <link>https://gaming.stackexchange.com/questions/308506/could-not-connect-to-the-tv-please-make-sure-that-you-are-using-the-ac-adapter/308560#308560</link>
      <description>My friend left the adapter for her Nintendo Switch at a friend&amp;#39;s house. She is still able to charge the console and play it in handheld mode. Yet, she is unable to connect it to her T.V.. It seems ...</description>
      <author> (C_Z_C_Z_
        
            20111 gold badge22 silver badges66 bronze badges)</author>
      <guid>https://gaming.stackexchange.com/questions/308506/could-not-connect-to-the-tv-please-make-sure-that-you-are-using-the-ac-adapter/308560#308560</guid>
      <pubDate>Fri, 30 Jun 2023 17:04:17 GMT</pubDate>
    </item>
    <item>
      <title>Real Estate Analysis</title>
      <link>https://xkcd.com/2796/</link>
      <description></description>
      <author> (About)</author>
      <guid>https://xkcd.com/2796/</guid>
      <pubDate>Fri, 30 Jun 2023 16:05:53 GMT</pubDate>
    </item>
    <item>
      <title>Burke learns Blazor by porting a Vue.js app to Blazor</title>
      <link>https://youtube.com/watch?v=_2hAePTKBc4</link>
      <description>This summer, Burke and Jon are porting theurlist.com to Blazor - a real world JavaScript application written in Vue.js. Join them each week as they use Visua...</description>
      <author> (Microsoft Developer
  
  
  
    Microsoft Developer
  





    •)</author>
      <guid>https://youtube.com/watch?v=_2hAePTKBc4</guid>
      <pubDate>Fri, 30 Jun 2023 15:05:09 GMT</pubDate>
    </item>
    <item>
      <title>Lovely Rita (Remix)</title>
      <link>https://youtube.com/watch?v=Mhf9R7xj-5U</link>
      <description>Provided to YouTube by Universal Music GroupLovely Rita (Remix) &amp;#183; The BeatlesSgt. Pepper&amp;#39;s Lonely Hearts Club Band℗ 2017 Calderstone Productions Limited (a D...</description>
      <author> ()</author>
      <guid>https://youtube.com/watch?v=Mhf9R7xj-5U</guid>
      <pubDate>Fri, 30 Jun 2023 14:02:34 GMT</pubDate>
    </item>
    <item>
      <title>Use YoutubeExplode to create timestamps for YouTube videos&amp;#128165;</title>
      <link>https://youtube.com/watch?v=ZDenepg0PX0</link>
      <description>&amp;#128270;Learn more about YoutubeExplode: https://www.nuget.org/packages/YoutubeExplodeCheck out the NuGet documentation: https://learn.microsoft.com/nuget/what-is-...</description>
      <author> (dotnet
  
  
  
    dotnet
  






    •
    
  
  
    
    
    •
    
      Updated 6 days ago)</author>
      <guid>https://youtube.com/watch?v=ZDenepg0PX0</guid>
      <pubDate>Fri, 30 Jun 2023 14:02:34 GMT</pubDate>
    </item>
    <item>
      <title>Regular Expressions in C#: Your Ultimate Guide to Powerful Pattern Matching</title>
      <link>https://youtube.com/watch?v=0lU_DG7s0qA</link>
      <description>#dotnet #csharp #.NET #softwaredevelopmentWelcome to my comprehensive tutorial on utilizing regular expressions in C#! In this video, I dive into the world o...</description>
      <author> (Nick Proud
  
  
  
    Nick Proud
  






    •)</author>
      <guid>https://youtube.com/watch?v=0lU_DG7s0qA</guid>
      <pubDate>Fri, 30 Jun 2023 14:02:34 GMT</pubDate>
    </item>
    <item>
      <title>How to wait for multiple C++ coroutines to complete before propagating failure, custom promise - The Old New Thing</title>
      <link>https://devblogs.microsoft.com/oldnewthing/20230630-00/?p=108382</link>
      <description>Taking things into our own hands.</description>
      <author> (Raymond Chen)</author>
      <guid>https://devblogs.microsoft.com/oldnewthing/20230630-00/?p=108382</guid>
      <pubDate>Fri, 30 Jun 2023 14:02:31 GMT</pubDate>
    </item>
    <item>
      <title>2023 mid-year link clearance - The Old New Thing</title>
      <link>https://devblogs.microsoft.com/oldnewthing/20230630-01/?p=108384</link>
      <description>The tradition continues.</description>
      <author> (Raymond Chen)</author>
      <guid>https://devblogs.microsoft.com/oldnewthing/20230630-01/?p=108384</guid>
      <pubDate>Fri, 30 Jun 2023 14:02:31 GMT</pubDate>
    </item>
    <item>
      <title>JavaScript Gom Jabbar</title>
      <link>https://frantic.im/javascript-gom-jabbar/</link>
      <description>What&amp;#39;s inside that package.json? Pain.</description>
      <author> (Alex Kotliarskyi)</author>
      <guid>https://frantic.im/javascript-gom-jabbar/</guid>
      <pubDate>Fri, 30 Jun 2023 14:02:30 GMT</pubDate>
    </item>
    <item>
      <title>RavenDB Docker image updates for the v6.0 release</title>
      <link>https://ayende.com/blog/199619-A/ravendb-docker-image-updates-for-the-v6-0-release?Key=25ab6cc6-f074-4b0c-9ac5-5d3d3ba23ac0</link>
      <description>We are going to be making some changes to our RavenDB 6.0 docker image, you can already access them using the nightly builds:

docker pull ravendb/ravendb-ni...</description>
      <author> ()</author>
      <guid>https://ayende.com/blog/199619-A/ravendb-docker-image-updates-for-the-v6-0-release?Key=25ab6cc6-f074-4b0c-9ac5-5d3d3ba23ac0</guid>
      <pubDate>Fri, 30 Jun 2023 13:03:06 GMT</pubDate>
    </item>
    <item>
      <title>The RIGHT Way To Use HttpClient In .NET</title>
      <link>https://youtube.com/watch?v=g-JGay_lnWI</link>
      <description>&amp;#128640; Support me on Patreon to access the source code: https://www.patreon.com/milanjovanovicThe easy way to make HTTP requests in .NET is to use the HttpClient...</description>
      <author> (Milan Jovanović
  
  
  
    Milan Jovanović
  






    •)</author>
      <guid>https://youtube.com/watch?v=g-JGay_lnWI</guid>
      <pubDate>Fri, 30 Jun 2023 12:02:58 GMT</pubDate>
    </item>
    <item>
      <title>The MediatR Feature NOBODY Is Using!</title>
      <link>https://youtube.com/watch?v=IjWLEhnonrc</link>
      <description>If you use MediatR, chances are that your handlers get cluttered by a lot of cross-cutting concerns. That&amp;#39;s because MediatR has actually the best feature eve...</description>
      <author> (Codewrinkles
  
  
  
    Codewrinkles
  






    •)</author>
      <guid>https://youtube.com/watch?v=IjWLEhnonrc</guid>
      <pubDate>Fri, 30 Jun 2023 11:04:39 GMT</pubDate>
    </item>
    <item>
      <title>What Is Infrastructure as Code?</title>
      <link>https://www.claudiobernasconi.ch/2023/06/30/what-is-infrastructure-as-code/</link>
      <description>Introduction to Infrastructure as Code and how to apply it in the .NET world to make deployments simpler, repeatable, reliable, and faster.</description>
      <author> (Claudio Bernasconi)</author>
      <guid>https://www.claudiobernasconi.ch/2023/06/30/what-is-infrastructure-as-code/</guid>
      <pubDate>Fri, 30 Jun 2023 11:04:39 GMT</pubDate>
    </item>
    <item>
      <title>How To Parse String to DateTime in C#</title>
      <link>https://code-maze.com/csharp-convert-string-to-datetime/</link>
      <description>In this article, we are going to learn how to parse string representations of date and time to an equivalent DateTime value in C#.&amp;#160;</description>
      <author> (Code Maze)</author>
      <guid>https://code-maze.com/csharp-convert-string-to-datetime/</guid>
      <pubDate>Fri, 30 Jun 2023 09:04:37 GMT</pubDate>
    </item>
    <item>
      <title>Elevating C# Code Quality with Qodana: A Journey Towards Perfection | The .NET Tools Blog</title>
      <link>https://blog.jetbrains.com/dotnet/2023/06/29/elevating-csharp-code-quality-with-qodana-a-journey-towards-perfection/</link>
      <description>JetBrains IDEs have always been renowned for their powerful static code analysis supporting a wide range of languages.&amp;#160;With the release of&amp;#160;Qodana,&amp;#160;we are unifying that knowledge in a ce</description>
      <author> (Matthias Koch)</author>
      <guid>https://blog.jetbrains.com/dotnet/2023/06/29/elevating-csharp-code-quality-with-qodana-a-journey-towards-perfection/</guid>
      <pubDate>Fri, 30 Jun 2023 08:03:54 GMT</pubDate>
    </item>
    <item>
      <title>Peter Ritchie&amp;#39;s Blog - ETags in ASP.NET Core</title>
      <link>https://blog.peterritchie.com/posts/etags-in-aspdotnet-core</link>
      <description>Peter Ritchie</description>
      <author> ()</author>
      <guid>https://blog.peterritchie.com/posts/etags-in-aspdotnet-core</guid>
      <pubDate>Fri, 30 Jun 2023 08:03:53 GMT</pubDate>
    </item>
    <item>
      <title>Improve the security of your GraphQL API’s - Part 5–Introspection</title>
      <link>https://bartwullems.blogspot.com/2023/06/improve-security-of-your-graphql-apis_01147596358.html</link>
      <description>As a GraphQL API gives you a lot of extra power and possibilities, it also introduces some new attack vectors. Nothing prevents the user of ...</description>
      <author> (Share)</author>
      <guid>https://bartwullems.blogspot.com/2023/06/improve-security-of-your-graphql-apis_01147596358.html</guid>
      <pubDate>Fri, 30 Jun 2023 08:03:53 GMT</pubDate>
    </item>
    <item>
      <title>A few words on taking notes</title>
      <link>https://www.allthingsdistributed.com/2023/06/a-few-words-on-taking-notes.html</link>
      <description>As we are about to start the planning meetings for 2024 at AWS, I’ve been thinking a lot about how I take notes.</description>
      <author> (Dr Werner Vogels - https://www.allthingsdistributed.com/)</author>
      <guid>https://www.allthingsdistributed.com/2023/06/a-few-words-on-taking-notes.html</guid>
      <pubDate>Fri, 30 Jun 2023 08:03:52 GMT</pubDate>
    </item>
    <item>
      <title>Nick Chapsas</title>
      <link>https://video.weiler.rocks/channel/UCrkPsvLGln62OMZRO6K-llg</link>
      <description>Hello everybody I’m Nick Chapsas and this is my YouTube channel. </description>
      <author> ()</author>
      <guid>https://video.weiler.rocks/channel/UCrkPsvLGln62OMZRO6K-llg</guid>
      <pubDate>Fri, 30 Jun 2023 03:02:58 GMT</pubDate>
    </item>
    <item>
      <title>Creating a VS Code editor extension</title>
      <link>https://timheuer.com/blog/resx-editor-for-visual-studio-code/</link>
      <description>I created a resx editor to learn how to write VS Code custom editor extensions. Check it out and the code.</description>
      <author> ()</author>
      <guid>https://timheuer.com/blog/resx-editor-for-visual-studio-code/</guid>
      <pubDate>Fri, 30 Jun 2023 02:02:06 GMT</pubDate>
    </item>
    <item>
      <title>Jason Bock Explains What&amp;#39;s New in .NET 7 APIs -- Visual Studio Magazine</title>
      <link>https://visualstudiomagazine.com/articles/2023/06/29/net-7-apis.aspx</link>
      <description>Jason Bock will explain what&amp;#39;s new in .NET 7 APIs at a big August developer conference in San Diego.</description>
      <author> (By David Ramel06/29/2023)</author>
      <guid>https://visualstudiomagazine.com/articles/2023/06/29/net-7-apis.aspx</guid>
      <pubDate>Fri, 30 Jun 2023 01:03:28 GMT</pubDate>
    </item>
    <item>
      <title>Burke Learns Blazor - Finishing the API and starting the UI</title>
      <link>https://youtube.com/watch?v=qONPW7N_r8k</link>
      <description>Last week we got the API started - let&amp;#39;s finish it up and start on the UI!Community Links: https://www.theurlist.com/burke-learns-blazorFeaturing: Jon Gallow...</description>
      <author> (Bloomberg Television
  
  
  
    Bloomberg Television
  





    •)</author>
      <guid>https://youtube.com/watch?v=qONPW7N_r8k</guid>
      <pubDate>Fri, 30 Jun 2023 01:03:25 GMT</pubDate>
    </item>
    <item>
      <title>Enable Un-typed within ASP.NET Core OData - OData</title>
      <link>https://devblogs.microsoft.com/odata/enable-un-typed-within-asp-net-core-odata/</link>
      <description>Introduction The latest ASP.NET Core OData supports the following two built-in OData abstract types: Edm.Untyped Collection(Edm.Untyped) Developers can use them to advertise a property in OData metadata schema (aka, Edm model) so that such property is declared with a particular name present,</description>
      <author> (Sam Xu)</author>
      <guid>https://devblogs.microsoft.com/odata/enable-un-typed-within-asp-net-core-odata/</guid>
      <pubDate>Thu, 29 Jun 2023 23:02:36 GMT</pubDate>
    </item>
    <item>
      <title>Programming Languages Going Above and Beyond</title>
      <link>https://whileydave.com/2023/06/27/programming-languages-going-above-and-beyond/</link>
      <description>Dafny is a programming language which often genuinely amazes me.</description>
      <author> ()</author>
      <guid>https://whileydave.com/2023/06/27/programming-languages-going-above-and-beyond/</guid>
      <pubDate>Thu, 29 Jun 2023 23:02:35 GMT</pubDate>
    </item>
    <item>
      <title>GitHub Quick Reviews</title>
      <link>https://youtube.com/watch?v=H8P2wTqBtKM</link>
      <description>Powered by Restream https://restream.io</description>
      <author> (One Allah 
  
  
  
    One Allah 
  





    •)</author>
      <guid>https://youtube.com/watch?v=H8P2wTqBtKM</guid>
      <pubDate>Thu, 29 Jun 2023 21:02:35 GMT</pubDate>
    </item>
    <item>
      <title>Making movie trailers with Zeroscope, ElevenLabs, and GPT-4 - Charlie Holtz</title>
      <link>https://www.charlieholtz.com/articles/how-i-make-ai-movies</link>
      <description>My new favorite hobby is making trailers for films that don&amp;#39;t exist.</description>
      <author> ()</author>
      <guid>https://www.charlieholtz.com/articles/how-i-make-ai-movies</guid>
      <pubDate>Thu, 29 Jun 2023 21:02:34 GMT</pubDate>
    </item>
    <item>
      <title>Engineering Guardrails</title>
      <link>https://ashishb.net/all/engineering-guardrails/</link>
      <description>Guardrails are meant to protect us from tripping over. The same can be said about engineering guardrails. Like most engineering decisions, adding guardrails is a trade-off. There are multiple levels of adding guardrails and one has to decide which ones and how many should be added. Source code Production deployments Data Information Security Source code</description>
      <author> ()</author>
      <guid>https://ashishb.net/all/engineering-guardrails/</guid>
      <pubDate>Thu, 29 Jun 2023 21:02:34 GMT</pubDate>
    </item>
    <item>
      <title>I built a weird keyboard</title>
      <link>https://nathanfriend.io/2023/06/26/i-built-a-weird-keyboard.html</link>
      <description> I spent most of my free time over the last 10 months building this bizarre keyboard from scratch. It’s a Dactyl Manuform - a split keyboard with a highly sculpted design that is somehow simulataneously the ugliest and most eye-catching object I’ve ever seen. The goal of this keyboard design is to place keys exactly along each finger’s natural axis of motion. The consequences of this approach are downward-sloping (A.K.A “tented”) rows to match the natural angle of the wrists, a deeper middle finger column to compensate for this finger’s relative length, an offset pinky column to minimize stretching, and a thumb cluster with multiple keys to take advantage of its opposable nature. There’s a reason most keyboards don’t look like this. It’s difficult to mass-produce curved keyboards since they can’t use the stiff, flat PCBs that most keyboards use to wire the keys to the microcontroller. Every Dactyl Manuform is a unique piece of art, painstakingly hand-wired by a human being. Here’s how I built mine: Build log The first step was to design and 3D print the case. There are a number of Dactyl Manuform model generators out there; I ended up using this one since it had a few extra features I wanted (e.g. wide pinky keys). Some things I was looking for in my design: A key layout similar to the ErgoDox EZ keyboards I already own An aggressive tent angle (I went with π/8 = 22.5&amp;#176;) Hot-swap sockets I gave up on the hot-swap sockets after failing to coax the generator script to produce valid hot-swap socket holders. I’m glad I did - in the end I don’t think they would have worked anyway. Once I had a model that looked good on the screen, I printed a draft version to see it in real life. Printed with a .8mm nozzle, .32mm layer height, and lightning infill Overall, I was really happy with this first draft. I only made a few tweaks to the model before printing the real thing: I enabled the “external microcontroller” option, which let me kick the can on deciding which microcontroller and connection types to use I added my own screw holes; the holes generated by the script were awkwardly placed To mount the base plates to the body of the keyboard, I used these heat set inserts. It’s a neat system; the threaded inserts are melted into the 3D print using a soldering gun, producing threaded screw holes much stronger and smaller than anything that would be possible using only 3D printing. To determine the ideal hole size for these inserts, I made a test print. A test print with insert holes ranging from 3.8mm to 4.2mm in diameter I’m glad I tested this; all of the hole options were too small! A second print with bigger holes was more successful. A second test print with insert holes ranging from 4.2mm to 4.6mm in diameter. I decided to go with 4.5mm With this last detail resolved, I began printing the real halves. I used my favorite material - wood PLA - which looks (and even smells!) quite similar to real wood, once properly post-processed. The final STL file being sliced in Cura. 24 hours per half! The left half, fresh off the printer Both halves printed and slightly cleaned up I melted the inserts into the holes, which was nerve-wracking; one bad insert would have likely ruined the whole print. It was awkward to try and hold the keyboard and the insert in place while pressing the insert into the plastic with the soldering gun. Somehow I managed to install all ten without issue! An installed heat-set insert I ordered the transparent acrylic base plates from ponoko.com and was quite happy with the result. Acrylic base plate from ponoko.com Next up was post-processing. I sanded each half with 80-grit sandpaper, which was a ton of work - there are a lot of nooks and crannies that make this a tedious job. Both halves, sanded In order to sand the inside of the key holes, I printed a little attachment that I could wrap with sandpaper and fit on my screwdriver. My custom SuperSander™ (patent pending) Normally this would be an unnecessary step - no one sees the inside of the key holes - but the fit was a bit too tight; most of the holes required some sanding before the switch would fit properly. (This is why I’m glad I didn’t bother with hot-swap sockets - the fit is so tight, I’d never be able to get the switches out anyway.) Another shot, because sanding these took too much time not to show off The next step was to stain and clear coat the prints. I used this gel stain and glossy polyurethane to give the prints a rich, polished wood color. The finished product Some nice faux woodgrain This was a time consuming step, as each half required three coats of stain (minimum 24 hours to dry per coat) and at least 3 coats of polyurethane (a few hours to dry per coat). I did this in the dead of winter which made drying these in the outdoors challenging (a space heater may have been involved). The hard work paid off, though - I’m really happy with how these look! The layer lines even give the illusion of a wood grain. The next decision was which key switches to use. I’m a clicky switch guy; the noisier the better. I bought a Kailh switch tester so I could make an informed decision and decided on Kailh Box Whites. Regular and low-profile Kailh switch testers. Not pictured: Gateron and Boba testers Compared to other clicky switches (e.g. Cherry MX Blues), Box Whites are extra clicky (they click twice per key press). Perfect for working remotely! If I ever make a silent/office-friendly version of this board, I’ll go with Boba U4 Silents. At this point, I was able to set the switches and keycaps in place and get a feel for what it would be like to type on this monstrosity. I’ll admit it felt about as weird as it looks. Switches and keycaps (temporarily) installed There was one last detail to work out before I could begin wiring up the halves. I wanted to install a rotary encoder (“volume knob”) on each half, but these don’t click into a standard keyboard hole out of the box. I had to 3D print a special adapter for each. The end result, with chunks of glass attached to the bottoms I printed these with PETG and learned the hard way to always use glue stick when printing with PETG. The adapters adhesed to the bed so strongly they took chunks out of my glass bed when I finally pried them off. I was able to salvage the adapters with some sanding, but the printer bed was unfortunately beyond repair. &amp;#128557; Despite their rather violent effects on my printer, the adapters did their job quite nicely! Rotary encoder with and without the cap Finally, it was time to start wiring it up! First, I wrapped diodes around one pin on each switch. Diodes wrapped I soldered the diodes into place and snipped the extra leg. Diodes soldered and snipped I soldered the remaining diode legs together to form the rows of the key matrix. Diode legs soldered together into rows I used small, individual pieces of insulated wire to form the columns. Don&amp;#39;t look too closely; I&amp;#39;m really bad at soldering I installed DuPont connectors so I didn’t have to solder directly to the microcontroller. This saved me a lot of headache since it took quite a bit of trial and error to get all pins in the right spot. DuPont connectors installed I flashed a basic QMK firmware to the microcontroller and had the incredibly satisfying experience of seeing a letter appear on the screen when I pressed a key. I also got the LED strip working! IT LIVES!! I was getting really close at this point. I designed a custom holder for the microcontroller since the one that was supposed to be compatible with my case didn’t fit for some reason. Custom-designed microcontroller holder I spliced some wires together since a few of the microcontroller pins had to be shared by more than one connection. I&amp;#39;m frankly shocked this thing works After assembling all the pieces, a bit of software configuration, and a lot of trial and error… I had a working keyboard! Finally. Done. This was way too much work. Never again. Probably. ALERT How does it feel? Weird, but good! I’ve only been typing on it for a few work days, so my muscle memory hasn’t fully adjusted. I keep reaching for keys in the wrong places; in particular, my fingers naturally stretch too far when reaching for the bottom row. I also made a few modifications to my QMK layout to take advantage of the more accessible thumb clusters compared to my ErgoDox EZ. I think I’ll really like it once I’m used to it. Was it worth it? Umm… I think so? The end result was fantastic, but it was an insane amount of work. I don’t recommend this project to anyone who isn’t interested in the process itself. If you’re just looking for a great ergonomic keyboard, I’d recommend buying an ErgoDox EZ, a Moonlander, a Kinesis Advantage360 or a prebuilt Dactyl Manuform, all of which will cost about the same as this project (see below). Cost breakdown Cost of all items, including tax and shipping. Description Cost (CAD) Link Wood PLA filament for 3D printed case $40.44 amazon.ca Kailh switch tester $21.46 aliexpress.com Kailh low-profile switch tester $9.68 aliexpress.com Pro Micro controller (x2) $44.98 amazon.ca Kailh BOX White switches (x90) $51.26 aliexpress.com M3 heat-seated inserts (x100) $12.42 amazon.ca M3 screws (x100) $12.02 amazon.ca EC11 rotary encoder (x4) $15.80 amazon.ca LED strip (1m) $16.37 aliexpress.com 1N4148 Diode (x100) $8.80 digikey.ca Reset button (x3) $10.82 digikey.ca 22AWG Wire (25’) $7.24 digikey.ca TRRS jack, female (x3) $12.65 digikey.ca Jumper wire (x60) $11.74 digikey.ca Soldering iron $59.87 homedepot.ca Solder $28.23 homedepot.ca Wire stripper $11.29 canadiantire.ca Acrylic base plate (x4) $54.88 ponoko.com Gel wood stain $19.93 homedepot.ca Glossy polyurethane $27.11 amazon.ca Keycap set (x2) $57.32 amazon.ca Electrical tape $5.37 amazon.ca Rubber feet $13.55 amazon.ca Only keyboard materials $450.93 ≈ $340 USD All items (including tools, testers, etc.) $553.23 ≈ $417 USD As you can see, building your own keyboard is not a good way to save money&amp;#160;&amp;#128184; Links/resources All .stl and .svg files: https://www.thingiverse.com/thing:6099418 A helpful Hacker News comment: https://news.ycombinator.com/item?id=23445208 The generator I used to generate the keyboard case model: https://github.com/ibnuda/dactyl-keyboard/tree/refaktor The firmware that powers the keyboard: https://qmk.fm/ Some helpul build logs: https://sachee.medium.com/building-my-first-keyboard-and-you-can-too-512c0f8a4c5f https://youtu.be/UerP5bxGL3c (and subsequent videos) https://nickgreen.info/dactyl-manuform-build-log/ https://medium.com/swlh/complete-idiot-guide-for-building-a-dactyl-manuform-keyboard-53454845b065 </description>
      <author> ()</author>
      <guid>https://nathanfriend.io/2023/06/26/i-built-a-weird-keyboard.html</guid>
      <pubDate>Thu, 29 Jun 2023 21:02:33 GMT</pubDate>
    </item>
    <item>
      <title>Have we reached the Generative AI peak? - Ritza Articles</title>
      <link>https://ritza.co/articles/have-we-reached-the-peak/</link>
      <description>None</description>
      <author> ()</author>
      <guid>https://ritza.co/articles/have-we-reached-the-peak/</guid>
      <pubDate>Thu, 29 Jun 2023 21:02:33 GMT</pubDate>
    </item>
    <item>
      <title>Welcome to Peter&amp;#39;s DevLog - NXP has messed up their password form validation</title>
      <link>https://peterme.net/scraps/nxp-has-messed-up-their-password-form-validation.html</link>
      <description>I&amp;#39;ve been using a password manager for years now, and from time to time this leads to strange discoveries with password validation. They&amp;#39;ve ranged from crashing the server to simply ignoring valid passwords. I might write this out as a proper article some time in the future, but my latest discovery has me puzzled as to what is actually going on and I wanted to share it.</description>
      <author> ()</author>
      <guid>https://peterme.net/scraps/nxp-has-messed-up-their-password-form-validation.html</guid>
      <pubDate>Thu, 29 Jun 2023 21:02:32 GMT</pubDate>
    </item>
    <item>
      <title>Creating an ORM-less framework</title>
      <link>https://withinboredom.info/2023/06/28/creating-an-orm-less-framework/</link>
      <description>Years ago, I enjoyed working with Durable Functions on Azure. There were some aspects that I fell in love with, like how “close” I felt to pure DDD, how simple it was to scale, and how …</description>
      <author> (withinboredom)</author>
      <guid>https://withinboredom.info/2023/06/28/creating-an-orm-less-framework/</guid>
      <pubDate>Thu, 29 Jun 2023 21:02:32 GMT</pubDate>
    </item>
    <item>
      <title>Goodbye MongoDB - Stuart Spence Blog</title>
      <link>https://blog.stuartspence.ca/2023-05-goodbye-mongo.html</link>
      <description>After years of strange problems and bad performance with MongoDB, this week I successfully migrated chesscraft.ca to PostgreSQL. This took lots of preparations, went smoothly, and is performing great, so I thought I&amp;#39;d write about it. Writing here is cathartic. Also, others might find it useful.</description>
      <author> (Stuart Spence)</author>
      <guid>https://blog.stuartspence.ca/2023-05-goodbye-mongo.html</guid>
      <pubDate>Thu, 29 Jun 2023 21:02:32 GMT</pubDate>
    </item>
    <item>
      <title>Lili’s pieces - CV4Animals 2023</title>
      <link>https://writings.lambdaloop.com/posts/cv4animals-2023/</link>
      <description>A writeup of the CV4Animals 2023 workshop</description>
      <author> (Lili Karashchuk)</author>
      <guid>https://writings.lambdaloop.com/posts/cv4animals-2023/</guid>
      <pubDate>Thu, 29 Jun 2023 21:02:32 GMT</pubDate>
    </item>
    <item>
      <title>Why I chose php for my new side project</title>
      <link>https://commit.pizza/2023/06/28/why-i-chose-php-for-my-new-side-project/</link>
      <description>The reasons I picked php in 2023 for a completely new side project.</description>
      <author> (Marcus)</author>
      <guid>https://commit.pizza/2023/06/28/why-i-chose-php-for-my-new-side-project/</guid>
      <pubDate>Thu, 29 Jun 2023 21:02:32 GMT</pubDate>
    </item>
    <item>
      <title>The Many Ways that Digital Minds Can Know</title>
      <link>https://moultano.wordpress.com/2023/06/28/the-many-ways-that-digital-minds-can-know/</link>
      <description>LLMs do all the things people say they do at once, even if those people vociferously disagree, and they’re all useful.</description>
      <author> ()</author>
      <guid>https://moultano.wordpress.com/2023/06/28/the-many-ways-that-digital-minds-can-know/</guid>
      <pubDate>Thu, 29 Jun 2023 21:02:32 GMT</pubDate>
    </item>
    <item>
      <title>Hands on example of ChatGPT as a programming tool</title>
      <link>https://blog.scottlogic.com/2023/06/29/hands-on-example-of-chatgpt-as-a-programming-tool.html</link>
      <description>ChatGPT is put through its paces to see how the AI fares as a productivity tool for developing a small project. We look at where it helps, where it doesn&amp;#39;t, and where AI tooling might go in the future.</description>
      <author> (Jon Harris)</author>
      <guid>https://blog.scottlogic.com/2023/06/29/hands-on-example-of-chatgpt-as-a-programming-tool.html</guid>
      <pubDate>Thu, 29 Jun 2023 21:02:32 GMT</pubDate>
    </item>
    <item>
      <title>The busy bubble</title>
      <link>https://blog.liallen.me/the-busy-bubble</link>
      <description>Thoughts from Allen</description>
      <author> ()</author>
      <guid>https://blog.liallen.me/the-busy-bubble</guid>
      <pubDate>Thu, 29 Jun 2023 21:02:32 GMT</pubDate>
    </item>
    <item>
      <title>Towards an Adaptable Systems Architecture for Memory Tiering at Warehouse-Scale</title>
      <link>https://www.micahlerner.com/2023/06/29/towards-an-adaptable-systems-architecture-for-memory-tiering-at-warehouse-scale.html</link>
      <description>This is one in a series of papers I’m reading from ASPLOS. These paper reviews can be delivered weekly to your inbox, or you can subscribe to the Atom feed. As always, feel free to reach out on Twitter with feedback or suggestions!</description>
      <author> ()</author>
      <guid>https://www.micahlerner.com/2023/06/29/towards-an-adaptable-systems-architecture-for-memory-tiering-at-warehouse-scale.html</guid>
      <pubDate>Thu, 29 Jun 2023 21:02:31 GMT</pubDate>
    </item>
    <item>
      <title>CLI tools hidden in the Python standard library</title>
      <link>https://til.simonwillison.net/python/stdlib-cli-tools</link>
      <description>Seth Michael Larson pointed out that the Python gzip module can be used as a CLI tool like this:</description>
      <author> ()</author>
      <guid>https://til.simonwillison.net/python/stdlib-cli-tools</guid>
      <pubDate>Thu, 29 Jun 2023 19:03:58 GMT</pubDate>
    </item>
  </channel>
</rss>