<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>A tale of webpage speed, or throwing away React</title>
      <link>https://solovyov.net/blog/2020/a-tale-of-webpage-speed-or-throwing-away-react/</link>
      <description>
  Back in 2011, I happened to get a job writing Backbone.js app. If you never did that, don’t. I was complaining about difficulties with composition left and right to whoever would listen. As I started digging into alternatives for the front-end, I discovered FRP and &lt;a [...]</description>
      <author> (Alexander Solovyov)</author>
      <guid>https://solovyov.net/blog/2020/a-tale-of-webpage-speed-or-throwing-away-react/</guid>
      <pubDate>Mon, 24 Aug 2020 17:03:47 GMT</pubDate>
    </item>
    <item>
      <title>Rust Contributors</title>
      <link>https://thanks.rust-lang.org/</link>
      <description>Rust is a community project and is very thankful for the many community
            contributions it receives. See this page for more
            information.</description>
      <author> ()</author>
      <guid>https://thanks.rust-lang.org/</guid>
      <pubDate>Mon, 24 Aug 2020 17:03:43 GMT</pubDate>
    </item>
    <item>
      <title>Learn how to deploy .NET Core apps to Azure with GitHub Actions | Azure Friday</title>
      <link>https://www.youtube.com/watch?v=cGvmbYE4HOY</link>
      <description>GitHub Actions makes it easy to automate all your software workflows. Tim Heuer joins Scott Hanselman to saunter through the process of deploying .NET Core apps to Azure using GitHub Actions.

0:00 - Overview
0:19 - Project setup
4:02 - Configuring the workflow
7:29 - Build job - setting up the environment
13:18 - Build job - configuring the build
16:07 - Getting the publish profile from Azure
17:45 - Build job - handling secrets
20:37 - Build job - deploying to Azure
22:34 - Actions tab in GitHub and workflow log review
24:59 - Adding artifacts to the job 
27:59 - Wrap-up

◉ GitHub Actions on GitHub - https://aka.ms/azfr/638/01
◉ GitHub Actions Documentation - https://aka.ms/azfr/638/02
◉ .NET Core overview - https://aka.ms/azfr/638/03
◉ Azure Web Apps - https://aka.ms/azfr/638/04
◉ GitHub Action to setup .NET Core SDK - https://aka.ms/azfr/638/05
◉ Deploy to Azure using GitHub Actions - https://aka.ms/azfr/638/06
◉ ASP.NET Core Deployment sample - https://aka.ms/azfr/638/07
◉ Blazor Wasm Deployment sample - https://aka.ms/azfr/638/08
◉ Create a free account (Azure Friday) - https://aka.ms/azfr/638/free

For Česky, Deutsch, Español, Français, Italiano, 日本語, 한국어, Polski, Português, Русский, Türkçe, 简体中文, and 繁體中文, watch on Channel 9: https://aka.ms/azfr/638

#Microsoft #Azure</description>
      <author> (Microsoft Azure)</author>
      <guid>https://www.youtube.com/watch?v=cGvmbYE4HOY</guid>
      <pubDate>Mon, 24 Aug 2020 17:03:41 GMT</pubDate>
    </item>
    <item>
      <title>NuGet and long file name support · Issue #3324 · NuGet/Home</title>
      <link>https://github.com/NuGet/Home/issues/3324</link>
      <description>I often have the following exception during restore on Windows: The specified path, file name, or both are too long. The fully qualified file name must be less than 260 characters, and the director...</description>
      <author> (NuGet)</author>
      <guid>https://github.com/NuGet/Home/issues/3324</guid>
      <pubDate>Mon, 24 Aug 2020 16:03:46 GMT</pubDate>
    </item>
    <item>
      <title>Bare-Metal MCU #9 - Review; ATTiny85 from scratch</title>
      <link>https://www.youtube.com/watch?v=N591sLGYWnM</link>
      <description>ATTiny85 Datasheet: https://ww1.microchip.com/downloads/en/DeviceDoc/Atmel-2586-AVR-8-bit-Microcontroller-ATtiny25-ATtiny45-ATtiny85_Datasheet.pdf

Eleccelerator Fuse Bit Calculator: http://eleccelerator.com/fusecalc/

----------------------------------------------------------------------
ENTIRE PLAYLIST: https://www.youtube.com/playlist?list=PLNyfXcjhOAwOF-7S-ZoW2wuQ6Y-4hfjMR
Video #1 - Intro to Registers:  https://youtu.be/tBq3sO1Z-7o
Video #2 - Access registers by address: https://youtu.be/W8REqKlGzDY
Video #3 - Barebones hardware (breadboard arduino): https://youtu.be/tfTCFBqPzcE
Video #4 - Bootloaders and Programers: https://youtu.be/dcLeKj00t_I
Video #5 - AVRDude and Fuses: https://youtu.be/Q2DakPocvfs
Video #6 - Compilers: https://youtu.be/7lcY5tcP_ow
Video #7 - Linkers: https://youtu.be/EOuNU89TdVU
Video #8 - Optimizers: https://youtu.be/ZLyesUiXde4</description>
      <author> (Mitchel Davis)</author>
      <guid>https://www.youtube.com/watch?v=N591sLGYWnM</guid>
      <pubDate>Mon, 24 Aug 2020 16:03:43 GMT</pubDate>
    </item>
    <item>
      <title>JRediSearch version 1.8 Sync Up by tombatron · Pull Request #1531 · StackExchange/StackExchange.Redis</title>
      <link>https://github.com/StackExchange/StackExchange.Redis/pull/1531</link>
      <description>So here is my stab at another sync up with JRediSearch.
There&amp;#39;s one change that I didn&amp;#39;t migrate over and it&amp;#39;s their toString override on the Document class. They introduced com.google....</description>
      <author> (StackExchange)</author>
      <guid>https://github.com/StackExchange/StackExchange.Redis/pull/1531</guid>
      <pubDate>Mon, 24 Aug 2020 15:03:49 GMT</pubDate>
    </item>
    <item>
      <title>Implement ROLE command by zmj · Pull Request #1551 · StackExchange/StackExchange.Redis</title>
      <link>https://github.com/StackExchange/StackExchange.Redis/pull/1551</link>
      <description>This PR implements the ROLE command (#1451): https://redis.io/commands/role#sentinel-output . Redis implementation: https://github.com/redis/redis/blob/unstable/src/replication.c#L2672
Because the ...</description>
      <author> (StackExchange)</author>
      <guid>https://github.com/StackExchange/StackExchange.Redis/pull/1551</guid>
      <pubDate>Mon, 24 Aug 2020 15:03:47 GMT</pubDate>
    </item>
    <item>
      <title>How can I get the number of processors in the system, when there are more than 64? | The Old New Thing</title>
      <link>https://devblogs.microsoft.com/oldnewthing/20200824-00/?p=104116</link>
      <description>A customer noted that the way their program obtains the number of processors is by calling Get­System­Info and looking at the dwNumberOfProcessors. However, the documentation notes that this gives the number of processors in the current processor group, and that can be less than the total number of processors.</description>
      <author> (Raymond Chen  Follow)</author>
      <guid>https://devblogs.microsoft.com/oldnewthing/20200824-00/?p=104116</guid>
      <pubDate>Mon, 24 Aug 2020 14:03:49 GMT</pubDate>
    </item>
    <item>
      <title>Altopia Corporation Information</title>
      <link>https://www.altopia.com/</link>
      <description>Usenet, Supplemental Internet Access</description>
      <author> ()</author>
      <guid>https://www.altopia.com/</guid>
      <pubDate>Mon, 24 Aug 2020 11:04:06 GMT</pubDate>
    </item>
    <item>
      <title>Questions · Patrick Collison</title>
      <link>https://patrickcollison.com/questions</link>
      <description>Some questions that I find interesting. I've omitted some that are related to Stripe. (Pointers to interesting readings on these topics are always welcome, as are pointers to responses.)</description>
      <author> ()</author>
      <guid>https://patrickcollison.com/questions</guid>
      <pubDate>Mon, 24 Aug 2020 11:03:54 GMT</pubDate>
    </item>
    <item>
      <title>C# to the max! Continuations, co-routines and Source Generators!</title>
      <link>https://www.meetup.com/en-AU/Sydney-Alt-Net/events/zhdbvrybclbhc/</link>
      <description>Tue, 25 Aug 2020, 7:00 pm: == C# continuations / coroutines and side project -- Andrew Nosenko (@noseratio)Co-routines are functions that yield and execute cooperatively. Coroutines are handy for scri</description>
      <author> ()</author>
      <guid>https://www.meetup.com/en-AU/Sydney-Alt-Net/events/zhdbvrybclbhc/</guid>
      <pubDate>Mon, 24 Aug 2020 11:03:52 GMT</pubDate>
    </item>
    <item>
      <title>.NET &amp;amp; JavaScript Ninjas Community Program | Telerik</title>
      <link>https://www.telerik.com/ninjas</link>
      <description>We celebrate the Telerik &amp; Kendo UI friends in the developer community. Become or nominate a Ninja &amp; celebrate with us.</description>
      <author> ()</author>
      <guid>https://www.telerik.com/ninjas</guid>
      <pubDate>Mon, 24 Aug 2020 09:03:50 GMT</pubDate>
    </item>
    <item>
      <title>Never Run ‘python’ In Your Downloads Folder</title>
      <link>https://glyph.twistedmatrix.com/2020/08/never-run-python-in-your-downloads-folder.html</link>
      <description>Python can execute code. Make sure it executes only the code you want it to.</description>
      <author> ()</author>
      <guid>https://glyph.twistedmatrix.com/2020/08/never-run-python-in-your-downloads-folder.html</guid>
      <pubDate>Mon, 24 Aug 2020 07:03:47 GMT</pubDate>
    </item>
    <item>
      <title>Actually Portable Executable</title>
      <link>https://justine.storage.googleapis.com/ape.html</link>
      <description>@ Justine's Web Page</description>
      <author> ()</author>
      <guid>https://justine.storage.googleapis.com/ape.html</guid>
      <pubDate>Mon, 24 Aug 2020 06:03:42 GMT</pubDate>
    </item>
    <item>
      <title>Computer Stuff They Didn't Teach You #7 - Git Push --Force will destroy the timeline and kill us all</title>
      <link>https://www.youtube.com/watch?v=dgOpnebZkRo</link>
      <description>Computer Stuff They Didn't Teach You #7 - Git Push --Force will destroy the timeline and kill us all! Ok, not really. But you really want to understand what's going on before you attempt it. Please be careful out there in these git streets.</description>
      <author> (Scott Hanselman)</author>
      <guid>https://www.youtube.com/watch?v=dgOpnebZkRo</guid>
      <pubDate>Mon, 24 Aug 2020 04:03:53 GMT</pubDate>
    </item>
    <item>
      <title>Computer Stuff They Didn't Teach You #4 - Git 101 Basics</title>
      <link>https://www.youtube.com/watch?v=WBg9mlpzEYU</link>
      <description>This video talks about how to think about Git source control! Computer Stuff They Didn't Teach You #4 - Git 101 Basics</description>
      <author> (Scott Hanselman)</author>
      <guid>https://www.youtube.com/watch?v=WBg9mlpzEYU</guid>
      <pubDate>Mon, 24 Aug 2020 04:03:52 GMT</pubDate>
    </item>
    <item>
      <title>Computer Stuff They Didn't Teach You #6 - Git Rebase vs Merge explained</title>
      <link>https://www.youtube.com/watch?v=hae9zg0-sZY</link>
      <description>How do you use Git Rebase vs Git Merge? Is this the hardest part of Git? Let's see if Evil Mr. Spock and Scott can explain Git Rebase without pain!

Check out https://dangitgit.com/ for more tips!</description>
      <author> (Scott Hanselman)</author>
      <guid>https://www.youtube.com/watch?v=hae9zg0-sZY</guid>
      <pubDate>Mon, 24 Aug 2020 04:03:51 GMT</pubDate>
    </item>
    <item>
      <title>Computer Stuff They Didn't Teach You #2 - Code Pages, Character Encoding, Unicode, UTF-8 and the BOM</title>
      <link>https://www.youtube.com/watch?v=jeIBNn5Y5fI</link>
      <description>Computer Stuff They Didn't Teach You #2 - Code Pages, Character Encoding, Unicode, UTF-8 and the BOM</description>
      <author> (Scott Hanselman)</author>
      <guid>https://www.youtube.com/watch?v=jeIBNn5Y5fI</guid>
      <pubDate>Mon, 24 Aug 2020 04:03:50 GMT</pubDate>
    </item>
    <item>
      <title>Computer Stuff They Didn't Teach You #3 - Basic Text Editing and Hotkeys in VS Code</title>
      <link>https://www.youtube.com/watch?v=gSMyLMZYjz8</link>
      <description>Computer Stuff They Didn't Teach You #3 - Basic Text Editing and Hotkeys in VS Code

I'm using Carnac for the Hotkey visualization https://github.com/Code52/carnac/releases/latest

Visual Studio Code hotkeys PDF https://code.visualstudio.com/shortcuts/keyboard-shortcuts-windows.pdf</description>
      <author> (Scott Hanselman)</author>
      <guid>https://www.youtube.com/watch?v=gSMyLMZYjz8</guid>
      <pubDate>Mon, 24 Aug 2020 04:03:50 GMT</pubDate>
    </item>
    <item>
      <title>Computer Stuff They Didn't Teach You #5 - Git Pull Requests explained</title>
      <link>https://www.youtube.com/watch?v=Mfz8NQncwiQ</link>
      <description>Pull Requests are a lie! WHAT!? Scott talks about how Git Pull Requests work and merges one in live in this the second episode of our spontaneous training on Git 101!</description>
      <author> (Scott Hanselman)</author>
      <guid>https://www.youtube.com/watch?v=Mfz8NQncwiQ</guid>
      <pubDate>Mon, 24 Aug 2020 04:03:49 GMT</pubDate>
    </item>
    <item>
      <title>Computer Stuff They Didn't Teach You #1 - What's a Carriage and Who's Feeding it Lines? CRLF</title>
      <link>https://www.youtube.com/watch?v=TtiBhktB4Qg</link>
      <description>Computer Stuff They Didn't Teach You #1 - What's a Carriage and Who's Feeding it Lines? CRLF</description>
      <author> (Scott Hanselman)</author>
      <guid>https://www.youtube.com/watch?v=TtiBhktB4Qg</guid>
      <pubDate>Mon, 24 Aug 2020 04:03:48 GMT</pubDate>
    </item>
    <item>
      <title>xunit/xunit</title>
      <link>https://github.com/xunit/xunit/discussions</link>
      <description>xUnit.net is a free, open source, community-focused unit testing tool for the .NET Framework. - xunit/xunit</description>
      <author> (xunit)</author>
      <guid>https://github.com/xunit/xunit/discussions</guid>
      <pubDate>Mon, 24 Aug 2020 00:03:49 GMT</pubDate>
    </item>
    <item>
      <title>KitchenAid&amp;#174; Stand Mixer Ice Cream Maker Attachment</title>
      <link>https://www.williams-sonoma.com/products/kitchenaid-stand-mixer-ice-cream-maker-attachment/</link>
      <description>Use with your KitchenAid mixer to prepare ice cream parlor treats at home – it's easy with this accessory. The rotating dasher and insulated freezer bowl attach to your mixer, whipping up 2 quarts of velvety-smooth frozen dessert in just 20&amp;…</description>
      <author> (Redtaz01)</author>
      <guid>https://www.williams-sonoma.com/products/kitchenaid-stand-mixer-ice-cream-maker-attachment/</guid>
      <pubDate>Sun, 23 Aug 2020 23:03:54 GMT</pubDate>
    </item>
    <item>
      <title>tomrothe.de - Behavior-Driven Test Data</title>
      <link>https://tomrothe.de/posts/behaviour-driven-test-data.html</link>
      <description>23rd of August, 2020
  rails, ruby, testing</description>
      <author> (by Tom Rothe)</author>
      <guid>https://tomrothe.de/posts/behaviour-driven-test-data.html</guid>
      <pubDate>Sun, 23 Aug 2020 22:03:57 GMT</pubDate>
    </item>
    <item>
      <title>Daily links from Cory Doctorow</title>
      <link>https://pluralistic.net/2020/08/23/visionary-art/#meritocratic-delusion</link>
      <description></description>
      <author> ()</author>
      <guid>https://pluralistic.net/2020/08/23/visionary-art/#meritocratic-delusion</guid>
      <pubDate>Sun, 23 Aug 2020 22:03:53 GMT</pubDate>
    </item>
    <item>
      <title>Yards, balls, fences, and software engineering</title>
      <link>http://dangoldin.com/2020/08/20/yards-balls-fences-and-software-engineering/</link>
      <description>Similar to how neighbors feel comfortable retrieving lost balls from each others' yards engineers should feel comfortable working on others' code.</description>
      <author> (Dan Goldin)</author>
      <guid>http://dangoldin.com/2020/08/20/yards-balls-fences-and-software-engineering/</guid>
      <pubDate>Sun, 23 Aug 2020 22:03:51 GMT</pubDate>
    </item>
    <item>
      <title>Logs and Time Series are not the same - Vallified</title>
      <link>https://www.philipotoole.com/logs-and-time-series-are-not-the-same/</link>
      <description>Why do so many systems exist claiming to handle both logs and time series well? The data is very different.</description>
      <author> ()</author>
      <guid>https://www.philipotoole.com/logs-and-time-series-are-not-the-same/</guid>
      <pubDate>Sun, 23 Aug 2020 22:03:48 GMT</pubDate>
    </item>
    <item>
      <title>Newton Papers : College Notebook</title>
      <link>http://cudl.lib.cam.ac.uk/view/MS-ADD-04000/</link>
      <description>Add. 4000 is a small notebook that Newton appears to have begun using in the winter of 1663-4. He continued to write in it extensively over the next two or three years, mostly jotting down personal annotation of his mathematical discoveries. It contains notes on his mathematical and geometrical reading, drawn from Frans van Schooten’s Exercitationummathematicarum (Leiden, 1657) and from his edition of the works of François Viète (Leiden, 1646), as well as from the writings of William Oughtred and of the Oxford mathematician, John Wallis. Newton was particularly interested in Wallis’ Arithmetica infinitorum (included in his Operum Mathematicorum Pars Altera (1656)), in which problems of mathematical methods of reasoning about the quadrature of areas and volumes through consideration of their indivisible elements of line and surface were set out. This notebook also contains evidence of the development of Newton’s own mathematical skill in this period, especially his study of infinite series and development of the binomial theorem, the evolution of the differential calculus, and its application to the problem of quadratures and integration. Although Newton had been inspired in his mathematical work on curved lines and surfaces by reading Wallis and most likely by listening to the lectures that Barrow delivered in 1664, his knowledge of Descartes’ geometry was also critical in these discoveries. This notebook also contains Newton’s investigation of the musical scale in ‘Of Musick’ (c. 1665) [fols 138r-143r]. Musical theory was at the time considered as part of the mathematical sciences. One of the later entries in this notebook derives from Newton’s knowledge of Descartes’ La dioptrique (1637), which Newton probably read in a Latin edition published at Paris in 1656. By September 1664, Newton had learned about the sine law of refraction through his reading of Descartes’ works, and, in the winter of 1665-6, he investigated Descartes’ findings about refraction at curved surfaces. This is probably the date of the composition of the essay ‘Of Refractions’ [fols 26r-33r]. Newton later told Oldenburg that he had first applied himself to grinding lenses that were not spherical in the winter of 1666 and this essay includes the detailed description of a machine for shaping a wheel to a hyperbolical profile, which could later be used for grinding lenses. Such a machine had been discussed in chapter ten of La dioptrique, but Newton improved the design and gave a geometrical demonstration of its operation. Niccolò Guicciardini, Università degli Studi di Milano, and Scott Mandelbrote, Peterhouse, Cambridge. The Key Developments in Newton's Thinking Newton and the fundamental theorem. Folio 120v</description>
      <author> ()</author>
      <guid>http://cudl.lib.cam.ac.uk/view/MS-ADD-04000/</guid>
      <pubDate>Sun, 23 Aug 2020 20:03:45 GMT</pubDate>
    </item>
    <item>
      <title>US Border Patrol Says They Can Create Central Repository Of Traveler Emails, Keep Them For 75 Years - View from the Wing</title>
      <link>https://viewfromthewing.com/us-border-patrol-says-they-can-create-central-repository-of-traveler-emails-keep-them-for-75-years/</link>
      <description>The U.S. government has taken the opportunity during the global pandemic, when people aren't traveling out of the country much, to roll out a new platform for storing information they believe they are entitled to take from people crossing the border.  A new filing reveals how the U.S. Border Patrol will store data from traveler devices centrally, keeping it backed up and searchable for up to 75 years.</description>
      <author> (garyleff)</author>
      <guid>https://viewfromthewing.com/us-border-patrol-says-they-can-create-central-repository-of-traveler-emails-keep-them-for-75-years/</guid>
      <pubDate>Sun, 23 Aug 2020 19:03:49 GMT</pubDate>
    </item>
    <item>
      <title>Making an OS (x86) - Part 1: CPU, Assembly, Booting</title>
      <link>https://www.youtube.com/watch?v=MwPjvJ9ulSc</link>
      <description>In this video you will (hopefully) learn the basis of what the CPU is, what Assembly is like and even use some Assembly code to create a functioning boot sector.

New Video Next Sunday

Ben Eater: https://www.youtube.com/channel/UCS0N5baNlQWJCUrhCEo8WlA

To install nasm and qemu on linux run the following commands:
sudo apt update
sudo apt install nasm
sudo apt-get install qemu-system

To install NASM on windows use this link: shorturl.at/gowT2
(Look, it wasn't even a rickroll after all!)</description>
      <author> (Daedalus Community)</author>
      <guid>https://www.youtube.com/watch?v=MwPjvJ9ulSc</guid>
      <pubDate>Sun, 23 Aug 2020 18:03:46 GMT</pubDate>
    </item>
    <item>
      <title>What's New In DevTools (Chrome 86)  |  Web  |  Google Developers</title>
      <link>https://developers.google.com/web/updates/2020/08/devtools#capture-node-screenshot</link>
      <description>New Media panel, capture node screenshot, Issues tab updates, emulate missing local fonts, inactive users and prefers-reduced-data.</description>
      <author> (By
      
        
          Jecelyn
          Yeen)</author>
      <guid>https://developers.google.com/web/updates/2020/08/devtools#capture-node-screenshot</guid>
      <pubDate>Sun, 23 Aug 2020 18:03:45 GMT</pubDate>
    </item>
    <item>
      <title>Atmosphere Experiment by Sebastian Lague</title>
      <link>https://sebastian.itch.io/atmosphere-experiment</link>
      <description>Available for Windows, macOS</description>
      <author> (hotwaterheater)</author>
      <guid>https://sebastian.itch.io/atmosphere-experiment</guid>
      <pubDate>Sun, 23 Aug 2020 17:18:24 GMT</pubDate>
    </item>
  </channel>
</rss>