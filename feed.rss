<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>Slingshots</title>
      <link>https://xkcd.com/2981/</link>
      <description></description>
      <author> (About)</author>
      <guid>https://xkcd.com/2981/</guid>
      <pubDate>Thu, 05 Sep 2024 03:01:03 GMT</pubDate>
    </item>
    <item>
      <title>Trying out a dedicated server from Hetzner</title>
      <link>http://smalldatum.blogspot.com/2024/09/trying-out-dedicated-server-from-hetzner.html</link>
      <description>I am trying out a dedicated server from Hetzner for my performance work. I am trying the ax162-s  that has 48 cores (96 vCPU), 128G of RAM a...</description>
      <author> (Get link







Facebook







Twitter







Pinterest







Email







Other Apps)</author>
      <guid>http://smalldatum.blogspot.com/2024/09/trying-out-dedicated-server-from-hetzner.html</guid>
      <pubDate>Thu, 05 Sep 2024 00:01:21 GMT</pubDate>
    </item>
    <item>
      <title>Explicit is better than implicit</title>
      <link>https://www.trevorlasn.com/blog/-explicit-is-better-than-implicit/</link>
      <description>Clarity is key: being explicit makes your code more readable and maintainable.</description>
      <author> ()</author>
      <guid>https://www.trevorlasn.com/blog/-explicit-is-better-than-implicit/</guid>
      <pubDate>Thu, 05 Sep 2024 00:01:20 GMT</pubDate>
    </item>
    <item>
      <title>Attention</title>
      <link>https://teckrevie.blogspot.com/2024/09/software-development-outsourcing.html</link>
      <description></description>
      <author> ()</author>
      <guid>https://teckrevie.blogspot.com/2024/09/software-development-outsourcing.html</guid>
      <pubDate>Thu, 05 Sep 2024 00:01:19 GMT</pubDate>
    </item>
    <item>
      <title>How Much Data is Enough for Finetuning an LLM?</title>
      <link>http://devingaffney.com/how-much-data-is-enough-data-for-finetuning-an-llm/</link>
      <description>There&amp;#39;s no shortage of analogies for explaining what an LLM is capable of - one of the best, though, is from this New Yorker article proclaiming it as a &amp;quot;blurry JPEG of the web&amp;quot;. This metaphor is particularly useful for...</description>
      <author> ()</author>
      <guid>http://devingaffney.com/how-much-data-is-enough-data-for-finetuning-an-llm/</guid>
      <pubDate>Thu, 05 Sep 2024 00:01:19 GMT</pubDate>
    </item>
    <item>
      <title>Six questions to ask when looking at an early exit opportunity</title>
      <link>https://www.dylancollins.com/p/six-questions-to-ask-when-looking</link>
      <description>When you either start a company or invest in one, there are a handful of ways to make money out of the whole thing. Generally speaking, the most likely way for both of those two groups to do so together is when someone else buys the company (or at least a large chunk of it).</description>
      <author> (Dylan Collins)</author>
      <guid>https://www.dylancollins.com/p/six-questions-to-ask-when-looking</guid>
      <pubDate>Thu, 05 Sep 2024 00:01:18 GMT</pubDate>
    </item>
    <item>
      <title>CSS @property and the New Style</title>
      <link>https://ryanmulligan.dev/blog/css-property-new-style/</link>
      <description>An exploration of the newly supported at-rule for explicitly defining and animating custom properties in CSS.</description>
      <author> (Ryan Mulligan)</author>
      <guid>https://ryanmulligan.dev/blog/css-property-new-style/</guid>
      <pubDate>Thu, 05 Sep 2024 00:01:18 GMT</pubDate>
    </item>
    <item>
      <title>LSP: the good, the bad, and the ugly</title>
      <link>https://www.michaelpj.com/blog/2024/09/03/lsp-good-bad-ugly.html</link>
      <description>For a few years now I have been working on the Haskell Language Server (HLS), and the lsp library for the LSP protocol and writing LSP servers. Unsurprisingly, I have developed some opinions about the design of the LSP! Recently I gave a talk about HLS and LSP at the Haskell Ecosystem Workshop at Zurihac 2024. One slide featured a hastily-written table of “LSP: the good, the bad, and the ugly”. As I gave the talk I realised that there was plenty to say on that topic, hence this post. Most of what I have to say is about the architecture or design of the protocol. I won’t have much to say about the features that the protocol supports. Other people probably have a lot to say about that (e.g the folks working on languages that use heavy editor integration, like interactive theorem provers). My perspective here is from my time implementing LSP servers, rather than my time using them. I will repeat this a few times, but I want to be very clear that LSP is great and I am very happy that it exists. While this is going to be a mostly critical post, it is criticism that exists in the context of me being happy to be working on editor tooling that is going to Just Work for a wide spectrum of users! Finally, I want to also mention the excellent post LSP could have been better, which is the best critical writing that I’ve read on LSP, and which inspired several of the points I’m going to make.</description>
      <author> ()</author>
      <guid>https://www.michaelpj.com/blog/2024/09/03/lsp-good-bad-ugly.html</guid>
      <pubDate>Thu, 05 Sep 2024 00:01:18 GMT</pubDate>
    </item>
    <item>
      <title>The problem with the “hard problem”</title>
      <link>http://edwardfeser.blogspot.com/2024/09/the-problem-with-hard-problem.html</link>
      <description>Robert Lawrence Kuhn is well-known as the creator and host of the public television series Closer to Truth , an invaluable source of intervi...</description>
      <author> ()</author>
      <guid>http://edwardfeser.blogspot.com/2024/09/the-problem-with-hard-problem.html</guid>
      <pubDate>Thu, 05 Sep 2024 00:01:18 GMT</pubDate>
    </item>
    <item>
      <title>The Machine Economy | Brandon Caruana</title>
      <link>https://caruana.me/the-machine-economy/</link>
      <description>The traditional economy, as we know it, is predicated on the exchange of goods and services using fiat currency, which is underpinned by governmental and institutional trust. This system has enabled t</description>
      <author> (Brandon Caruana)</author>
      <guid>https://caruana.me/the-machine-economy/</guid>
      <pubDate>Thu, 05 Sep 2024 00:01:17 GMT</pubDate>
    </item>
    <item>
      <title>A unix philosophy for web development</title>
      <link>https://plainvanillaweb.com/blog/articles/2024-09-03-unix-philosophy/</link>
      <description>Maybe all web components need to be a light-weight framework is the right set of helper functions.</description>
      <author> (Joeri Sebrechts)</author>
      <guid>https://plainvanillaweb.com/blog/articles/2024-09-03-unix-philosophy/</guid>
      <pubDate>Thu, 05 Sep 2024 00:01:17 GMT</pubDate>
    </item>
    <item>
      <title>Five Geek Social Fallacies</title>
      <link>https://plausiblydeniable.com/five-geek-social-fallacies/</link>
      <description>Within the constellation of allied hobbies and subcultures collectively known as geekdom, one finds many social groups bent under a crushing burden of dysfunction, social drama, and general interp</description>
      <author> ()</author>
      <guid>https://plausiblydeniable.com/five-geek-social-fallacies/</guid>
      <pubDate>Thu, 05 Sep 2024 00:01:17 GMT</pubDate>
    </item>
    <item>
      <title>How does cosine similarity work?</title>
      <link>https://tomhazledine.com/cosine-similarity/</link>
      <description>When working with LLM embeddings, it is often important to be able to compare them. Cosine similarity is the recommended way to do this.</description>
      <author> ()</author>
      <guid>https://tomhazledine.com/cosine-similarity/</guid>
      <pubDate>Thu, 05 Sep 2024 00:01:17 GMT</pubDate>
    </item>
    <item>
      <title>Some thoughts on the YubiKey EUCLEAK Vulnerability</title>
      <link>https://shkspr.mobi/blog/2024/09/some-thoughts-on-the-yubikey-eucleak-vulnerability/</link>
      <description>It looks like everyone&amp;#39;s favourite FIDO token provider might have an unpatchable vulnerability! Much Sturm und Drang from the usual sources. But how bad is it really? Not so bad - but it does expose some weaknesses in the very idea of having physical tokens. First up, as the research paper&amp;#39;s abstract says: The attack […]</description>
      <author> ()</author>
      <guid>https://shkspr.mobi/blog/2024/09/some-thoughts-on-the-yubikey-eucleak-vulnerability/</guid>
      <pubDate>Thu, 05 Sep 2024 00:01:17 GMT</pubDate>
    </item>
    <item>
      <title>1Password vs. Bitwarden</title>
      <link>https://alexn.org/blog/2024/08/20/1password-vs-bitwarden/</link>
      <description>On programming and personal projects</description>
      <author> (Alexandru Nedelcu)</author>
      <guid>https://alexn.org/blog/2024/08/20/1password-vs-bitwarden/</guid>
      <pubDate>Thu, 05 Sep 2024 00:01:17 GMT</pubDate>
    </item>
    <item>
      <title>Maybe You Should Commit Everything You Need to Run Your Code</title>
      <link>https://danielantos.com/articles/commit-everything-you-need-to-run-code/</link>
      <description>I’ve been committing generated code and vendor folders for over a year. I am delighted with the overall simplification of continuous integration, building, and deploying flows. They all complete faster and more reliably. Teams are happier and more productive with these changes. Let me convince you to give it a try!
If you had asked me a couple of years ago what I think about committing generated code or third-party dependencies, I would probably have hit you with a stick.</description>
      <author> ()</author>
      <guid>https://danielantos.com/articles/commit-everything-you-need-to-run-code/</guid>
      <pubDate>Thu, 05 Sep 2024 00:01:16 GMT</pubDate>
    </item>
    <item>
      <title>The Fundamental Law Of Software Dependencies</title>
      <link>https://matklad.github.io/2024/09/03/the-fundamental-law-of-dependencies.html</link>
      <description>Canonical source code for software should include checksums of the content of all its
dependencies.</description>
      <author> ()</author>
      <guid>https://matklad.github.io/2024/09/03/the-fundamental-law-of-dependencies.html</guid>
      <pubDate>Thu, 05 Sep 2024 00:01:16 GMT</pubDate>
    </item>
    <item>
      <title>Disappearing web and what to do about it.</title>
      <link>https://skatkov.com/posts/2024-08-16-disappearing-web-and-what-to-do-about-it-1</link>
      <description></description>
      <author> ()</author>
      <guid>https://skatkov.com/posts/2024-08-16-disappearing-web-and-what-to-do-about-it-1</guid>
      <pubDate>Thu, 05 Sep 2024 00:01:16 GMT</pubDate>
    </item>
    <item>
      <title>Intel Honesty</title>
      <link>https://stratechery.com/2024/intel-honesty/</link>
      <description>The best way to both save Intel and have leading edge manufacturing in the U.S. is to split the company, and for the U.S. government to pick up the bill via purchase guarantees.</description>
      <author> ()</author>
      <guid>https://stratechery.com/2024/intel-honesty/</guid>
      <pubDate>Wed, 04 Sep 2024 23:01:00 GMT</pubDate>
    </item>
    <item>
      <title>Announcing The Assistant | Kagi Blog</title>
      <link>https://blog.kagi.com/announcing-assistant</link>
      <description>Yes, the rumours are true!
Kagi ( https://kagi.com ) has been thoughtfully integrating AI into our search experience, creating a smarter, faster, and more intuitive search.</description>
      <author> (Vladimir Prelovac)</author>
      <guid>https://blog.kagi.com/announcing-assistant</guid>
      <pubDate>Wed, 04 Sep 2024 23:01:00 GMT</pubDate>
    </item>
    <item>
      <title>Discover .NET at DEVintersection Las Vegas 2024 - .NET Blog</title>
      <link>https://devblogs.microsoft.com/dotnet/discover-dotnet-at-dev-intersection-las-vegas-2024/</link>
      <description>Join us at DEVintersection Las Vegas from September 9-12, 2024, for an in-person event featuring the latest in .NET and Azure technologies. Connect with experts, dive into new advancements, and get your questions answered by the people who build the tools you use every day.</description>
      <author> (Mehul Harry)</author>
      <guid>https://devblogs.microsoft.com/dotnet/discover-dotnet-at-dev-intersection-las-vegas-2024/</guid>
      <pubDate>Wed, 04 Sep 2024 21:00:33 GMT</pubDate>
    </item>
    <item>
      <title>Weekly 0075</title>
      <link>https://dev.to/kasuken/weekly-0075-3bgi</link>
      <description>Monday   In the morning, we conducted our bi-weekly sprint planning session, which holds...</description>
      <author> ()</author>
      <guid>https://dev.to/kasuken/weekly-0075-3bgi</guid>
      <pubDate>Wed, 04 Sep 2024 21:00:32 GMT</pubDate>
    </item>
    <item>
      <title>Navigation in Uno Platform: A Comprehensive Guide to Uno.Extensions Navigation</title>
      <link>https://platform.uno/blog/uno-extensions-navigation-guide/</link>
      <description>Learn how to master app navigation in Uno Platform using Uno.Extensions Navigation</description>
      <author> (Uno Platform Team)</author>
      <guid>https://platform.uno/blog/uno-extensions-navigation-guide/</guid>
      <pubDate>Wed, 04 Sep 2024 20:01:07 GMT</pubDate>
    </item>
    <item>
      <title>Firefox will consider a Rust implementation of JPEG-XL by bholley &amp;#183; Pull Request #1064 &amp;#183; mozilla/standards-positions</title>
      <link>https://github.com/mozilla/standards-positions/pull/1064</link>
      <description>Over the past few months, we’ve had some productive conversations with the JPEG-XL team at Google Research around the future of the format in Firefox. Our primary concern has long been the increase...</description>
      <author> (mozilla)</author>
      <guid>https://github.com/mozilla/standards-positions/pull/1064</guid>
      <pubDate>Wed, 04 Sep 2024 17:01:08 GMT</pubDate>
    </item>
    <item>
      <title>Pro EP 104: Keywords to remember in C#?</title>
      <link>https://medium.com/net-tips/pro-ep-104-keywords-to-remember-in-c-81248353b811</link>
      <description>sealed: Prevents a class from being inherited.</description>
      <author> (https://medium.com/@mwaseemzakir)</author>
      <guid>https://medium.com/net-tips/pro-ep-104-keywords-to-remember-in-c-81248353b811</guid>
      <pubDate>Wed, 04 Sep 2024 16:01:08 GMT</pubDate>
    </item>
    <item>
      <title>reMarkable - The future of paper is here</title>
      <link>https://remarkable.com/</link>
      <description>reMarkable - &amp;quot;Replace your notes and printed documents with a digital notebook that feels like paper.&amp;quot;</description>
      <author> ()</author>
      <guid>https://remarkable.com/</guid>
      <pubDate>Wed, 04 Sep 2024 15:01:14 GMT</pubDate>
    </item>
    <item>
      <title>State of S3 - Your Laptop is no Laptop anymore</title>
      <link>https://blog.jeujeus.de/blog/hardware/laptops-will-not-sleep-anymore/</link>
      <description>The state of laptop standby is currently dysfunctional. This personal rant outlines the events that have led to this situation.</description>
      <author> ()</author>
      <guid>https://blog.jeujeus.de/blog/hardware/laptops-will-not-sleep-anymore/</guid>
      <pubDate>Wed, 04 Sep 2024 15:01:13 GMT</pubDate>
    </item>
    <item>
      <title>GitHub - luke8086/retronews: TUI browser for HN and Lobsters emulating classical Usenet and mail readers</title>
      <link>https://github.com/luke8086/retronews</link>
      <description>TUI browser for HN and Lobsters emulating classical Usenet and mail readers - luke8086/retronews</description>
      <author> (luke8086)</author>
      <guid>https://github.com/luke8086/retronews</guid>
      <pubDate>Wed, 04 Sep 2024 13:01:19 GMT</pubDate>
    </item>
    <item>
      <title>Evolution of Software Architectures</title>
      <link>https://www.planetgeek.ch/2024/09/04/evolution-of-software-architectures/</link>
      <description>Evolutionary software architecture has gained much traction lately—at least in my bubble. It is one of my favourite topics, and I have presented and conducted workshops on it for over a decade. So, let me add a thought to the discussion: The evolution of a software architecture has three dimensions: Technical evolution, conceptual evolution, and...</description>
      <author> (Urs Enzler
					
											

					
						View all posts)</author>
      <guid>https://www.planetgeek.ch/2024/09/04/evolution-of-software-architectures/</guid>
      <pubDate>Wed, 04 Sep 2024 11:01:11 GMT</pubDate>
    </item>
  </channel>
</rss>