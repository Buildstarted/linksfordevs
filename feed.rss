<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>Davy Wybiral (@davywtf@mastodon.social)</title>
      <link>https://mastodon.social/@davywtf</link>
      <description>0 Posts, 5 Following, 2 Followers &amp;#183; will code for fun</description>
      <author> ()</author>
      <guid>https://mastodon.social/@davywtf</guid>
      <pubDate>Tue, 26 Apr 2022 01:02:11 GMT</pubDate>
    </item>
    <item>
      <title>twitter/the-algorithm</title>
      <link>https://github.com/twitter/the-algorithm</link>
      <description>Contribute to twitter/the-algorithm development by creating an account on GitHub.</description>
      <author> (twitter)</author>
      <guid>https://github.com/twitter/the-algorithm</guid>
      <pubDate>Tue, 26 Apr 2022 00:01:45 GMT</pubDate>
    </item>
    <item>
      <title>Criticisms &amp;amp; Curation</title>
      <link>https://fujixweekly.com/2022/04/24/criticisms-curation/</link>
      <description>Low Sun over Tetons – Grand Teton NP, WY – Fujifilm X-E4 &amp;amp; 90mm – “Ferrania Solaris FG 400” I receive a lot of feedback—while most of it is positive, some of it is…</description>
      <author> ()</author>
      <guid>https://fujixweekly.com/2022/04/24/criticisms-curation/</guid>
      <pubDate>Mon, 25 Apr 2022 23:04:31 GMT</pubDate>
    </item>
    <item>
      <title>CRT Manufacturing</title>
      <link>https://vintagetek.org/crt-manufacturing/</link>
      <description>This January 4, 1954 Oregonian article features the construction of the new CRT building.</description>
      <author> ()</author>
      <guid>https://vintagetek.org/crt-manufacturing/</guid>
      <pubDate>Mon, 25 Apr 2022 23:03:52 GMT</pubDate>
    </item>
    <item>
      <title>Can you use a WebP file as an Open Graph Protocol image?</title>
      <link>https://www.ctrl.blog/entry/webp-ogp.html</link>
      <description>Do you still need to maintain webpage thumbnails/link previews in legacy image formats, or have apps caught up with the WebP revolution? It’s a bit complicated.</description>
      <author> (https://www.daniel.priv.no/)</author>
      <guid>https://www.ctrl.blog/entry/webp-ogp.html</guid>
      <pubDate>Mon, 25 Apr 2022 23:03:39 GMT</pubDate>
    </item>
    <item>
      <title>Monolith in Cloud</title>
      <link>https://nsirap.com/posts/062-monolith-in-cloud/</link>
      <description>Is a Monolith a good fit for the Cloud or is it reserved only for microservices.</description>
      <author> ()</author>
      <guid>https://nsirap.com/posts/062-monolith-in-cloud/</guid>
      <pubDate>Mon, 25 Apr 2022 23:03:38 GMT</pubDate>
    </item>
    <item>
      <title>Start with Who, not Why</title>
      <link>https://softwaredoug.com/blog/2022/04/23/start-with-who.html</link>
      <description>Work with amazing people you love collaborating with, the rest (mission, purpose, etc) falls out from that.</description>
      <author> (Doug Turnbull)</author>
      <guid>https://softwaredoug.com/blog/2022/04/23/start-with-who.html</guid>
      <pubDate>Mon, 25 Apr 2022 23:03:38 GMT</pubDate>
    </item>
    <item>
      <title>Deploy any Web App to Lambda in 60 seconds | Kevin Wang&amp;#39;s Blog</title>
      <link>https://thekevinwang.com/2022/04/25/any-web-app-on-lambda/</link>
      <description>If it listens on a port, it can be deployed to Lambda!
</description>
      <author> ()</author>
      <guid>https://thekevinwang.com/2022/04/25/any-web-app-on-lambda/</guid>
      <pubDate>Mon, 25 Apr 2022 23:03:38 GMT</pubDate>
    </item>
    <item>
      <title>Six things I sort of believe about making music/art</title>
      <link>https://www.johnwhiles.com/posts/music-production-lessons.html</link>
      <description>I&amp;#39;ve now been recording music at home for most of my life. I started at around 14. I would record things into audacity, sometimes with my friend Cameron, but more often by myself. I had no real idea of how to write, arrange, or record music. Besides a few covers I would mostly record incredibly abstruse &amp;#39;experimental music&amp;#39;. I would make &amp;#39;field recordings&amp;#39; then manually edit them and add random effects I could find until I got something that sounded good to me.&amp;#160; Here&amp;#39;s an example (ignore that this was published in 2016, I recorded it way earlier).</description>
      <author> ()</author>
      <guid>https://www.johnwhiles.com/posts/music-production-lessons.html</guid>
      <pubDate>Mon, 25 Apr 2022 23:03:38 GMT</pubDate>
    </item>
    <item>
      <title>The Problem with Software Methodologies</title>
      <link>https://www.chrisbehan.ca/posts/the-problem-with-software-methodologies</link>
      <description>That hip new methodology won&amp;#39;t solve all your problems.</description>
      <author> ()</author>
      <guid>https://www.chrisbehan.ca/posts/the-problem-with-software-methodologies</guid>
      <pubDate>Mon, 25 Apr 2022 23:03:37 GMT</pubDate>
    </item>
    <item>
      <title>The Trouble With Rewrites</title>
      <link>https://solutionspace.blog/2022/04/25/the-trouble-with-rewrites/</link>
      <description>I have a bit of a soft spot for legacy systems. They have a certain charming ugliness to them. Clearly, there is a ton of challenges with legacy projects, partly related to organizational incentive…</description>
      <author> (Published by danielmescheder
		

		
						
				View all posts by danielmescheder)</author>
      <guid>https://solutionspace.blog/2022/04/25/the-trouble-with-rewrites/</guid>
      <pubDate>Mon, 25 Apr 2022 23:03:37 GMT</pubDate>
    </item>
    <item>
      <title>To vendor, or not to vendor</title>
      <link>https://penkovski.com/post/to-vendor-or-not-to-vendor/</link>
      <description>Should we commit vendor in our Go projects?

Since the introduction of Go modules, the prevalent
opinion on the internet is that we should not commit
the vendor directory of our projects.

The argument against committing vendor is that it’s
unnecessary, because the Go tools can resolve and find
dependencies when needed on-the-fly. All public Go modules are
also hosted by various Go Proxy servers for redundancy.

While I agree that it’s technically
unnecessary and bloats the repo, I’d like to give some
arguments in favour of committing vendor.

Here is a list of arguments for committing vendor:


Building the project doesn’t depend on some code
being available on Github/Gitlab/… or the Go Proxy
servers. Open source projects may disappear because of
censorship, authors incentives, licensing changes or
some other reasons I can’t currently think of.
Not in your repo, not your code.

We may use internal or 3rd party Go modules (private)
which may also disappear or become inaccessible, but if
they are committed in vendor, they are part of our
project and nothing breaks unexpectedly.

Go modules may not follow semantic versioning, which
means the Go tools will rely on the latest commit hash
when fetching them on-the-fly. Repo history may be
rewritten (e.g. rebase) and you, a colleague or your CI job
may end up with different code for the dependencies they use.

Committing vendor can improve your code review process.
Typically, I’m used to committing dependency changes in a
separate commit, so they can be easily viewed if the reviewer
is curious.


Here’s an interesting observation related to bloating the repo.
If I make code review, and a team member has included a new
dependency with 300 files (or updated one with 300 files
changed), I would be pretty curious to deep dive into that
and start a discussion about the code quality, the need for
this change or alternative Go modules. This may lead us to
actually decrease our binary size and overall complexity.

If I just see a single new line in go.mod in new MR, chances
are I won’t even think about it.


CI/CD jobs which perform compilation and build steps need
not waste time and network to download the dependencies
every time the CI job is executed. All needed dependencies
are local and present (go build -mod vendor)

As a pseudo argument I can ask why important open source
Go projects like Kubernetes
are committing vendor, if it’s not necessary?


Conclusion

For my own peace of mind I would always prefer to commit the
vendor directory alongside go.mod and go.sum
while at the same time try to keep the project dependencies
at minimum.


  
    
      warning
    
  
  The vendor directory SHOULD NOT be committed for Go
libraries, frameworks or code which doesn’t produce
executable binaries, unless you have a really good
reason to do it.

</description>
      <author> (penkovski)</author>
      <guid>https://penkovski.com/post/to-vendor-or-not-to-vendor/</guid>
      <pubDate>Mon, 25 Apr 2022 23:03:37 GMT</pubDate>
    </item>
    <item>
      <title>.NET Framework April 2022 Cumulative Update Preview</title>
      <link>https://devblogs.microsoft.com/dotnet/framework-april-2022-updates/</link>
      <description>We have released the April 2022 Cumulative Update Preview for .NET Framework with several quality and reliability improvements.</description>
      <author> (Salini A)</author>
      <guid>https://devblogs.microsoft.com/dotnet/framework-april-2022-updates/</guid>
      <pubDate>Mon, 25 Apr 2022 23:03:37 GMT</pubDate>
    </item>
    <item>
      <title>Tricks for dealing with “reviewer’s block”, for the beginner engineer</title>
      <link>https://www.karthiknaidu.xyz/tricks-for-dealing-with-reviewers-block-for-the-beginner-engineer/</link>
      <description>Similar to writer&amp;#39;s block, that authors experience, early on as an engineer I struggled with ‘reviewer block’ i.e. having a hard time providing valuable feedback when reviewing an engineering design. Here are some tricks that I’ve picked up over the years that proved valuable. Build itI start with</description>
      <author> ()</author>
      <guid>https://www.karthiknaidu.xyz/tricks-for-dealing-with-reviewers-block-for-the-beginner-engineer/</guid>
      <pubDate>Mon, 25 Apr 2022 23:03:37 GMT</pubDate>
    </item>
    <item>
      <title>Intro to BPF CO-RE</title>
      <link>https://layalina.io/2022/04/23/intro-to-bpf-co-re.html</link>
      <description>In the past I’ve been very happy in using BCC and bpftrace to jump into the BPF wagon. But since I spend a lot of my time on embedded systems (mostly Android phones nowadays), getting these tools on these systems is a bit of a headache.</description>
      <author> ()</author>
      <guid>https://layalina.io/2022/04/23/intro-to-bpf-co-re.html</guid>
      <pubDate>Mon, 25 Apr 2022 23:03:36 GMT</pubDate>
    </item>
    <item>
      <title>nix-shell, but make it lovely</title>
      <link>https://t-ravis.com/post/nix/nix-make/</link>
      <description>I&amp;#39;m pretty happy with a pattern I stumbled into last year for using Nix to provision dependencies for a task-/utility-oriented Makefile.
For a while I&amp;#39;ve wanted the rough equivalent of a nix-shell shebang--but for Makefiles.</description>
      <author> ()</author>
      <guid>https://t-ravis.com/post/nix/nix-make/</guid>
      <pubDate>Mon, 25 Apr 2022 23:03:36 GMT</pubDate>
    </item>
    <item>
      <title>One year of sales</title>
      <link>https://nts.strzibny.name/one-year-of-sales/</link>
      <description>A breakdown of selling 640 copies of my first product Deployment from Scratch.</description>
      <author> (strzibny)</author>
      <guid>https://nts.strzibny.name/one-year-of-sales/</guid>
      <pubDate>Mon, 25 Apr 2022 23:03:36 GMT</pubDate>
    </item>
    <item>
      <title>Speeding up Prettier locally and on your CI with dprint</title>
      <link>https://david.deno.dev/posts/faster-prettier-with-dprint/</link>
      <description>Example of reducing format checking with Prettier from ~40s to under 1s on the second run.</description>
      <author> (David Sherret)</author>
      <guid>https://david.deno.dev/posts/faster-prettier-with-dprint/</guid>
      <pubDate>Mon, 25 Apr 2022 23:03:36 GMT</pubDate>
    </item>
    <item>
      <title>Communities Moving to Discord Has Resulted In Millions of Questions and Answers Being Lost — It…</title>
      <link>https://medium.com/@rhys_80649/the-move-to-discord-from-forums-has-resulted-in-millions-of-questions-and-answers-being-lost-it-6ca6d7c63b36</link>
      <description>Discord has become a replacement for forums for thousands of communities, causing a massive decrease in the accessibility of information…</description>
      <author> (https://medium.com/@rhys_80649)</author>
      <guid>https://medium.com/@rhys_80649/the-move-to-discord-from-forums-has-resulted-in-millions-of-questions-and-answers-being-lost-it-6ca6d7c63b36</guid>
      <pubDate>Mon, 25 Apr 2022 22:01:52 GMT</pubDate>
    </item>
    <item>
      <title>Cutest-Sounding Scientific Effects</title>
      <link>https://xkcd.com/2611/</link>
      <description></description>
      <author> (About)</author>
      <guid>https://xkcd.com/2611/</guid>
      <pubDate>Mon, 25 Apr 2022 22:01:50 GMT</pubDate>
    </item>
    <item>
      <title>Multiple Directories for Static Files in ASP.NET Core
</title>
      <link>https://wildermuth.com/2022/04/25/multiple-directories-for-static-files-in-aspnetcore/</link>
      <description>My recent video elicited several interesting responses. But immediately, I noticed that using ASP.NET Core&amp;#39;s cache busting (e.g. asp-append-version) wasn&amp;#39;t working quite right for additional StaticFiles middleware. Evidently, I wasn&amp;#39;t doing it correctly. Let&amp;#39;s walk you through it.
</description>
      <author> ()</author>
      <guid>https://wildermuth.com/2022/04/25/multiple-directories-for-static-files-in-aspnetcore/</guid>
      <pubDate>Mon, 25 Apr 2022 21:02:41 GMT</pubDate>
    </item>
    <item>
      <title>Visual Studio 2022 17.2 Preview 3 Intros All-In-One Search -- Visual Studio Magazine</title>
      <link>https://visualstudiomagazine.com/articles/2022/04/25/vs2022-search.aspx</link>
      <description>Visual Studio 2022 v17.2 Preview 3 introduces an All-In-One searching experience for finding symbols in code, IDE features, files and more.
</description>
      <author> (By David Ramel04/25/2022)</author>
      <guid>https://visualstudiomagazine.com/articles/2022/04/25/vs2022-search.aspx</guid>
      <pubDate>Mon, 25 Apr 2022 21:02:30 GMT</pubDate>
    </item>
    <item>
      <title>[Last Week in .NET #86] – Spring has Sprung and so have Security breaches</title>
      <link>https://georgestocker.com/2022/04/25/last-week-in-net-86-spring-has-sprung-and-so-have-security-breaches/</link>
      <description>It’s been a while, and I appreciate all the well-wishes I received from you all. Unfortunately my FIL is still in the hospital (he’s been in the hospital for 105 days, which is itself a…</description>
      <author> ()</author>
      <guid>https://georgestocker.com/2022/04/25/last-week-in-net-86-spring-has-sprung-and-so-have-security-breaches/</guid>
      <pubDate>Mon, 25 Apr 2022 21:02:29 GMT</pubDate>
    </item>
    <item>
      <title>Apply optimizations to the client as well &amp;#183; davidfowl/BombRMan@f813bdb</title>
      <link>https://github.com/davidfowl/BombRMan/commit/f813bdbaee41c5626b3954665a13ec40e1998825</link>
      <description>- Make the representation of keys on the client more efficient. This reduces the amount of data sent to the server to perform an update.</description>
      <author> (davidfowl)</author>
      <guid>https://github.com/davidfowl/BombRMan/commit/f813bdbaee41c5626b3954665a13ec40e1998825</guid>
      <pubDate>Mon, 25 Apr 2022 21:02:29 GMT</pubDate>
    </item>
    <item>
      <title>11 Principles of Engineering Management</title>
      <link>https://acjay.com/2022/03/11/11-principles-of-engineering-management/</link>
      <description>More than 2 years ago, I decided to try to create a brief, digestible manual on the expectations of management for senior engineers at my company who are considering making the shift. At the time, …</description>
      <author> (Alan Johnson)</author>
      <guid>https://acjay.com/2022/03/11/11-principles-of-engineering-management/</guid>
      <pubDate>Mon, 25 Apr 2022 20:02:21 GMT</pubDate>
    </item>
    <item>
      <title>Visual Studio Feedback</title>
      <link>https://developercommunity.visualstudio.com/t/Error-Net-Core-5-DirectoryGetDirect/1696966</link>
      <description>Visual Studio Feedback</description>
      <author> (ИИИванов Иван Иванович - Reported Mar 19, 2022)</author>
      <guid>https://developercommunity.visualstudio.com/t/Error-Net-Core-5-DirectoryGetDirect/1696966</guid>
      <pubDate>Mon, 25 Apr 2022 19:02:08 GMT</pubDate>
    </item>
    <item>
      <title>Japan&amp;#39;s Hometown Tax | Kalzumeus Software</title>
      <link>https://www.kalzumeus.com/2018/10/19/japanese-hometown-tax/</link>
      <description>This is outside of my normal software-focused beat, but I met some folks who were very interested in public policy recently. I found, to my surprise, that I probably understand one innovative Japanese tax policy better than very well-informed people who geek out about tax policy [0].</description>
      <author> ()</author>
      <guid>https://www.kalzumeus.com/2018/10/19/japanese-hometown-tax/</guid>
      <pubDate>Mon, 25 Apr 2022 19:02:06 GMT</pubDate>
    </item>
    <item>
      <title>Announcing the Hare programming language</title>
      <link>https://harelang.org/blog/2022-04-25-announcing-hare/</link>
      <description>Hare is a systems programming language designed to be simple, stable, and
robust. Hare uses a static type system, manual memory management, and a minimal
runtime. It is well-suited to writing operating systems, system tools,
compilers, networking software, and other low-level, high performance tasks.</description>
      <author> ()</author>
      <guid>https://harelang.org/blog/2022-04-25-announcing-hare/</guid>
      <pubDate>Mon, 25 Apr 2022 18:02:33 GMT</pubDate>
    </item>
    <item>
      <title>Resetting Marten Database State Between Tests</title>
      <link>https://jeremydmiller.com/2022/04/25/resetting-marten-database-state-between-tests/</link>
      <description>TL;DR: Marten has a new method in V5 called ResetAllData() that’s very handy for rolling back database state to a known point in automated tests. I’m a big believer in utilizing interme…</description>
      <author> (jeremydmiller)</author>
      <guid>https://jeremydmiller.com/2022/04/25/resetting-marten-database-state-between-tests/</guid>
      <pubDate>Mon, 25 Apr 2022 17:02:09 GMT</pubDate>
    </item>
    <item>
      <title>Sharing coding style and Roslyn analyzers across projects - G&amp;#233;rald Barr&amp;#233;</title>
      <link>https://www.meziantou.net/sharing-coding-style-and-roslyn-analyzers-across-projects.htm</link>
      <description>In this post, I describe how to share a coding style and Roslyn analyzers across multiple projects in .NET using a NuGet package.</description>
      <author> (G&amp;#233;rald Barr&amp;#233;)</author>
      <guid>https://www.meziantou.net/sharing-coding-style-and-roslyn-analyzers-across-projects.htm</guid>
      <pubDate>Mon, 25 Apr 2022 15:02:12 GMT</pubDate>
    </item>
    <item>
      <title>Production postmortem: The network latency and the I/O spikes</title>
      <link>https://ayende.com/blog/197091-B/production-postmortem-the-network-latency-and-the-i-o-spikes</link>
      <description>A customer called us about an elevated I/O load in their system after an upgrade to RavenDB 5.3 from RavenDB 4.2. We looked into that, and we saw a small (bu...</description>
      <author> ()</author>
      <guid>https://ayende.com/blog/197091-B/production-postmortem-the-network-latency-and-the-i-o-spikes</guid>
      <pubDate>Mon, 25 Apr 2022 15:02:11 GMT</pubDate>
    </item>
    <item>
      <title>Samay - Home</title>
      <link>https://vacationtime.herokuapp.com/</link>
      <description>Year :</description>
      <author> ()</author>
      <guid>https://vacationtime.herokuapp.com/</guid>
      <pubDate>Mon, 25 Apr 2022 14:01:48 GMT</pubDate>
    </item>
    <item>
      <title>Why LSP?</title>
      <link>https://matklad.github.io//2022/04/25/why-lsp.html</link>
      <description>LSP (language server protocol) is fairly popular today.There’s a standard explanation of why that is the case.You probably have seen this picture before:</description>
      <author> ()</author>
      <guid>https://matklad.github.io//2022/04/25/why-lsp.html</guid>
      <pubDate>Mon, 25 Apr 2022 14:01:47 GMT</pubDate>
    </item>
    <item>
      <title>Email Routing Insights</title>
      <link>https://blog.cloudflare.com/email-routing-insights/</link>
      <description>Insights and Logs are now available to everyone using Cloudflare Email Routing</description>
      <author> (Jo&amp;#227;o Sousa Botto)</author>
      <guid>https://blog.cloudflare.com/email-routing-insights/</guid>
      <pubDate>Mon, 25 Apr 2022 13:03:13 GMT</pubDate>
    </item>
    <item>
      <title>The Curse of Systems Thinkers (Part 1)</title>
      <link>https://blog.relyabilit.ie/the-curse-of-systems-thinkers/</link>
      <description>Somewhere between 15 and 20 years ago, I worked for a company. It was a very prestigious company, and it was a glorious and frustrating time. The company did amazing things. Literally unbelievable achievements - from my point of view anyway. But this was coupled with levels of chaos that</description>
      <author> ()</author>
      <guid>https://blog.relyabilit.ie/the-curse-of-systems-thinkers/</guid>
      <pubDate>Mon, 25 Apr 2022 12:03:10 GMT</pubDate>
    </item>
    <item>
      <title>Distributed Caching in ASP.NET Core - Code Maze</title>
      <link>https://code-maze.com/aspnetcore-distributed-caching/</link>
      <description>In this article we&amp;#39;ll talk how distributed caching works and how to implement Redis Cache in an ASP.NET Core Web API application</description>
      <author> (()x)</author>
      <guid>https://code-maze.com/aspnetcore-distributed-caching/</guid>
      <pubDate>Mon, 25 Apr 2022 11:01:50 GMT</pubDate>
    </item>
    <item>
      <title>How easy is it in 2022 to find a SHA1 collision?</title>
      <link>https://crypto.stackexchange.com/questions/99767/how-easy-is-it-in-2022-to-find-a-sha1-collision</link>
      <description>Most of the answers I can find date to years back where the first collision(s) were found, but hardware mainly GPUs have progressed a lot in the past few years (with for example the new line of 3090s </description>
      <author> (HormozHormoz
        
            59711 gold badge33 silver badges99 bronze badges)</author>
      <guid>https://crypto.stackexchange.com/questions/99767/how-easy-is-it-in-2022-to-find-a-sha1-collision</guid>
      <pubDate>Mon, 25 Apr 2022 10:01:42 GMT</pubDate>
    </item>
    <item>
      <title>Annotating your C# code - Migrating to nullable reference types - Part 3</title>
      <link>https://blog.maartenballiauw.be/post/2022/04/25/annotating-your-csharp-code-migrating-to-nullable-reference-types-part-3.html</link>
      <description>In the previous post, we looked at some internals of C# nullable reference types, and the nullable annotation context.</description>
      <author> (Maarten Balliauw)</author>
      <guid>https://blog.maartenballiauw.be/post/2022/04/25/annotating-your-csharp-code-migrating-to-nullable-reference-types-part-3.html</guid>
      <pubDate>Mon, 25 Apr 2022 09:01:38 GMT</pubDate>
    </item>
    <item>
      <title>var num = 303; var title = $$&amp;quot;&amp;quot;&amp;quot;Episode #{{num}}&amp;quot;&amp;quot;&amp;quot;;</title>
      <link>https://www.mergeconflict.fm/303</link>
      <description>C# 11 is coming in hot with some awesome new previews and we break down our favorite features.</description>
      <author> (soundbite.fm)</author>
      <guid>https://www.mergeconflict.fm/303</guid>
      <pubDate>Mon, 25 Apr 2022 09:01:37 GMT</pubDate>
    </item>
    <item>
      <title>Text Summarization with Huggingface Transformers and Python</title>
      <link>https://rubikscode.net/2022/04/25/text-summarization-with-huggingface-transformers/</link>
      <description>In this article we explore three text summarization algorithms which can be applied with Huggingface transformers.</description>
      <author> (Jingqing Zhang (张敬卿))</author>
      <guid>https://rubikscode.net/2022/04/25/text-summarization-with-huggingface-transformers/</guid>
      <pubDate>Mon, 25 Apr 2022 09:01:37 GMT</pubDate>
    </item>
    <item>
      <title>Implementing Rate Limiting in ASP.NET Core Web API</title>
      <link>https://dotnetthoughts.net/implement-rate-limiting-in-asp-net-core-web-api/</link>
      <description>This post is about implementing Rate Limiting in ASP.NET Core Web API. Rate Limiting is the process of controlling the number of requests for a resource within a specific time window. Each unique user/IP address/client will have a limitation on the number of requests to an API endpoint.</description>
      <author> (Anuraj)</author>
      <guid>https://dotnetthoughts.net/implement-rate-limiting-in-asp-net-core-web-api/</guid>
      <pubDate>Mon, 25 Apr 2022 07:02:03 GMT</pubDate>
    </item>
    <item>
      <title>More optimizations &amp;#183; davidfowl/BombRMan@b26e47a</title>
      <link>https://github.com/davidfowl/BombRMan/commit/b26e47a482eeea044d8ad39c8acca10be6d87ade</link>
      <description>- Pack the key state into 32 bytes
- Reuse server status</description>
      <author> (davidfowl)</author>
      <guid>https://github.com/davidfowl/BombRMan/commit/b26e47a482eeea044d8ad39c8acca10be6d87ade</guid>
      <pubDate>Mon, 25 Apr 2022 07:02:01 GMT</pubDate>
    </item>
    <item>
      <title>Remove enumerator alloctions on game loop &amp;#183; davidfowl/BombRMan@32025c3</title>
      <link>https://github.com/davidfowl/BombRMan/commit/32025c398a27669ef1e292e14644eaea48ea88d9</link>
      <description>- Remove ConcurrencyDictionary enumerator allocations by using a customer data structure that&amp;#39;s backed by an immutable array.</description>
      <author> (davidfowl)</author>
      <guid>https://github.com/davidfowl/BombRMan/commit/32025c398a27669ef1e292e14644eaea48ea88d9</guid>
      <pubDate>Mon, 25 Apr 2022 07:02:01 GMT</pubDate>
    </item>
    <item>
      <title>Uno Platform 4.2 - .NET 6 Mobile RC1, Perf Boost, 190+ Improvements</title>
      <link>https://platform.uno/blog/4-2-release/</link>
      <description>.NET 6 Mobile RC 1 Support ✅ VisualStudio 2022 17.2 Preview 4 Support ✅Skia+GTK OpenGL Renderer ✅Performance Updates ✅190+ more fixes and features</description>
      <author> ()</author>
      <guid>https://platform.uno/blog/4-2-release/</guid>
      <pubDate>Mon, 25 Apr 2022 06:01:46 GMT</pubDate>
    </item>
    <item>
      <title>2fsharp/csharp2fsharp.md at master &amp;#183; knocte/2fsharp</title>
      <link>https://github.com/knocte/2fsharp/blob/master/csharp2fsharp.md</link>
      <description>Contribute to knocte/2fsharp development by creating an account on GitHub.</description>
      <author> ()</author>
      <guid>https://github.com/knocte/2fsharp/blob/master/csharp2fsharp.md</guid>
      <pubDate>Mon, 25 Apr 2022 06:01:45 GMT</pubDate>
    </item>
    <item>
      <title>Running and Debugging Multiplatform .NET (.NET Core, .NET5 and .NET6) GUI and Console Applications on Windows Subsystem for Linux (WSL)</title>
      <link>https://www.codeproject.com/Articles/5330464/Running-and-Debugging-Multiplatform-NET-NET-Core-N</link>
      <description>This article describes how to test and debug .NET/Avalonia Linux applications using WSL.</description>
      <author> (Nick Polyak)</author>
      <guid>https://www.codeproject.com/Articles/5330464/Running-and-Debugging-Multiplatform-NET-NET-Core-N</guid>
      <pubDate>Mon, 25 Apr 2022 06:01:45 GMT</pubDate>
    </item>
    <item>
      <title>ASP.NET Core: Custom Controller Action Parameter Binding using TryParse in Minimal APIs</title>
      <link>https://jaliyaudagedara.blogspot.com/2022/04/aspnet-core-custom-controller-action.html</link>
      <description>.NET, .NET Core, ASP.NET, ASP.NET Core, Visual Studio, Jaliya Udagedara</description>
      <author> ()</author>
      <guid>https://jaliyaudagedara.blogspot.com/2022/04/aspnet-core-custom-controller-action.html</guid>
      <pubDate>Mon, 25 Apr 2022 06:01:45 GMT</pubDate>
    </item>
    <item>
      <title>Visual Studio Container integration - Redis cache</title>
      <link>https://youtu.be/NItSh4hQ8HI</link>
      <description>Video overview of the ASP.NET Container integration feature in Visual Studio 2022.Demo &amp;amp; desktop setup is inspired by this Video: https://www.youtube.com/wat...</description>
      <author> (CWI Database Architectures
  
  
  
    CWI Database Architectures
  






    •)</author>
      <guid>https://youtu.be/NItSh4hQ8HI</guid>
      <pubDate>Mon, 25 Apr 2022 05:01:39 GMT</pubDate>
    </item>
    <item>
      <title>The Universe of Discourse : Pushing back against contract demands is scary but please try anyway</title>
      <link>https://blog.plover.com/law/contracts-3.html</link>
      <description>Pushing back against contract demands is scary but please try anyway</description>
      <author> ()</author>
      <guid>https://blog.plover.com/law/contracts-3.html</guid>
      <pubDate>Mon, 25 Apr 2022 05:01:37 GMT</pubDate>
    </item>
    <item>
      <title>Patching an Embedded OS from 1996 with Ghidra • Peter Sobot</title>
      <link>http://blog.petersobot.com/patching-the-k2500</link>
      <description>For reasons I won’t get into, I’ve been working on a tricky reverse engineering puzzle recently: how to patch the operating system of a 26-year-old synthesizer. To be specific, the Kurzweil K2500, a sample-based synthesizer released in 1996. As... | Peter Sobot | I teach computers to listen to music. &amp;#127464;&amp;#127462;&amp;#127926;&amp;#128104;&amp;#127996;‍&amp;#128300;&amp;#129345;&amp;#127929;&amp;#127928; </description>
      <author> ()</author>
      <guid>http://blog.petersobot.com/patching-the-k2500</guid>
      <pubDate>Mon, 25 Apr 2022 05:01:37 GMT</pubDate>
    </item>
    <item>
      <title>Why Success Is Often Elusive at the Highest Echelons</title>
      <link>https://copyconstruct.medium.com/why-success-is-often-elusive-at-the-highest-echelons-3e02e4dd3e7f</link>
      <description>During recent discussions with friends, one common theme that crops up very frequently is how success has remained rather elusive to recent…</description>
      <author> (https://copyconstruct.medium.com)</author>
      <guid>https://copyconstruct.medium.com/why-success-is-often-elusive-at-the-highest-echelons-3e02e4dd3e7f</guid>
      <pubDate>Mon, 25 Apr 2022 04:01:47 GMT</pubDate>
    </item>
    <item>
      <title>Site Reliability Engineering – Service Level Indicators, Objectives, and Agreements</title>
      <link>https://www.codingblocks.net/podcast/site-reliability-engineering-slis-slos-slas/</link>
      <description>Welcome to the morning edition of Coding Blocks as we dive into what service level indicators, objectives, and agreements are while Michael clearly needs more sleep, Allen doesn&amp;#39;t know how web pages work anymore, and Joe isn&amp;#39;t allowed to beg.</description>
      <author> (About Michael Outlaw)</author>
      <guid>https://www.codingblocks.net/podcast/site-reliability-engineering-slis-slos-slas/</guid>
      <pubDate>Mon, 25 Apr 2022 04:01:47 GMT</pubDate>
    </item>
    <item>
      <title>Remove extra allocations from update loop &amp;#183; davidfowl/BombRMan@a7ac226</title>
      <link>https://github.com/davidfowl/BombRMan/commit/a7ac22679bec65564f9f751cb46b74460535a62d</link>
      <description>- Use stack spans to avoid allocating points on the heap
- Precompute all hit targets for all possible directions to avoid enumerator allocations</description>
      <author> (davidfowl)</author>
      <guid>https://github.com/davidfowl/BombRMan/commit/a7ac22679bec65564f9f751cb46b74460535a62d</guid>
      <pubDate>Mon, 25 Apr 2022 04:01:45 GMT</pubDate>
    </item>
    <item>
      <title>Remove keyboard state allocations &amp;#183; davidfowl/BombRMan@a64d8ec</title>
      <link>https://github.com/davidfowl/BombRMan/commit/a64d8ec8178c5958b2f5337c90af9e69935b7b27</link>
      <description>- Use array pool and object pool for keyboard state allocations
- Use custom JSON converter to remove excess allocations
- This leaves most of the overhead to be SignalR specific.</description>
      <author> (davidfowl)</author>
      <guid>https://github.com/davidfowl/BombRMan/commit/a64d8ec8178c5958b2f5337c90af9e69935b7b27</guid>
      <pubDate>Mon, 25 Apr 2022 04:01:45 GMT</pubDate>
    </item>
    <item>
      <title>Use some new features &amp;#183; davidfowl/BombRMan@d69ad03</title>
      <link>https://github.com/davidfowl/BombRMan/commit/d69ad03171aaa784da67551a6ee397dde1e7c4dc</link>
      <description>- ValueTuples
- PeriodicTimer</description>
      <author> (davidfowl)</author>
      <guid>https://github.com/davidfowl/BombRMan/commit/d69ad03171aaa784da67551a6ee397dde1e7c4dc</guid>
      <pubDate>Mon, 25 Apr 2022 04:01:45 GMT</pubDate>
    </item>
  </channel>
</rss>