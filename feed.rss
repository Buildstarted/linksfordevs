<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>Verifying code against architecture with Metalama</title>
      <link>https://goatreview.com/verifying-code-against-architecture-with-metalama/</link>
      <description>In my previous article, I demonstrated how Metalama can generate boilerplate code during compilation, automating the repetitive yet necessary tasks. But Metalama doesn’t stop there. If Metalama were a goat, its second horn would be its ability to validate source code against architectural rules — ensuring that your code stays</description>
      <author> (Gael Fraiteur)</author>
      <guid>https://goatreview.com/verifying-code-against-architecture-with-metalama/</guid>
      <pubDate>Wed, 30 Oct 2024 10:02:07 GMT</pubDate>
    </item>
    <item>
      <title>Filtering and Sorting Data with LINQ in C#</title>
      <link>https://malshikay.medium.com/filtering-and-sorting-data-with-linq-in-c-a509bc478d2a</link>
      <description>Filtering and Sorting Data with LINQ in C#: A Comprehensive Guide to Where, OrderBy, and ThenBy</description>
      <author> (https://malshikay.medium.com)</author>
      <guid>https://malshikay.medium.com/filtering-and-sorting-data-with-linq-in-c-a509bc478d2a</guid>
      <pubDate>Wed, 30 Oct 2024 10:02:06 GMT</pubDate>
    </item>
    <item>
      <title>Australia/Lord_Howe is the weirdest timezone</title>
      <link>https://ssoready.com/blog/engineering/truths-programmers-timezones/</link>
      <description>Timezones are weird. But only finitely so. Here&amp;#39;s the exact conceptual model you should have of them.</description>
      <author> ()</author>
      <guid>https://ssoready.com/blog/engineering/truths-programmers-timezones/</guid>
      <pubDate>Wed, 30 Oct 2024 10:02:06 GMT</pubDate>
    </item>
    <item>
      <title>3 Things That CATAPULTED My Software Engineering Journey</title>
      <link>https://youtube.com/watch?v=oWO2jn_Nrug</link>
      <description>Reflecting on our journeys isn&amp;#39;t always about learning from failures...

Sometimes things actually worked REALLY well!

In this video, I wanted to share three things that I think worked really well for me in my software engineering journey.

Remember: everyone will have their own journey. Just because these worked well for me doesn&amp;#39;t mean that you need to mirror them.

----
&amp;#128273; Membership &amp;amp; Subscriptions:
- &amp;#128232; Weekly Newsletter: https://subscribe.devleader.ca
- &amp;#127960;️ Private Discord Community: https://discord.com/invite/TVY79BZ3Wy
- &amp;#128253;️ YouTube Membership: https://www.youtube.com/@DevLeader/join

&amp;#129504; Courses:
- All Courses: https://www.devleader.ca/courses
- Nailing The Behavioral Interview: https://dometrain.com/course/career-nailing-the-behavioral-interview/?affcode=1115529_nl-teyzg
- Getting Started with C#: https://dometrain.com/course/getting-started-csharp?affcode=1115529_nl-teyzg
- Deep dive C#: https://dometrain.com/course/deep-dive-csharp?affcode=1115529_nl-teyzg
- C# Zero to Hero BUNDLE: https://dometrain.com/bundle/from-zero-to-hero-csharp/?affcode=1115529_nl-teyzg
- Reflection in .NET: https://dometrain.com/course/from-zero-to-hero-reflection-in-dotnet/?affcode=1115529_nl-teyzg
- Refactoring For C# Devs: https://dometrain.com/course/from-zero-to-hero-refactoring-for-csharp-developers?affcode=1115529_nl-teyzg
- [FREE] Intro to Software Development: https://www.youtube.com/playlist?list=PLzATctVhnsggb3lj53T8fJSK6LJQFUyKS

&amp;#128483;️ Social Media &amp;amp; Links:
- All My Links: https://linktr.ee/devleader
- Vlogs:  @DevLeaderBTS @CodeCommute 
- Blog: https://www.devleader.ca/
- TikTok: https://www.tiktok.com/@devleader
- LinkedIn: https://www.linkedin.com/in/nickcosentino
- Threads: https://threads.net/@dev.leader
- Twitter: https://twitter.com/DevLeaderCa
- Facebook: https://www.facebook.com/DevLeaderCa
- Instagram: https://www.instagram.com/dev.leader
- GitHub: https://github.com/ncosentino/
- Twitch: https://twitch.tv/devleaderca
- YouTube: https://youtube.com/@DevLeader?sub_confirmation=1

❤️ Affiliations &amp;amp; Products/Services That I Love:
- @BrandGhostAI for all of my content creation: https://brandghost.ai
- AI shorts helper Opus Clip: https://opus.pro/?via=2f9e97
- VPS hosting from RackNerd: https://my.racknerd.com/aff.php?aff=9013
- VPS hosting from Contabo: https://www.jdoqocy.com/click-101028632-12454592
- Newsletter platform ConvertKit: https://convertkit.com/?lmref=c5X7KQ
- Newsletter referral system SparkLoop: https://dash.sparkloop.app/signup?aff=9fe76c8b
----

#softwareengineering #softwaredeveloper #softwareengineer</description>
      <author> (Dev Leader)</author>
      <guid>https://youtube.com/watch?v=oWO2jn_Nrug</guid>
      <pubDate>Wed, 30 Oct 2024 04:01:34 GMT</pubDate>
    </item>
    <item>
      <title>Superhuman Speech</title>
      <link>https://www.zachocean.com/posts/superhuman-speech/</link>
      <description>Sometimes it feels like superhuman text to speech (and generative audio in general) is solved.
But it’s not—even though TTS models are close or even superior to average humans in tasks like audiobook narration, they’re still way worse than the best humans in most speech domains.
What follows is a collection of links that I believe represent the highest level of human speech generation.
This list was made off the top of my head in just a few minutes, so please send me more that come to mind.</description>
      <author> (Zach Ocean)</author>
      <guid>https://www.zachocean.com/posts/superhuman-speech/</guid>
      <pubDate>Wed, 30 Oct 2024 00:02:03 GMT</pubDate>
    </item>
    <item>
      <title>What I Learned Scaling Transformer Models at Cohere</title>
      <link>https://vgpu.io/blog/transformer-scaling-at-cohere/</link>
      <description>&amp;#128075; Introduction
Hello, I&amp;#39;m Arthur Rasmusson. I&amp;#39;ve contributed to open-source projects for GPU virtualization at LibVF.IO and Open-IOV.org. In 2023, I joined Cohere&amp;#39;s model efficiency team. Over the past year, I dedicated myself to projects aimed at enhancing our GPU cluster for AI inference capabilities and large-scale machine learning tasks.
This is the story of my journey at Cohere, from initiating the GPUDirect Storage project to defining new standard bars for efficiency and power in GPU &amp;amp; AI infrastructure.</description>
      <author> (Arthur Hanson Rasmusson)</author>
      <guid>https://vgpu.io/blog/transformer-scaling-at-cohere/</guid>
      <pubDate>Wed, 30 Oct 2024 00:02:01 GMT</pubDate>
    </item>
    <item>
      <title>Tips for creating merge commits</title>
      <link>https://www.brandonpugh.com/blog/tips-for-creating-merge-commits/</link>
      <description>I’ve reviewed quite a few pull requests in recent years and I’ve noticed some less-than-ideal practices when it comes to creating merge commits so I thought I’d list some things you can do to make life a little easier for someone reviewing your code.
Make the commit message as useful as possible A lot has been written about how to write good commit messages, but I rarely see the advice applied to merge commits.</description>
      <author> (Brandon Pugh)</author>
      <guid>https://www.brandonpugh.com/blog/tips-for-creating-merge-commits/</guid>
      <pubDate>Wed, 30 Oct 2024 00:01:59 GMT</pubDate>
    </item>
    <item>
      <title>The trailing dot in domain names, a detail that is often poorly managed - Xavier Lacot</title>
      <link>https://lacot.org/blog/2024/10/29/the-trailing-dot-in-domain-names-a-detail-that-is-often-poorly-managed.html</link>
      <description>While inspecting traffic logs for my website in redirection.io recently, I noticed several requests logged on the lacot.org. domain name. Did you see the final trailing dot in the hostname? I first thought…</description>
      <author> (Xavier Lacot)</author>
      <guid>https://lacot.org/blog/2024/10/29/the-trailing-dot-in-domain-names-a-detail-that-is-often-poorly-managed.html</guid>
      <pubDate>Wed, 30 Oct 2024 00:01:58 GMT</pubDate>
    </item>
    <item>
      <title>On Crafting Painterly Shaders - Maxime Heckel&amp;#39;s Blog</title>
      <link>https://blog.maximeheckel.com/posts/on-crafting-painterly-shaders/</link>
      <description>A detailed essay on my research and process of building a shader to mimic paint, watercolor, and aquarelle by exploring various implementations of the Kuwahara image smoothing filter.</description>
      <author> (Paul@arpeegee)</author>
      <guid>https://blog.maximeheckel.com/posts/on-crafting-painterly-shaders/</guid>
      <pubDate>Wed, 30 Oct 2024 00:01:58 GMT</pubDate>
    </item>
    <item>
      <title>Qwen2.5-coder 7B as an autocomplete model is insane! Guide how to use it</title>
      <link>https://eamag.me/2024/How-to-use-local-LLMs-like-qwen-coder-for-autocomplete</link>
      <description>Inspired by this post DAMNQwen2.5-coder 7B as an autocomplete model is insane!I&amp;amp;#039;m getting even better results than Copilot and Cursor.Can actually fit ~16k tokens of context ...</description>
      <author> ()</author>
      <guid>https://eamag.me/2024/How-to-use-local-LLMs-like-qwen-coder-for-autocomplete</guid>
      <pubDate>Wed, 30 Oct 2024 00:01:57 GMT</pubDate>
    </item>
    <item>
      <title>To build a meritocracy</title>
      <link>https://max.levch.in/post/765636918645080064/to-build-a-meritocracy</link>
      <description>About a year ago, we at Affirm decided to add an OKR to our annual planning titled “High-Performance Culture”, to help shore up the necessary means (for the necessary means) of improving our...</description>
      <author> ()</author>
      <guid>https://max.levch.in/post/765636918645080064/to-build-a-meritocracy</guid>
      <pubDate>Wed, 30 Oct 2024 00:01:57 GMT</pubDate>
    </item>
    <item>
      <title>RSS Lets Me Actually Read The Web - Jason Journals &amp;#127875;</title>
      <link>https://jasonjournals.com/posts/rss-lets-me-actually-read-the-web</link>
      <description>A few months ago, my brain was overwhelmed by too many feeds. Unlike Johnny 5 in Short Circuit, I couldn’t process all the input. The YouTube homepage, Threads, Mastodon, and...</description>
      <author> ()</author>
      <guid>https://jasonjournals.com/posts/rss-lets-me-actually-read-the-web</guid>
      <pubDate>Wed, 30 Oct 2024 00:01:57 GMT</pubDate>
    </item>
    <item>
      <title> Beware of Poison in the Source &amp;#183;  Danb Blog</title>
      <link>https://danb.me/blog/poisoned-source/</link>
      <description>Bitwarden found itself caught in a spot of drama last week introducing non-free and non-open code into their desktop client. I don’t use Bitwarden myself, but in a similar vein I remember they launched their “Passwordless” project as open source while under non-open terms.</description>
      <author> ()</author>
      <guid>https://danb.me/blog/poisoned-source/</guid>
      <pubDate>Wed, 30 Oct 2024 00:01:57 GMT</pubDate>
    </item>
    <item>
      <title>Using Setapp</title>
      <link>https://rknight.me/blog/using-setapp/</link>
      <description>Working out if Setapp is worth it for me. Turns out it is.</description>
      <author> ()</author>
      <guid>https://rknight.me/blog/using-setapp/</guid>
      <pubDate>Wed, 30 Oct 2024 00:01:56 GMT</pubDate>
    </item>
    <item>
      <title>A large project, broken up</title>
      <link>https://jensrantil.github.io/posts/large-project-breakup/</link>
      <description>Agile done, in a sneaky way.</description>
      <author> (Jens Rantil)</author>
      <guid>https://jensrantil.github.io/posts/large-project-breakup/</guid>
      <pubDate>Wed, 30 Oct 2024 00:01:56 GMT</pubDate>
    </item>
    <item>
      <title>The vast majority of design systems work is busywork – Johan Ronsse</title>
      <link>https://johanronsse.be/2024/10/29/the-vast-majority-of-design-systems-work-is-busywork/</link>
      <description>October 29, 2024 - 
            Posted in design design-systems process productivity</description>
      <author> ()</author>
      <guid>https://johanronsse.be/2024/10/29/the-vast-majority-of-design-systems-work-is-busywork/</guid>
      <pubDate>Wed, 30 Oct 2024 00:01:56 GMT</pubDate>
    </item>
    <item>
      <title>Benchmarking Ruby Parsers</title>
      <link>https://eregon.me/blog/2024/10/27/benchmarking-ruby-parsers.html</link>
      <description>The new Prism parser has become the default in Ruby 3.4.0 preview 2.</description>
      <author> (Benoit Daloze)</author>
      <guid>https://eregon.me/blog/2024/10/27/benchmarking-ruby-parsers.html</guid>
      <pubDate>Wed, 30 Oct 2024 00:01:56 GMT</pubDate>
    </item>
    <item>
      <title>The Anatomist&amp;#39;s Fallacy</title>
      <link>https://sambleckley.com/writing/the-anatomists-fallacy.html</link>
      <description>When dealing with complex systems, think about effects, not intentions</description>
      <author> (Sam Bleckley)</author>
      <guid>https://sambleckley.com/writing/the-anatomists-fallacy.html</guid>
      <pubDate>Wed, 30 Oct 2024 00:01:56 GMT</pubDate>
    </item>
    <item>
      <title>How to learn things by yourself</title>
      <link>https://brunothedev.github.io/p/2024-10-28-how_to_learn.html</link>
      <description>Use a LLM like chatgpt to subdivide your topic, this helps making what you need to learn more clearer and concrete.</description>
      <author> ()</author>
      <guid>https://brunothedev.github.io/p/2024-10-28-how_to_learn.html</guid>
      <pubDate>Wed, 30 Oct 2024 00:01:55 GMT</pubDate>
    </item>
    <item>
      <title>Why Do Investment Bankers Work Such Long Hours? | Kaveh&amp;#39;s Blog</title>
      <link>https://kaveh.page/blog/investment-banking-hours</link>
      <description>tldr: it is in the job description</description>
      <author> ()</author>
      <guid>https://kaveh.page/blog/investment-banking-hours</guid>
      <pubDate>Wed, 30 Oct 2024 00:01:55 GMT</pubDate>
    </item>
    <item>
      <title>Using an 8K TV as a monitor</title>
      <link>https://daniel.lawrence.lu/blog/y2023m12d15/</link>
      <description>For programming, word processing, and other productive work, consider getting an 8K TV instead of a multi-monitor setup.
An 8K TV will have superior image quality, resolution, and versatility compared to multiple 4K displays, at roughly the same size.
As a bonus, an 8K display is also suitable for gaming at 4K 120 Hz, or for full screen media consumption, which is not possible with multiple smaller monitors.</description>
      <author> (Daniel Lawrence Lu)</author>
      <guid>https://daniel.lawrence.lu/blog/y2023m12d15/</guid>
      <pubDate>Wed, 30 Oct 2024 00:01:55 GMT</pubDate>
    </item>
    <item>
      <title>Introduction to Reflection - C# .NET Tutorial</title>
      <link>https://youtube.com/watch?v=b1_Qxw71xNg</link>
      <description>Unlock the power of C# with this easy-to-follow introduction to reflection! &amp;#128640; In this tutorial, we dive deep into how reflection works in C# and how it can supercharge your development process. Whether you’re building flexible applications or simply curious about advanced C# techniques, this guide covers the essentials—from understanding metadata to accessing types, methods, and properties dynamically. With practical examples, you&amp;#39;ll see how reflection allows your code to inspect and interact with itself, opening up a new level of versatility and control. Perfect for beginners and seasoned developers alike, join us to take your C# skills to the next level!

Don’t forget to subscribe for more C# tutorials, tips, and .NET insights! Hit the like button if you find this helpful, and let us know in the comments how you plan to use reflection in your projects! &amp;#128172;</description>
      <author> (Nick Proud)</author>
      <guid>https://youtube.com/watch?v=b1_Qxw71xNg</guid>
      <pubDate>Tue, 29 Oct 2024 21:01:30 GMT</pubDate>
    </item>
    <item>
      <title>Avoiding boilerplate and architecture erosion with Metalama</title>
      <link>https://youtube.com/watch?v=x7IZ2skLYoQ</link>
      <description>Explore the challenges of boilerplate code in large C# codebases and the complexities of architecture erosion with Gael Fraiteur, the mind behind PostSharp and Metalama.

In this talk, we will discuss how meta-programming can help address code repetition and quality.

We will see how aspects can encapsulate concerns that cannot be handled by traditional object-oriented programming, thereby reducing boilerplate code.

You will also learn how to validate your code against architecture rules in real-time, directly from the IDE, which can help prevent architecture erosion.

The goal of this talk is to broaden your software development horizon. Attend if you want to improve your ability to deliver clean, concise, and maintainable code.

Want to master Modern C#? Join our free course at https://www.productivecsharp.com/modern-csharp/</description>
      <author> (Andrea Angella)</author>
      <guid>https://youtube.com/watch?v=x7IZ2skLYoQ</guid>
      <pubDate>Tue, 29 Oct 2024 20:01:35 GMT</pubDate>
    </item>
    <item>
      <title>Introducing Microsoft.Extensions.VectorData Preview - .NET Blog</title>
      <link>https://devblogs.microsoft.com/dotnet/introducing-microsoft-extensions-vector-data/</link>
      <description>We are excited to introduce the Microsoft.Extensions.VectorData.Abstractions package available in preview today. This new package provides a unified abstraction layer that enables you to integrate vector stores into your .NET applications.</description>
      <author> (Luis Quintanilla)</author>
      <guid>https://devblogs.microsoft.com/dotnet/introducing-microsoft-extensions-vector-data/</guid>
      <pubDate>Tue, 29 Oct 2024 19:04:26 GMT</pubDate>
    </item>
    <item>
      <title>Apple’s new Mac mini is more mighty, more mini, and built for Apple Intelligence</title>
      <link>https://www.apple.com/newsroom/2024/10/apples-new-mac-mini-is-more-mighty-more-mini-and-built-for-apple-intelligence/</link>
      <description>Apple today unveiled the all-new Mac mini powered by the M4 and new M4 Pro chips, and redesigned around Apple silicon so it’s even smaller.</description>
      <author> ()</author>
      <guid>https://www.apple.com/newsroom/2024/10/apples-new-mac-mini-is-more-mighty-more-mini-and-built-for-apple-intelligence/</guid>
      <pubDate>Tue, 29 Oct 2024 17:01:40 GMT</pubDate>
    </item>
    <item>
      <title>delroth&amp;#39;s homepage - One weird trick to get the whole planet to send abuse complaints to your best friend(s)</title>
      <link>https://delroth.net/posts/spoofed-mass-scan-abuse/</link>
      <description></description>
      <author> ()</author>
      <guid>https://delroth.net/posts/spoofed-mass-scan-abuse/</guid>
      <pubDate>Tue, 29 Oct 2024 17:01:39 GMT</pubDate>
    </item>
    <item>
      <title>.NET Conf Student Zone on November 18</title>
      <link>https://youtube.com/watch?v=UBc5AKrB3z4</link>
      <description>&amp;#128640; Register at https://aka.ms/dotnetconf/students/register

The Student Zone is a beginner-friendly, virtual event where experts will teach you how to build amazing projects – all using C# and .NET! This year, our experts will walk you through building a portfolio web application and an AI demo project. We’ll also be talking all about career readiness with hiring managers, recruiters, early-in-career engineers, and more!

This year, we’re running the event twice to reach you in your timezone. Both events will include the same content, so you only need to register for one of them.
⭐Session 1 Date: Monday, November 18 Time: 4:00PM UTC
⭐Session 2 Date: Tuesday, November 19 Time: 4:00AM UTC

#dotnet #csharp #learntocode #careeradvice</description>
      <author> (dotnet)</author>
      <guid>https://youtube.com/watch?v=UBc5AKrB3z4</guid>
      <pubDate>Tue, 29 Oct 2024 16:01:43 GMT</pubDate>
    </item>
    <item>
      <title>How to Measure Time Correctly in .NET</title>
      <link>https://youtube.com/watch?v=Lvdyi5DWNm4</link>
      <description>Check out my courses: https://dometrain.com
Subscribe to my weekly newsletter: https://nickchapsas.com

Become a Patreon and get special perks: https://www.patreon.com/nickchapsas

Hello, everybody. I&amp;#39;m Nick, and in this video, I will explain what&amp;#39;s the best way we have in .NET to measure how long a piece of code take to execute.

Workshops: https://bit.ly/nickworkshops

Don&amp;#39;t forget to comment, like and subscribe :)

Social Media:
Follow me on GitHub: https://github.com/Elfocrash
Follow me on Twitter: https://twitter.com/nickchapsas
Connect on LinkedIn: https://www.linkedin.com/in/nick-chapsas

Keep coding merch: https://keepcoding.shop

#csharp #dotnet</description>
      <author> (Nick Chapsas)</author>
      <guid>https://youtube.com/watch?v=Lvdyi5DWNm4</guid>
      <pubDate>Tue, 29 Oct 2024 14:02:23 GMT</pubDate>
    </item>
    <item>
      <title>C# and Linux - Building a better Wordpress - Episode 6</title>
      <link>https://youtube.com/watch?v=1_Zw5b-PU4g</link>
      <description>Powered by Restream https://restream.io

Fritz is talking through and starting a new CMS project that anyone can contribute to!  https://github.com/FritzAndFriends/SharpSite

It&amp;#39;s time for the annual Ubuntober celebration!  C#, Blazor, and Ubuntu Linux development all month</description>
      <author> (Fritz&amp;#39;s Tech Tips and Chatter)</author>
      <guid>https://youtube.com/watch?v=1_Zw5b-PU4g</guid>
      <pubDate>Tue, 29 Oct 2024 14:02:23 GMT</pubDate>
    </item>
    <item>
      <title>HTML Form Validation is heavily underused</title>
      <link>https://expressionstatement.com/html-form-validation-is-heavily-underused</link>
      <description>HTML Forms have powerful validation mechanisms, but they are heavily underused. In fact, not many people even know much about them. Is this because of some flaw in their design? Let’s explore.</description>
      <author> (everdimension)</author>
      <guid>https://expressionstatement.com/html-form-validation-is-heavily-underused</guid>
      <pubDate>Tue, 29 Oct 2024 13:02:23 GMT</pubDate>
    </item>
    <item>
      <title>Developing with Visual Studio on ARM: SQL Server Challenges</title>
      <link>https://csharp.christiannagel.com/2024/10/29/surfacewitharm/</link>
      <description>Sharing experiences using a Surface Laptop 7 with a Snapdragon ARM64 CPU for development. What’s not running on ARM?</description>
      <author> (Published by
	Christian Nagel)</author>
      <guid>https://csharp.christiannagel.com/2024/10/29/surfacewitharm/</guid>
      <pubDate>Tue, 29 Oct 2024 13:02:22 GMT</pubDate>
    </item>
    <item>
      <title>How I write code using Cursor: A review</title>
      <link>https://www.arguingwithalgorithms.com/posts/cursor-review.html</link>
      <description>A personal review of Cursor, an LLM-powered coding tool.</description>
      <author> ()</author>
      <guid>https://www.arguingwithalgorithms.com/posts/cursor-review.html</guid>
      <pubDate>Tue, 29 Oct 2024 13:02:22 GMT</pubDate>
    </item>
    <item>
      <title>Steve Ballmer was an underrated CEO</title>
      <link>https://danluu.com/ballmer/</link>
      <description>There&amp;#39;s a common narrative that Microsoft was moribund under Steve Ballmer and then later saved by the miraculous leadership of Satya Nadella. This is the dominant narrative in every online discussion about the topic I&amp;#39;ve seen and it&amp;#39;s a commonly expressed belief &amp;quot;in real life&amp;quot; as well. While I don&amp;#39;t have anything negative to say about Nadella&amp;#39;s leadership in this post, this narrative underrates Ballmer&amp;#39;s role in Microsoft&amp;#39;s success. Not only did Microsoft&amp;#39;s financials, revenue and profit, look great under Ballmer, Microsoft under Ballmer made deep, long-term bets that set up Microsoft for success in the decades after his reign. At the time, the bets were widely panned, indicating that they weren&amp;#39;t necessarily obvious, but we can see in retrospect that the company made very strong bets despite the criticism at the time.</description>
      <author> ()</author>
      <guid>https://danluu.com/ballmer/</guid>
      <pubDate>Tue, 29 Oct 2024 13:02:21 GMT</pubDate>
    </item>
    <item>
      <title>Building Change Data Capture (CDC) in .NET with Debezium + RabbitMQ</title>
      <link>https://youtube.com/watch?v=pACol04S_Ws</link>
      <description>Want to master Clean Architecture? Go here: https://bit.ly/3PupkOJ
Want to unlock Modular Monoliths? Go here: https://bit.ly/3SXlzSt
Join a community of 1000+ .NET developers: https://www.patreon.com/milanjovanovic

Learn how to implement Change Data Capture (CDC) in your .NET applications using Debezium, PostgreSQL, and RabbitMQ with MassTransit. In this tutorial, I&amp;#39;ll show you how to:

- Set up Debezium to capture database changes
- Configure PostgreSQL for CDC
- Stream changes to RabbitMQ
- Process events with MassTransit in .NET
- Implement real-time data synchronization

Perfect for building event-driven architectures, data replication systems, or keeping your microservices in sync. See how these powerful tools work together to create a robust CDC pipeline.

Debezium: https://debezium.io/

Postgres Logical Replication:
https://www.postgresql.org/docs/current/logical-replication.html

Check out my courses:
https://www.milanjovanovic.tech/courses

Read my Blog here:
https://www.milanjovanovic.tech/blog

Join my weekly .NET newsletter:
https://www.milanjovanovic.tech

Chapters
0:00 What is Change Data Capture?
3:21 Configuring the Debezium server
9:28 Adding a MassTransit consumer
12:11 Setting up RabbitMQ topology
16:39 Transforming CDC messages</description>
      <author> (Milan Jovanović)</author>
      <guid>https://youtube.com/watch?v=pACol04S_Ws</guid>
      <pubDate>Tue, 29 Oct 2024 13:02:17 GMT</pubDate>
    </item>
    <item>
      <title>N: Game Concepts 1 (Category Compilation) #01～#05</title>
      <link>https://youtube.com/watch?v=YYN22v4NjF4</link>
      <description>In Category N: Game Concepts, I look back at how I came up with the ideas for each of the games I worked on, in release order. Rather than sharing anecdotes from development, I&amp;#39;ve chosen to focus on the inspirations and thought processes behind their creation.

[Index]
0:00 Opening
0:11 N-1 Kirby&amp;#39;s Dream Land
5:27 N-2 Kirby&amp;#39;s Adventure
11:20 N-3 Kirby Super Star
18:56 N-4 Super Smash Bros.
27:25 N-5 Super Smash Bros. Melee 

[Playlist N: Game Concepts]
https://www.youtube.com/playlist?list=PLgKCjZ2WsVLTbEJdN9Rs6FWnOjlIj4Tdt</description>
      <author> (Masahiro Sakurai on Creating Games)</author>
      <guid>https://youtube.com/watch?v=YYN22v4NjF4</guid>
      <pubDate>Tue, 29 Oct 2024 12:02:12 GMT</pubDate>
    </item>
  </channel>
</rss>