<?xml version="1.0" encoding="utf-16"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link rel="self" type="application/rss+xml" href="https://linksfor.dev/" />
    <title>linksfor.dev(s)</title>
    <link>https://linksfor.dev/</link>
    <description>Curated links for devs</description>
    <language>en</language>
    <item>
      <title>C isn’t a Hangover; Rust isn’t a Hangover Cure</title>
      <link>https://medium.com/@john_25313/c-isnt-a-hangover-rust-isn-t-a-hangover-cure-580c9b35b5ce</link>
      <description>A few weeks ago, I got a bit miffed reading yet another article that was too dismissive about memory safety, basically being mostly…</description>
      <author> (https://medium.com/@john_25313)</author>
      <guid>https://medium.com/@john_25313/c-isnt-a-hangover-rust-isn-t-a-hangover-cure-580c9b35b5ce</guid>
      <pubDate>Wed, 24 Apr 2024 02:01:07 GMT</pubDate>
    </item>
    <item>
      <title>Building FocusGuardian, my TribeHacks IX submission, in 24 hours</title>
      <link>https://matthew.science/posts/focusguardian/</link>
      <description>Building a distraction blocking service in 24 hours</description>
      <author> ()</author>
      <guid>https://matthew.science/posts/focusguardian/</guid>
      <pubDate>Tue, 23 Apr 2024 22:01:10 GMT</pubDate>
    </item>
    <item>
      <title>AI - SkyNet Is Not Coming to Kill You</title>
      <link>https://renegadeotter.com/2024/04/22/artificial-intelligence-skynet-is-not-coming-to-kill-you.html</link>
      <description>Maybe just hurt you a little</description>
      <author> (By: Andrei Taranchenko
            (LinkedIn))</author>
      <guid>https://renegadeotter.com/2024/04/22/artificial-intelligence-skynet-is-not-coming-to-kill-you.html</guid>
      <pubDate>Tue, 23 Apr 2024 22:01:10 GMT</pubDate>
    </item>
    <item>
      <title>Code It Any Way You Want: Optimal Parameter Passing – Array vs. Params Keyword</title>
      <link>https://dotnettips.wordpress.com/2024/04/23/code-it-any-way-you-want-optimal-parameter-passing-array-vs-params-keyword/</link>
      <description>The article explores the performance differences between passing parameters as arrays or using the params keyword in C#. Despite similarities in speed, the author recommends using the params keywor…</description>
      <author> (Published by dotNetDave)</author>
      <guid>https://dotnettips.wordpress.com/2024/04/23/code-it-any-way-you-want-optimal-parameter-passing-array-vs-params-keyword/</guid>
      <pubDate>Tue, 23 Apr 2024 22:01:09 GMT</pubDate>
    </item>
    <item>
      <title>GitHub - rabbitscam/rabbitr1</title>
      <link>https://github.com/rabbitscam/rabbitr1</link>
      <description>Contribute to rabbitscam/rabbitr1 development by creating an account on GitHub.</description>
      <author> (rabbitscam)</author>
      <guid>https://github.com/rabbitscam/rabbitr1</guid>
      <pubDate>Tue, 23 Apr 2024 22:01:09 GMT</pubDate>
    </item>
    <item>
      <title>How to Juggle Priorities: Decide Which Balls Are Glass and Which Are Plastic</title>
      <link>https://ashleyjanssen.com/how-to-juggle-priorities-decide-which-balls-are-glass-and-which-are-plastic/</link>
      <description>You can&amp;#39;t keep all your balls in the air all the time but that&amp;#39;s ok! Learn how to decide which to drop and which to keep in the air.</description>
      <author> (Ashley Janssen)</author>
      <guid>https://ashleyjanssen.com/how-to-juggle-priorities-decide-which-balls-are-glass-and-which-are-plastic/</guid>
      <pubDate>Tue, 23 Apr 2024 22:01:08 GMT</pubDate>
    </item>
    <item>
      <title>Meta Bites the Apple</title>
      <link>https://ewakened.com/meta-goes-for-apples-jugular/</link>
      <description>Someone on Meta&amp;#39;s PR team deserves a big bonus with the announcement of Meta Horizon OS today.

&amp;#127939;‍♀️Horizon OS is a new platform like iOS or Android designed for VR software. Meta has partnered with other big names, Asus, Lenovo, Xbox to build devices using this new OS.

Why does</description>
      <author> (Kent Fenwick)</author>
      <guid>https://ewakened.com/meta-goes-for-apples-jugular/</guid>
      <pubDate>Tue, 23 Apr 2024 22:01:08 GMT</pubDate>
    </item>
    <item>
      <title>Fabian Lindfors</title>
      <link>https://fabianlindfors.se/blog/complex-schema-migrations-with-reshape/</link>
      <description>MSc Computer science student
</description>
      <author> ()</author>
      <guid>https://fabianlindfors.se/blog/complex-schema-migrations-with-reshape/</guid>
      <pubDate>Tue, 23 Apr 2024 22:01:08 GMT</pubDate>
    </item>
    <item>
      <title>Reminding Myself to Take a Break</title>
      <link>https://blog.damnever.com/en/2024/reminding-myself-to-take-a-break-the-hard-way.html</link>
      <description>Reminding Myself to Take a Break - The Hard Way</description>
      <author> ()</author>
      <guid>https://blog.damnever.com/en/2024/reminding-myself-to-take-a-break-the-hard-way.html</guid>
      <pubDate>Tue, 23 Apr 2024 22:01:08 GMT</pubDate>
    </item>
    <item>
      <title>Generate code for declarative language instead of progr...</title>
      <link>https://near.tl/developer-forever/forum/announcement/generate-code-for-declarative-language-instead-of-.anc-17ee9632-adef-49b3-b320-c4e0b82c8d8a.html</link>
      <description>Code Generation AI is all the rage these days. But is generating code for programming languages like JavaScript and Python the right path to take? I think not. I think we should be generating code for declarative languages like Excel or SQL.
What&amp;#39;s the difference, you ask?
In declarative languages, you express what your intention is. For example, in Excel, you can use SUM() to add all the line items and calculate the order amount. If the quantity of a line item changes, it will automatically recalculate the line item amount and then invoke SUM() to recalculate the order amount. But in imperative languages like JavaScript or Python, you instruct the computer on how to calculate the order amount. You would implement a function to add the line items as the order amount. Anytime the quantity of a line item changes, it is your job to call the function and recalculate the order amount.
Why is this important?
If you are asking AI to generate code for your requirements, you are essentially expressing your intent. So, expressing it in a declarative language seems natural. This will help the person who gave the requirement to understand the code generated by the AI. On the other hand, generating code for a programming language seems like the worst form of leaky abstraction (https://www.joelonsoftware.com/2002/11/11/the-law-of-leaky-abstractions/). &amp;quot;Leaky abstraction&amp;quot; describes a scenario where attempts to simplify a system end up requiring users to understand its underlying complexities to troubleshoot it. Code generation can automate the creation process. But, the resulting code can be a puzzle even to a skilled developer who is debugging it. The person who gave the requirement will most likely not understand any of it.
So, why do AI companies generate code like this?
I guess it comes down to the availability of training data for AI. There are a lot of open-source projects in JavaScript or Python, so it is easy to train AI with it. But open-source projects in Excel are almost non-existent. So, the unavailability of training data might be the primary reason behind the direction these code generation AI companies are taking. At Neartail, we are taking a middle road. We have created a declarative language using JavaScript syntax so that we could train the AI as well as make it understandable to business owners. Will other AI companies realize the perils of leaky abstraction and change its course? Only time will tell.</description>
      <author> (Neartail.com)</author>
      <guid>https://near.tl/developer-forever/forum/announcement/generate-code-for-declarative-language-instead-of-.anc-17ee9632-adef-49b3-b320-c4e0b82c8d8a.html</guid>
      <pubDate>Tue, 23 Apr 2024 22:01:08 GMT</pubDate>
    </item>
    <item>
      <title>How to set up Nsight Compute Locally to profile Remote GPUs</title>
      <link>https://tspeterkim.github.io/posts/nsight-setup-on-ec2</link>
      <description>Have a remote GPU instance? Want to see some rooflines with Nsight Compute? This tutorial is for you.</description>
      <author> ()</author>
      <guid>https://tspeterkim.github.io/posts/nsight-setup-on-ec2</guid>
      <pubDate>Tue, 23 Apr 2024 22:01:07 GMT</pubDate>
    </item>
    <item>
      <title>The best keyboard I&amp;#39;ve ever had</title>
      <link>https://duarteocarmo.com/blog/happy-hacking-keyboard-review</link>
      <description>A small review of the Happy Hacking Hybrid Type-S keyboard.</description>
      <author> (Duarte O.Carmo)</author>
      <guid>https://duarteocarmo.com/blog/happy-hacking-keyboard-review</guid>
      <pubDate>Tue, 23 Apr 2024 22:01:07 GMT</pubDate>
    </item>
    <item>
      <title>FTC Announces Rule Banning Noncompetes</title>
      <link>https://www.ftc.gov/news-events/news/press-releases/2024/04/ftc-announces-rule-banning-noncompetes</link>
      <description>Today, the Federal Trade Commission issued a final rule to promote competition by banning noncompetes nationwide, protecting the fundamen</description>
      <author> ()</author>
      <guid>https://www.ftc.gov/news-events/news/press-releases/2024/04/ftc-announces-rule-banning-noncompetes</guid>
      <pubDate>Tue, 23 Apr 2024 20:01:10 GMT</pubDate>
    </item>
    <item>
      <title>Refactor your C# code with primary constructors - .NET Blog</title>
      <link>https://devblogs.microsoft.com/dotnet/csharp-primary-constructors-refactoring/</link>
      <description>Explore C# 12&amp;#39;s primary constructors through incremental refactoring of a Worker service.</description>
      <author> (David Pine)</author>
      <guid>https://devblogs.microsoft.com/dotnet/csharp-primary-constructors-refactoring/</guid>
      <pubDate>Tue, 23 Apr 2024 19:01:05 GMT</pubDate>
    </item>
    <item>
      <title>Adding state to the update notification pattern, part 5 - The Old New Thing</title>
      <link>https://devblogs.microsoft.com/oldnewthing/20240423-00/?p=109697</link>
      <description>Using a change counter.</description>
      <author> (Raymond Chen)</author>
      <guid>https://devblogs.microsoft.com/oldnewthing/20240423-00/?p=109697</guid>
      <pubDate>Tue, 23 Apr 2024 17:01:06 GMT</pubDate>
    </item>
    <item>
      <title>Help us invent CSS&amp;#160;Grid&amp;#160;Level&amp;#160;3, aka “Masonry” layout</title>
      <link>https://webkit.org/blog/15269/help-us-invent-masonry-layouts-for-css-grid-level-3/</link>
      <description>If you’ve been making websites for years, you know how frustrating it was to lay out a web page with CSS floats.</description>
      <author> (Apr 19, 2024
                by Jen Simmons)</author>
      <guid>https://webkit.org/blog/15269/help-us-invent-masonry-layouts-for-css-grid-level-3/</guid>
      <pubDate>Tue, 23 Apr 2024 16:01:09 GMT</pubDate>
    </item>
    <item>
      <title>Try Catch in C#: The Basics You Need to Know</title>
      <link>https://www.devleader.ca/2024/04/23/try-catch-in-c-the-basics-you-need-to-know/</link>
      <description>Learn how exception handling works in C# with the basics of try catch. This article is perfect for junior software engineers aiming to understand dotnet and C#.</description>
      <author> (https://www.facebook.com/devleaderca)</author>
      <guid>https://www.devleader.ca/2024/04/23/try-catch-in-c-the-basics-you-need-to-know/</guid>
      <pubDate>Tue, 23 Apr 2024 14:01:05 GMT</pubDate>
    </item>
    <item>
      <title>On Generating Ideas - Leadership &amp;amp; Work</title>
      <link>https://read.perspectiveship.com/p/on-generating-ideas</link>
      <description>Forget brainstorming. I am sharing a guideline for exploring ideas together with your team that promises to deliver some fruitful ideas.</description>
      <author> (Michał Poczwardowski)</author>
      <guid>https://read.perspectiveship.com/p/on-generating-ideas</guid>
      <pubDate>Tue, 23 Apr 2024 13:01:10 GMT</pubDate>
    </item>
    <item>
      <title>What&amp;#39;s new for the Microsoft Fluent UI Blazor library 4.7</title>
      <link>https://baaijte.net/blog/microsoft-fluentui-aspnetcore.components-4.7/</link>
      <description>With this release we don&amp;#39;t have any new components to present to you. We do however have a nice set of new features, new parameters and fixes. Read on to learn more...</description>
      <author> ()</author>
      <guid>https://baaijte.net/blog/microsoft-fluentui-aspnetcore.components-4.7/</guid>
      <pubDate>Tue, 23 Apr 2024 12:01:10 GMT</pubDate>
    </item>
    <item>
      <title>Enhance your .NET Testing #8: Contract tests with Verify</title>
      <link>https://goatreview.com/enhance-contract-tests-verify-dotnet/</link>
      <description>The most common way to test the values of an object is to use assertions for each property to check exactly what the object contains.


This can be done for types, classes, enumerables. The more aspects of the object that are tested, the more certain you can be that everything</description>
      <author> (Pierre Belin)</author>
      <guid>https://goatreview.com/enhance-contract-tests-verify-dotnet/</guid>
      <pubDate>Tue, 23 Apr 2024 09:01:14 GMT</pubDate>
    </item>
    <item>
      <title>nameof vs + operater</title>
      <link>https://dev.to/ahmedshahjr/nameof-vs-operater-2ii6</link>
      <description>C# Tip Using &amp;#39;+&amp;#39; Traditionally, we might use the concatenation operator to create a string that...</description>
      <author> ()</author>
      <guid>https://dev.to/ahmedshahjr/nameof-vs-operater-2ii6</guid>
      <pubDate>Tue, 23 Apr 2024 09:01:12 GMT</pubDate>
    </item>
    <item>
      <title>Unit testing methods on BlobServiceClient with Azure blob storage and NSubstitute</title>
      <link>https://blog.elmah.io/unit-testing-methods-on-blobserviceclient-with-azure-blob-storage-and-nsubstitute/</link>
      <description>Learn how to easily unit test methods in the BlobServiceClient provided by the Azure.Storage.Blobs package using NUnit and NSubstitute.</description>
      <author> (Written by Thomas Ardal, April 23, 2024)</author>
      <guid>https://blog.elmah.io/unit-testing-methods-on-blobserviceclient-with-azure-blob-storage-and-nsubstitute/</guid>
      <pubDate>Tue, 23 Apr 2024 07:01:08 GMT</pubDate>
    </item>
    <item>
      <title>Minimal APIs Nuget Packages
</title>
      <link>https://wildermuth.com/2024/04/21/minimal-api-nuget-packages/</link>
      <description>I&amp;#39;ve been looking at my Nuget packages and they&amp;#39;re kinda a mess. Not justthe packages, but the naming and branding.
</description>
      <author> ()</author>
      <guid>https://wildermuth.com/2024/04/21/minimal-api-nuget-packages/</guid>
      <pubDate>Tue, 23 Apr 2024 06:01:34 GMT</pubDate>
    </item>
    <item>
      <title>Strict Ordered Message Handling wth Wolverine</title>
      <link>https://jeremydmiller.com/2024/04/22/strict-ordered-message-handling-wth-wolverine/</link>
      <description>The feature was built for a current JasperFx Software client, and came with a wave of developments across both Marten and Wolverine to support a fairly complex, mission critical set of application …</description>
      <author> (jeremydmiller)</author>
      <guid>https://jeremydmiller.com/2024/04/22/strict-ordered-message-handling-wth-wolverine/</guid>
      <pubDate>Tue, 23 Apr 2024 06:01:24 GMT</pubDate>
    </item>
    <item>
      <title>We Migrated a Legacy App with ChatGPT: Here&amp;#39;s What Happened</title>
      <link>https://www.mobilize.net/blog/migrating-a-vbnet-app-to-blazor-using-generativeai</link>
      <description>Can you use generative AI to migrate a legacy desktop app to a web app? Yes, but it&amp;#39;s not as straightforward as you would hope.</description>
      <author> (DeeDee Walsh)</author>
      <guid>https://www.mobilize.net/blog/migrating-a-vbnet-app-to-blazor-using-generativeai</guid>
      <pubDate>Tue, 23 Apr 2024 06:01:21 GMT</pubDate>
    </item>
    <item>
      <title>C# 12: Collection expressions and primary constructors | Red Hat Developer</title>
      <link>https://developers.redhat.com/articles/2024/04/22/c-12-collection-expressions-and-primary-constructors</link>
      <description>C# 12 provides two features that are useful in everyday development: collection expressions and primary constructors.</description>
      <author> (Tom Deseyn)</author>
      <guid>https://developers.redhat.com/articles/2024/04/22/c-12-collection-expressions-and-primary-constructors</guid>
      <pubDate>Tue, 23 Apr 2024 06:01:20 GMT</pubDate>
    </item>
    <item>
      <title>Will Visual Studio Be Migrated to .NET Core and Become Multi-Platform? - NDepend Blog</title>
      <link>https://blog.ndepend.com/visual-studio-multi-platform/</link>
      <description>Explore the possibilities of Visual Studio transitioning to .NET Core and the potential for it to become a multi-platform environment.</description>
      <author> (NDepend)</author>
      <guid>https://blog.ndepend.com/visual-studio-multi-platform/</guid>
      <pubDate>Tue, 23 Apr 2024 06:01:19 GMT</pubDate>
    </item>
    <item>
      <title>XML External Entity Attack and .NET Core</title>
      <link>https://bartwullems.blogspot.com/2024/04/xml-external-entity-attack-and-net-core.html</link>
      <description>Improving the security of the systems I help design and build for my clients is a continuous effort where every day new vulnerabilities are ...</description>
      <author> (Share)</author>
      <guid>https://bartwullems.blogspot.com/2024/04/xml-external-entity-attack-and-net-core.html</guid>
      <pubDate>Tue, 23 Apr 2024 06:01:19 GMT</pubDate>
    </item>
    <item>
      <title>Don&amp;#39;t Do This With Extension Methods</title>
      <link>https://adamstorr.co.uk/blog/dont-do-this-with-extension-methods/</link>
      <description>Extension methods in C# are great until they&amp;#39;re not. Why? Let&amp;#39;s find out.</description>
      <author> ()</author>
      <guid>https://adamstorr.co.uk/blog/dont-do-this-with-extension-methods/</guid>
      <pubDate>Tue, 23 Apr 2024 06:01:19 GMT</pubDate>
    </item>
    <item>
      <title>Does readonly make your code faster?</title>
      <link>https://steven-giesel.com/blogPost/50b84029-4f1e-4e6d-8fd1-0311b0605562</link>
      <description>In this blog post we will discover whether or not the readonly modifier can make your code faster. So without further ado let&amp;#39;s get started.
</description>
      <author> ()</author>
      <guid>https://steven-giesel.com/blogPost/50b84029-4f1e-4e6d-8fd1-0311b0605562</guid>
      <pubDate>Tue, 23 Apr 2024 06:01:19 GMT</pubDate>
    </item>
    <item>
      <title>The trap of over-engineering and over-design</title>
      <link>https://resethard.io/the-trap-of-over-engineering-and-over-design/</link>
      <description>One major pitfall I’ve seen projects fall into (that includes my personal ones) again and again throught my career is over-engineering the…</description>
      <author> (Marcin Gorczyński)</author>
      <guid>https://resethard.io/the-trap-of-over-engineering-and-over-design/</guid>
      <pubDate>Tue, 23 Apr 2024 06:01:19 GMT</pubDate>
    </item>
    <item>
      <title>Fitting a polynomial to a set of points</title>
      <link>https://blog.ploeh.dk/2024/04/22/fitting-a-polynomial-to-a-set-of-points/</link>
      <description>The story of a fiasco.</description>
      <author> (Mark Seemann)</author>
      <guid>https://blog.ploeh.dk/2024/04/22/fitting-a-polynomial-to-a-set-of-points/</guid>
      <pubDate>Tue, 23 Apr 2024 06:01:18 GMT</pubDate>
    </item>
    <item>
      <title>Configure Renovate to handle nuspec files</title>
      <link>https://anthonysimmon.com/configure-renovate-handle-nuspec-files/</link>
      <description>Renovate doesn&amp;#39;t handle nuspec files by default, let&amp;#39;s configure a custom Renovate Regex manager to support them.</description>
      <author> ()</author>
      <guid>https://anthonysimmon.com/configure-renovate-handle-nuspec-files/</guid>
      <pubDate>Tue, 23 Apr 2024 06:01:18 GMT</pubDate>
    </item>
    <item>
      <title>Using type aliases to make code clearer with generics - G&amp;#233;rald Barr&amp;#233;</title>
      <link>https://www.meziantou.net/using-type-aliases-to-make-code-clearer-with-generics.htm</link>
      <description>In this post, I describe how to use type aliases in C# to make code clearer when using generic types such as Dictionary&amp;lt;TKey, TValue&amp;gt;.</description>
      <author> (G&amp;#233;rald Barr&amp;#233;)</author>
      <guid>https://www.meziantou.net/using-type-aliases-to-make-code-clearer-with-generics.htm</guid>
      <pubDate>Tue, 23 Apr 2024 06:01:18 GMT</pubDate>
    </item>
    <item>
      <title>Uno Platform 5.2 Released - One Project To Rule Them All - Nick&amp;#39;s .NET Travels</title>
      <link>https://nicksnettravels.builttoroam.com/uno-platform-5-2-released-one-project-to-rule-them-all/</link>
      <description>This has been a work in progress over the last couple of releases in order to deliver a better developer experience for the Uno Platform. The 5.1 release introduced the Uno.Sdk which allowed for better integration with Visual Studio – no more pesky “reload project” warnings appearing. With the 5.2 release the Uno Platform goes ... Read more</description>
      <author> (Nick)</author>
      <guid>https://nicksnettravels.builttoroam.com/uno-platform-5-2-released-one-project-to-rule-them-all/</guid>
      <pubDate>Tue, 23 Apr 2024 05:01:06 GMT</pubDate>
    </item>
    <item>
      <title>No one buys books</title>
      <link>https://www.elysian.press/p/no-one-buys-books</link>
      <description>Everything we learned about the publishing industry from Penguin vs. DOJ.</description>
      <author> (Elle Griffin)</author>
      <guid>https://www.elysian.press/p/no-one-buys-books</guid>
      <pubDate>Tue, 23 Apr 2024 04:01:10 GMT</pubDate>
    </item>
    <item>
      <title>KRAZAM</title>
      <link>https://www.krazam.tv/</link>
      <description>UNLOCK THE SECRETS TO ETERNAL DIGITAL LONGEVITY</description>
      <author> ()</author>
      <guid>https://www.krazam.tv/</guid>
      <pubDate>Tue, 23 Apr 2024 03:01:04 GMT</pubDate>
    </item>
  </channel>
</rss>