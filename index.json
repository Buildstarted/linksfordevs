[
  {
    "Title": "The absurd complexity of server-side rendering",
    "Url": "https://gist.github.com/Widdershin/98fd4f0e416e8eb2906d11fd1da62984",
    "Timestamp": "2022-04-20T08:02:21",
    "Domain": "gist.github.com",
    "Description": "The absurd complexity of server-side rendering. GitHub Gist: instantly share code, notes, and snippets.",
    "Confidence": 0.8739348
  },
  {
    "Title": "WebAssembly Core Specification",
    "Url": "https://www.w3.org/TR/wasm-core-2/",
    "Timestamp": "2022-04-20T08:02:21",
    "Domain": "www.w3.org",
    "Description": "This section describes the status of this\n      document at the time of its publication. A list of current W3C\n      publications and the latest revision of this technical report can be found\n      in the W3C technical reports index at\n      https://www.w3.org/TR/.",
    "Confidence": 0.9372407
  },
  {
    "Title": "After 5 years, I'm out of the serverless compute cult",
    "Url": "https://dev.to/brentmitchell/after-5-years-im-out-of-the-serverless-compute-cult-3f6d",
    "Timestamp": "2022-04-20T08:02:21",
    "Domain": "dev.to",
    "Description": "I have been using serverless computing and storage for nearly five years and I'm finally tired of it....",
    "Confidence": 0.96130884
  },
  {
    "Title": "Implement Azure AD Continuous Access Evaluation in an ASP.NET Core Razor Page app using a Web API",
    "Url": "https://damienbod.com/2022/04/20/implement-azure-ad-continuous-access-evaluation-in-an-asp-net-core-razor-page-app-using-a-web-api/",
    "Timestamp": "2022-04-20T07:01:34",
    "Domain": "damienbod.com",
    "Description": "This article shows how Azure AD continuous access evaluation (CAE) can be used in an ASP.NET Core UI application to force MFA when using an administrator API from a separate ASP.NET Core applicatio…",
    "Confidence": 0.9954482
  },
  {
    "Title": "Police Interrogations: Last Week Tonight with John Oliver (HBO)",
    "Url": "https://youtu.be/obCNQ0xksZ4",
    "Timestamp": "2022-04-20T06:02:10",
    "Domain": "youtu.be",
    "Description": "John Oliver discusses the tactics that can make police interrogations so damaging, particularly for the innocent, and why he’s more of a Lorelai than a Rory....",
    "Confidence": 0.6708168
  },
  {
    "Title": "Monsters Weekly 247 -  HTML Template Element",
    "Url": "https://www.aspnetmonsters.com/2022/04/monsters-weekly%5Cep247/",
    "Timestamp": "2022-04-20T06:02:10",
    "Domain": "www.aspnetmonsters.com",
    "Description": "We don’t always need a framework like React/Vue/Angular to add interactive behaviour to our web pages. The browser provides some handy features that can make it easy to add simple interactions. One ex",
    "Confidence": 0.64551306
  },
  {
    "Title": "ASP.NET Core Interview Questions and Answers",
    "Url": "https://khalidabuhakmeh.com/aspnet-core-interview-questions-and-answers",
    "Timestamp": "2022-04-20T06:02:10",
    "Domain": "khalidabuhakmeh.com",
    "Description": "A set of hypothetical questions to ask during an ASP.NET Core developer position",
    "Confidence": 0.96615547
  },
  {
    "Title": "Modeling Relationships in a DDD Way",
    "Url": "https://enterprisecraftsmanship.com/posts/modeling-relationships-in-ddd-way/",
    "Timestamp": "2022-04-20T06:02:09",
    "Domain": "enterprisecraftsmanship.com",
    "Description": "\nLet’s talk about modeling of relationships, including the dreaded many-to-many relationships, in a DDD way.\n",
    "Confidence": 0.98533314
  },
  {
    "Title": "A Simple CORS Example with a .NET 6 Web API Application and a .NET 6 Web Application | no dogma blog",
    "Url": "https://nodogmablog.bryanhogan.net/2022/04/a-simple-cors-example-with-a-net-6-web-api-application-and-a-net-6-web-application/",
    "Timestamp": "2022-04-20T06:02:08",
    "Domain": "nodogmablog.bryanhogan.net",
    "Description": "Every couple of years I have to solve a CORS error with some API I've written, each time I have to figure it all out again. This is a blog to my future self with the answers.",
    "Confidence": 0.9377712
  },
  {
    "Title": "The List monad",
    "Url": "https://blog.ploeh.dk/2022/04/19/the-list-monad/",
    "Timestamp": "2022-04-20T06:02:08",
    "Domain": "blog.ploeh.dk",
    "Description": "Lists, collections, deterministic Iterators form a monad. An article for object-oriented programmers.",
    "Confidence": 0.96570253
  },
  {
    "Title": "Emacs Configuration Generator",
    "Url": "https://emacs.amodernist.com/",
    "Timestamp": "2022-04-20T05:03:25",
    "Domain": "emacs.amodernist.com",
    "Description": "Some people claim that Emacs is difficult to start with. The main problem is probably the chicken-and-egg situation:  To make the most use of Emacs, you probably need to understand Emacs (Lisp), but to grok Emacs Lisp you pretty much neeed to understand the fundamentals of Emacs.",
    "Confidence": 0.9862566
  },
  {
    "Title": "Simulate your Financial Future. Plan for Financial Independence.",
    "Url": "https://projectionlab.com/",
    "Timestamp": "2022-04-20T04:02:33",
    "Domain": "projectionlab.com",
    "Description": "Plan, model and simulate your personal finances with ProjectionLab. Free planning and projection tools that will never ask to link your financial accounts. Define and prioritize goals, compare outcomes between plans, and chart your own course towards towards the financial future you want, whether that's financial independence, early retirement, time off to travel, or more.",
    "Confidence": 0.7414666
  },
  {
    "Title": "Netlify Edge Functions: Serverless Compute Powered by Deno",
    "Url": "https://www.netlify.com/blog/announcing-serverless-compute-with-edge-functions",
    "Timestamp": "2022-04-20T03:01:41",
    "Domain": "www.netlify.com",
    "Description": "Build fast, personalized web experiences with Netlify Edge Functions: a serverless runtime built for on Deno, and compatible with your favorite JavaScript frameworks.",
    "Confidence": 0.96227294
  },
  {
    "Title": "Step-by-step guide to modern, secure and Open-source CI setup",
    "Url": "https://devforth.io/blog/step-by-step-guide-to-modern-secure-ci-setup/",
    "Timestamp": "2022-04-20T02:02:28",
    "Domain": "devforth.io",
    "Description": "Step-by-step guide how to easily setup modern, secure, open-source based build pipeline using Woodpecker CI, Drone, Cloudflare",
    "Confidence": 0.995586
  },
  {
    "Title": "GitHub - FrameworkComputer/Mainboard: Documentation for the Mainboard in the Framework Laptop",
    "Url": "https://github.com/FrameworkComputer/Mainboard",
    "Timestamp": "2022-04-20T01:02:15",
    "Domain": "github.com",
    "Description": "Documentation for the Mainboard in the Framework Laptop - GitHub - FrameworkComputer/Mainboard: Documentation for the Mainboard in the Framework Laptop",
    "Confidence": 0.98631954
  },
  {
    "Title": "AWS's Log4Shell Hot Patch Vulnerable to Container Escape and Privilege Escalation",
    "Url": "https://unit42.paloaltonetworks.com/aws-log4shell-hot-patch-vulnerabilities/",
    "Timestamp": "2022-04-20T00:01:56",
    "Domain": "unit42.paloaltonetworks.com",
    "Description": "We identified severe security issues within AWS Log4Shell hot patch solutions. We provide a root cause analysis and overview of fixes and mitigations.",
    "Confidence": 0.9402932
  },
  {
    "Title": "What CTOs Say vs. What Their Developers Hear w/ DataStax’s Shankar Ramaswamy",
    "Url": "https://medium.com/dev-interrupted/what-ctos-say-vs-what-their-developers-hear-w-datastaxs-shankar-ramaswamy-b203f2656bdf",
    "Timestamp": "2022-04-20T00:01:56",
    "Domain": "medium.com",
    "Description": "Anyone who’s been in a rapidly scaling company with an ever-expanding engineering team knows that communication is never as simple as it…",
    "Confidence": 0.65148205
  },
  {
    "Title": "What's a P2 and why does it make so much sense - Filip Iulian Pacurar (Filipac)",
    "Url": "https://pacurar.dev/whats-a-p2-and-why-does-it-make-so-much-sense/",
    "Timestamp": "2022-04-19T23:03:25",
    "Domain": "pacurar.dev",
    "Description": "I remember when Automattic first introduced the P2 WordPress theme. The theme itself introduced a lot of interesting new things and a new approach to WordPress sites: collaboration websites and short Twitter-like posts. I even tried to use the theme for a side project somewhere around 2010 while I was still in high school, but...",
    "Confidence": 0.90177196
  },
  {
    "Title": "<code>canvasInteractor</code>",
    "Url": "https://goessner.github.io/canvasInteractor/",
    "Timestamp": "2022-04-19T23:03:21",
    "Domain": "goessner.github.io",
    "Description": "How to make your canvas element interactive",
    "Confidence": 0.9770793
  },
  {
    "Title": "Feature-Less Software",
    "Url": "https://feifan.blog/posts/feature-less-software",
    "Timestamp": "2022-04-19T23:03:21",
    "Domain": "feifan.blog",
    "Description": "Most software is feature-ful: built from an amalgamation of individual features, which are usually atomic ways to do something specific, arranged in a singular interface that has to work for every user of that piece of software. Each feature is usually built with a small number of end-to-end user experiences in mind (often in the form of \"user stories\"). Each feature has to live somewhere in the UI; sometimes they're put in unexpected or awkward places, and every so often the whole UI gets shuffled up in a redesign.",
    "Confidence": 0.9459739
  },
  {
    "Title": "Taxonomy Of In-The-Wild Exploitation",
    "Url": "https://noncombatant.org/2022/04/22/itw-taxonomy/",
    "Timestamp": "2022-04-19T23:03:20",
    "Domain": "noncombatant.org",
    "Description": "2022-04-16",
    "Confidence": 0.96268725
  },
  {
    "Title": "The Front-End Developer's Guide to the Terminal",
    "Url": "https://www.joshwcomeau.com/javascript/terminal-for-js-devs/",
    "Timestamp": "2022-04-19T23:02:35",
    "Domain": "www.joshwcomeau.com",
    "Description": "If you want to learn a modern JavaScript framework like React or Angular, you better be familiar with the terminal! So many frameworks and tools assume that you're proficient with it, without ever explaining it. This blog post is your missing manual, covering all of the most important fundamentals.",
    "Confidence": 0.926619
  },
  {
    "Title": "How to Make Slack Work for You | The Blog of Josh Simmons",
    "Url": "https://www.joshcsimmons.com/posts/slack",
    "Timestamp": "2022-04-19T23:02:35",
    "Domain": "www.joshcsimmons.com",
    "Description": "The blog of Josh Simmons",
    "Confidence": 0.9339535
  },
  {
    "Title": "The Anti-Thiel Principle",
    "Url": "https://stakedy.com/long/the-anti-thiel-principle.html",
    "Timestamp": "2022-04-19T23:02:34",
    "Domain": "stakedy.com",
    "Description": "Peter Thiel describes a process where the best companies avoid competition and aim for ubiquitous monopolies. These companies focus on sales, marketing and business development at least as much as product. In contrast, the Anti-Thiel Principle holds that the best products are products that you will never know about because they focus only on products.",
    "Confidence": 0.85088384
  },
  {
    "Title": "How we upgraded our 4 TB main application Postgres database",
    "Url": "https://retool.com/blog/how-we-upgraded-postgresql-database/",
    "Timestamp": "2022-04-19T23:02:34",
    "Domain": "retool.com",
    "Description": "Last fall, we migrated our 4TB Postgres database from version 9.6 to version 13 with minimal downtime. In this post, we’ll tell the story and share tips to help you with a similar upgrade.",
    "Confidence": 0.7324484
  },
  {
    "Title": "Translate terms using Wikipedia articles",
    "Url": "https://marienraat.nl/blog/posts/translatewith-wiki/",
    "Timestamp": "2022-04-19T23:02:34",
    "Domain": "marienraat.nl",
    "Description": "Some concepts have very specific translations in different languages that ordinary machine translations services like Google Translate and DeepL fail to grasp. A good way to really get the right translation for such concepts is to look up the article on Wikipedia and look at the different language versions of the article. I made https://TranslateWith.Wiki to make this process more convenient.",
    "Confidence": 0.9506483
  },
  {
    "Title": "InteropGen",
    "Url": "https://garry.blog/interopgen/",
    "Timestamp": "2022-04-19T23:02:33",
    "Domain": "garry.blog",
    "Description": "A big part of s&box is calling c++ from c#, and calling c# from c++. So while that’s easy enough to do manually for a few functions, using DllImport and all that noise, it’s not rea…",
    "Confidence": 0.99085236
  },
  {
    "Title": "Group Project Retrospective",
    "Url": "https://blog.prout.tech/group-project-retrospective/",
    "Timestamp": "2022-04-19T23:02:33",
    "Domain": "blog.prout.tech",
    "Description": "A retrospective of a second-year group project. Our brief was simple: create a system to manage the mentoring of new employees. On paper, it seemed easy enough: a standard user system, a clever algorithm to match mentees to mentors and crud for meetings. In reality,…",
    "Confidence": 0.93188214
  },
  {
    "Title": "That Time I Lost Control of a Server",
    "Url": "https://brianschrader.com/archive/that-time-i-lost-control-of-a-server/",
    "Timestamp": "2022-04-19T23:02:33",
    "Domain": "brianschrader.com",
    "Description": "Good security hygiene is essential for software developers. The thing is: we tell ourselves that, but rarely ever do we actually experience the effects of bad security hygiene. While deterrence is the point of good hygiene, it's helpful to walk through the real world consequences of bad hygiene and not just talk about the theoretical side of things.",
    "Confidence": 0.8100551
  },
  {
    "Title": "Creators are Foundation of Growth",
    "Url": "https://www.zacksiri.com/creators-are-foundation-of-growth/",
    "Timestamp": "2022-04-19T23:02:33",
    "Domain": "www.zacksiri.com",
    "Description": "Creators create products that power the growth of a company. They’re responsible for the fate of any product. It’s important to recognize this and create the best environments for them to thrive in.",
    "Confidence": 0.8569244
  },
  {
    "Title": "GRPC & GRPC-Web multiplexed in Istio",
    "Url": "https://jackieli.dev/posts/grpc-web-istio/",
    "Timestamp": "2022-04-19T23:02:33",
    "Domain": "jackieli.dev",
    "Description": "Expose GRPC & GRPC-Web via One Port in Istio",
    "Confidence": 0.9558463
  },
  {
    "Title": "VCs Fund Ideas, Not Execution - Manish R Jain",
    "Url": "https://manishrjain.com/vcs-fund-ideas-not-execution",
    "Timestamp": "2022-04-19T23:02:32",
    "Domain": "manishrjain.com",
    "Description": "My founder journey started in 2014. I have pitched to hundreds of investors and raised 15M for my last startup, taking it from 0 to $1M ARR. My",
    "Confidence": 0.8808933
  },
  {
    "Title": "ttfb-curl",
    "Url": "https://josephscott.org/posts/ttfb-curl/",
    "Timestamp": "2022-04-19T23:02:32",
    "Domain": "josephscott.org",
    "Description": "None",
    "Confidence": 0.990315
  },
  {
    "Title": ".NET Community Toolkit v8.0 Preview 3 Tweaks MVVM Source Generators -- Visual Studio Magazine",
    "Url": "https://visualstudiomagazine.com/articles/2022/04/19/net-community-toolkit-preview3.aspx",
    "Timestamp": "2022-04-19T21:03:57",
    "Domain": "visualstudiomagazine.com",
    "Description": "  Microsoft shipped .NET Community Toolkit v8.0 Preview 3 as part of its effort to coalesce all of its general .NET libraries into a one-stop-shop resource.\n",
    "Confidence": 0.94603944
  },
  {
    "Title": "Java on Visual Studio Code Supports Java 18 -- Visual Studio Magazine",
    "Url": "https://visualstudiomagazine.com/articles/2022/04/19/java-vs-code-apr22.aspx",
    "Timestamp": "2022-04-19T21:03:57",
    "Domain": "visualstudiomagazine.com",
    "Description": "  The regular monthly update to Java on Visual Studio Code adds support for the latest edition of the language, Java 18.\n",
    "Confidence": 0.95283026
  },
  {
    "Title": "The Next COVID Crisis: Funding (with Jeff Zients and Zeke Emanuel)",
    "Url": "https://player.fm/series/in-the-bubble-with-andy-slavitt/the-next-covid-crisis-funding-with-jeff-zients-and-zeke-emanuel",
    "Timestamp": "2022-04-19T21:03:57",
    "Domain": "player.fm",
    "Description": "<p>Andy tackles the pressing need for more COVID funding with two guests who are fighting to make it happen: outgoing White House Coronavirus Coordinator Jeff Zients and former COVID Transition Team member Dr. Zeke Emanuel. What will happen if the U.S. can't afford to pay for a fourth round of vaccines? And what is holding Congress up? Zeke and Andy also discuss the plan Zeke is spearheading for the next phase of the pandemic, and Andy puts Zeke through a lightning round where he asks him about variant-specific vaccines, the potential return of mask mandates, how best to use oral antivirals like Paxlovid, and much more.</p><p>Keep up with Andy on Twitter @ASlavitt and Instagram @andyslavitt. </p><p>Follow Zeke @ZekeEmanuel on Twitter.</p><p>Joining Lemonada Premium is a great way to support our show and get bonus content. Subscribe today at <a href=\"http://bit.ly/lemonadapremium\">bit.ly/lemonadapremium</a>. </p><p><strong>Support the show by checking out our sponsors!</strong></p><ul> <li>Click this link for a list of current sponsors and discount codes for this show and all Lemonada shows: <a href=\"https://lemonadamedia.com/sponsors/\">https://lemonadamedi</a>...</li>\n</ul>",
    "Confidence": 0.7977227
  },
  {
    "Title": "James Montemagno on Maui!",
    "Url": "https://jesseliberty.com/2022/04/19/james-montemagno-on-maui/",
    "Timestamp": "2022-04-19T19:02:29",
    "Domain": "jesseliberty.com",
    "Description": "I’m joined by James Montemagno, Principal Lead Program Manager for .NET Community at Microsoft, and the most enthusiastic person I know. James is the author of the .NET Presentations – …",
    "Confidence": 0.89804065
  },
  {
    "Title": "TypeScript 4.7 Beta Tackles 'Very Difficult' ECMAScript Module Support -- Visual Studio Magazine",
    "Url": "https://visualstudiomagazine.com/articles/2022/04/19/typescript-4-7-beta.aspx",
    "Timestamp": "2022-04-19T19:02:23",
    "Domain": "visualstudiomagazine.com",
    "Description": "  Microsoft shipped the beta release of TypeScript 4.7, which tackles a 'very difficult feature,' ECMAScript Module Support in Node.js.\n",
    "Confidence": 0.9343188
  },
  {
    "Title": "De-AMP: Cutting Out Google and Enhancing Privacy | Brave Browser",
    "Url": "https://brave.com/privacy-updates/18-de-amp/",
    "Timestamp": "2022-04-19T19:02:21",
    "Domain": "brave.com",
    "Description": "Brave is rolling out a new feature called De-AMP, which allows Brave users to bypass Google-hosted AMP pages, and instead visit the content's publisher directly.",
    "Confidence": 0.90398604
  },
  {
    "Title": ".NET Celebrates 20 years and brings us a GIFT🎁: New .NET 7 Features Revealed",
    "Url": "https://dev.to/dotnetsafer/net-celebrates-20-years-and-brings-us-a-gift-new-net-7-features-revealed-fba",
    "Timestamp": "2022-04-19T19:02:21",
    "Domain": "dev.to",
    "Description": "Who better person to announce the 20th anniversary of .NET than Bill Gates? Well, that’s how it went...",
    "Confidence": 0.99272513
  },
  {
    "Title": "Look Scanned",
    "Url": "https://lookscanned.io/",
    "Timestamp": "2022-04-19T19:02:21",
    "Domain": "lookscanned.io",
    "Description": "Look Scanned is a pure frontend site that makes your PDFs look scanned! No need for printers and scanners anymore - everything you need to do is just a few clicks.",
    "Confidence": 0.92361736
  },
  {
    "Title": "Exponentially Better Rotations",
    "Url": "https://thenumbat.github.io/Exponential-Rotations/",
    "Timestamp": "2022-04-19T16:01:57",
    "Domain": "thenumbat.github.io",
    "Description": "Based on CMU 15-462 course materials by Keenan Crane.\n\nIf you’ve done any 3D programming, you’ve likely encountered the zoo of techniques and representations used when working with 3D rotations. Some of them are better than others, depending on the situation.\n\nTable of Contents\n\n  Representations\n    \n      Rotation Matrices\n      Euler Angles\n      Quaternions\n      Axis/Angle\n    \n  \n  The Exponential and Logarithmic Maps\n    \n      Axis/Angle in 2D\n      Axis/Angle in 3D\n      Averaging Rotations\n      Quaternions (Again)\n    \n  \n  Further Reading\n\n\nRepresentations\n\nRotation Matrices\n\nLinear-algebra-wise, the most straightforward representation is an orthonormal 3x3 matrix (with positive determinant). The three columns of a rotation matrix specify where the x, y, and z axes end up after the rotation.\n\nRotation matrices are particularly useful for transforming points: just multiply! Even better, rotation matrices can be composed with any other linear transformations via matrix multiplication. That’s why we use rotation matrices when actually drawing things on screen: only one matrix multiplication is required to transform a point from world-space to the screen. However, rotation matrices are not so useful for actually working with rotations: because they don’t form a vector space, adding together two rotation matrices will not give you a rotation matrix back. For example, animating an object by linearly interpolating between two rotation matrices adds scaling:\n\n\n\n\n\n\n\nRandomize\n\n\n\n$$ R_0 = \\begin{bmatrix}1&0&0\\\\0&1&0\\\\0&0&1\\end{bmatrix} $$\n$$ R(0) = \\begin{bmatrix}1.00&0.00&0.00\\\\0.00&1.00&0.00\\\\0.00&0.00&1.00\\end{bmatrix} $$\n$$ R_1 = \\begin{bmatrix}-1&0&0\\\\0&1&0\\\\0&0&-1\\end{bmatrix} $$\n\n\nEuler Angles\n\nAnother common representation is Euler angles, which specify three separate rotations about the x, y, and z axes (also known as pitch, yaw, and roll). The order in which the three component rotations are applied is an arbitrary convention—here we’ll apply x, then y, then z.\n\n\n\n$$\\theta_x$$\n$$\\theta_y$$Lock\n$$\\theta_z$$\n\n\nEuler angles are generally well-understood and often used for authoring rotations. However, using them for anything else comes with some significant pitfalls. While it’s possible to manually create splines that nicely interpolate Euler angles, straightforward interpolation often produces undesirable results.\n\nEuler angles suffer from gimbal lock when one component causes the other two axes of rotation to become parallel. Such configurations are called singularities. At a singularity, changing either of two ‘locked’ angles will cause the same output rotation. You can demonstrate this phenomenon above by pressing the ‘lock’ button and adjusting the x/z rotations (a quarter rotation about y aligns the z axis with the x axis).\n\nSingularities break interpolation: if the desired path reaches a singularity, it gains a degree of freedom with which to represent its current position. Picking an arbitrary representation to continue with causes discontinuities in the interpolated output: even within an axis, interpolation won’t produce a constant angular velocity. That can be a problem if, for example, you’re using the output to drive a robot. Furthermore, since each component angle is cyclic, linear interpolation won’t always choose the shortest path between rotations.\n\n\n\n\nRandomize\n\n\n\n$$ \\mathbf{\\theta}_0 = \\begin{bmatrix}0\\\\0\\\\0\\end{bmatrix} $$\n$$ \\mathbf{\\theta}(0) = \\begin{bmatrix}0.00\\\\0.00\\\\0.00\\end{bmatrix} $$\n$$ \\mathbf{\\theta}_1 = \\begin{bmatrix}-3.14\\\\0.00\\\\-3.14\\end{bmatrix} $$\n\n\nThankfully, interpolation is smooth if the path doesn’t go through a singularity, so these limitations can be worked around, especially if you don’t need to represent ‘straight up’ and ‘straight down.’\n\nQuaternions\n\nAt this point, you might be expecting yet another article on quaternions—don’t worry, we’re not going to delve into hyper-complex numbers today. It suffices to say that unit quaternions are the standard tool for composing and interpolating rotations, since spherical linear interpolation (slerp) chooses a constant-velocity shortest path between any two quaternions. However, unit quaternions also don’t form a vector space, are unintuitive to author, and can be computationally costly to interpolate*. Further, there’s no intuitive notion of scalar multiplication, nor averaging.\n\nBut, they’re still fascinating! If you’d like to understand quaternions more deeply (or, perhaps, learn what they are in the first place), read this.\n\n\n\n\nRandomize\n\n\n\n$$ Q_0 = \\begin{bmatrix}1\\\\0\\\\0\\\\0\\end{bmatrix}\\ \\ $$\n$$ Q(0) = \\begin{bmatrix}1.00\\\\0.00\\\\0.00\\\\0.00\\end{bmatrix}\\ \\ $$\n$$ Q_1 = \\begin{bmatrix}0\\\\0\\\\1\\\\0\\end{bmatrix} $$\n\n\nNote that since quaternions double-cover the space of rotations, sometimes \\(Q(1)\\) will go to \\(-Q_1\\).\n\nAxis/Angle Rotations\n\nAn axis/angle rotation is a 3D vector of real numbers. Its direction specifies the axis of rotation, and its magnitude specifies the angle to rotate about that axis. For convenience, we’ll write axis/angle rotations as \\(\\theta\\mathbf{u}\\), where \\(\\mathbf{u}\\) is a unit-length vector and \\(\\theta\\) is the rotation angle.\n\n\n\n\n$$\\mathbf{u}_x$$\n$$\\mathbf{u}_y$$\n$$\\mathbf{u}_z$$\n$$\\theta$$\n\n\nSince axis/angle rotations are simply 3D vectors, they form a vector space: we can add, scale, and interpolate them to our heart’s content. Linearly interpolating between any two axis/angle rotations is smooth and imparts constant angular velocity. However, note that linearly interpolating between axis-angle rotations does not necessarily choose the shortest path: it depends on which axis/angle you use to specify the target rotation.\n\n\n\n\nRandomize\n\n\n\n$$ \\theta_0\\mathbf{u}_0 = \\begin{bmatrix}0\\\\0\\\\0\\end{bmatrix}\\ \\ $$\n$$ \\theta\\mathbf{u}(0) = \\begin{bmatrix}0.00\\\\0.00\\\\0.00\\end{bmatrix}\\ \\ $$\n$$ \\theta_1\\mathbf{u}_1 = \\begin{bmatrix}0\\\\3.14\\\\0\\end{bmatrix} $$\n\n\nLike quaternions, axis/angle vectors double-cover the space of rotations: sometimes \\(\\theta\\mathbf{u}(1)\\) will go to \\((2\\pi - \\theta_1)(-\\mathbf{u}_1)\\).\n\nThe Exponential and Logarithmic Maps\n\nIdeally, we could freely convert rotations between these diverse representations based on our use case. We will always want to get a rotation matrix out at the end, so we’ll consider matrices the ‘canonical’ form. Enter the exponential map: a function that takes a different kind of rotation object and gives us back an equivalent rotation matrix. The corresponding logarithmic map takes a rotation matrix and gives us back a rotation object. How these maps relate to the scalar exp and log functions will hopefully become clear later on.\n\n\n\nBelow, we’ll define an exp and log map translating between rotation matrices and axis/angle vectors. But first, to build up intuition, let us consider how rotations work in two dimensions.\n\nAxis/Angle in 2D\n\nIn 2D, there’s only one axis to rotate around: the one pointing out of the plane. Hence, our ‘axis/angle’ rotations can be represented by just \\(\\theta\\).\n\nGiven a 2D point \\(\\mathbf{p}\\), how can we rotate \\(\\mathbf{p}\\) by \\(\\theta\\)? One way to visualize the transformation is by forming a coordinate frame in which the output is easy to describe. Consider \\(\\mathbf{p}\\) and its quarter (\\(90^\\circ\\)) rotation \\(\\mathcal{J}\\mathbf{p}\\):\n\n\n\nUsing a bit of trigonometry, we can describe the rotated \\(\\mathbf{p}_\\theta\\) in two components:\n\n\\[\\begin{align*} \\mathbf{p}_\\theta &= \\mathbf{p}\\cos\\theta + \\mathcal{J}\\mathbf{p}\\sin\\theta \\\\\n &= (\\cos(\\theta)\\mathcal{I} + \\sin(\\theta)\\mathcal{J})\\mathbf{p} \\end{align*}\\]\n\nBut, what actually are \\(\\mathcal{I}\\) and \\(\\mathcal{J}\\)? The former should take a 2D vector and return it unchanged: it’s the 2x2 identity matrix. The latter should be similar, but swap and negate the two components:\n\n\\[\\begin{align*} \\mathcal{I} &= \\begin{bmatrix}1&0\\\\0&1\\end{bmatrix} \\\\ \\mathcal{J} &= \\begin{bmatrix}0&-1\\\\1&0\\end{bmatrix} \\end{align*}\\]\n\nJust to make sure we got \\(\\mathcal{J}\\) right, let’s check what happens if we apply it twice (via \\(\\mathcal{J}^2\\)):\n\n\\[\\mathcal{J}^2 = \\begin{bmatrix}0&-1\\\\1&0\\end{bmatrix}\\begin{bmatrix}0&-1\\\\1&0\\end{bmatrix} = \\begin{bmatrix}-1&0\\\\0&-1\\end{bmatrix}\\]\n\nWe got \\(\\mathcal{J}^2 = -\\mathcal{I}\\), which is a 180-degree rotation. So, \\(\\mathcal{J}\\) indeed represents 90-degree rotation.\n\nNow, what does our transform look like?\n\n\\[\\begin{align*} \n\\mathbf{p}_\\theta &= (\\cos(\\theta)\\mathcal{I} + \\sin(\\theta)\\mathcal{J})\\mathbf{p} \\\\\n                  &= \\left(\\cos(\\theta)\\begin{bmatrix}1&0\\\\0&1\\end{bmatrix} + \\sin(\\theta)\\begin{bmatrix}0&-1\\\\1&0\\end{bmatrix}\\right)\\mathbf{p} \\\\\n                  &= \\begin{bmatrix}\\cos\\theta&-\\sin\\theta\\\\\\sin\\theta&\\cos\\theta\\end{bmatrix}\\mathbf{p}\n\\end{align*}\\]\n\nThat’s the standard 2D rotation matrix. What a coincidence!\n\nComplex Rotations\n\nIf you’re familiar with complex numbers, you might notice that our first transform formula feels eerily similar to Euler’s formula, \\(e^{ix} = \\cos x + i\\sin x\\):\n\n\\[\\begin{align*} \n\\mathbf{p}_\\theta &= (\\cos(\\theta)\\mathcal{I} + \\sin(\\theta)\\mathcal{J})\\mathbf{p} \\\\\ne^{i\\theta}p &= (\\cos(\\theta) + i\\sin(\\theta))p\n\\end{align*}\\]\n\n\n\nWhere \\(i\\) and \\(\\mathcal{J}\\) both play the role of a quarter turn. We can see that in complex arithmetic, multiplying by \\(i\\) in fact has that effect:\n\n\\[\\mathcal{J}\\mathbf{p} = \\begin{bmatrix}0&-1\\\\1&0\\end{bmatrix}\\begin{bmatrix}a\\\\b\\end{bmatrix} = \\begin{bmatrix}-b\\\\a\\end{bmatrix}\\]\n\n\\[ip = i(a + bi) = ai + bi^2 = -b + ai\\]\n\nSo, there must be some connection to the exponential function here.\n\nThe 2D Exponential Map\n\nRecall the definition of the exponential function (or equivalently, its Taylor series):\n\n\\[e^x = \\sum_{k=0}^\\infty \\frac{x^k}{k!} = 1 + x + \\frac{x^2}{2!} + \\frac{x^3}{3!} + \\dots\\]\n\nUsing Euler’s formula, \\(e^{i\\theta}\\) gave us a complex number representing a 2D rotation by \\(\\theta\\). Can we do the same with \\(e^{\\theta\\mathcal{J}}\\)? If we plug a matrix into the above definition, the arithmetic still works out: 2x2 matrices certainly support multiplication, addition, and scaling. (More on matrix exponentiation here.)\n\nLet \\(\\theta\\mathcal{J} = A\\) and plug it in:\n\n\\[e^A = \\sum_{k=0}^\\infty \\frac{A^k}{k!} = \\mathcal{I} + A + \\frac{A^2}{2!} + \\frac{A^3}{3!} + \\dots\\]\n\nLet’s pull out the first four terms to inspect further:\n\n\\[\\begin{align*}\ne^A &= \\mathcal{I} + A + \\frac{1}{2!}A^2 + \\frac{1}{3!}A^3 \\\\\n    &= \\mathcal{I} + A\\left(\\mathcal{I} + \\frac{1}{2}A\\left(\\mathcal{I} + \\frac{1}{3}A\\right)\\right) \\\\\n    &= \\mathcal{I} + A\\left(\\mathcal{I} + \\frac{1}{2}A\\begin{bmatrix}1&\\frac{-\\theta}{3}\\\\\\frac{\\theta}{3}&1\\end{bmatrix}\\right) \\\\\n    &= \\mathcal{I} + A\\begin{bmatrix}1-\\frac{\\theta^2}{6}&\\frac{-\\theta}{2}\\\\\\frac{\\theta}{2}&1-\\frac{\\theta^2}{6}\\end{bmatrix} \\\\\n    &= \\begin{bmatrix}1-\\frac{\\theta^2}{2}&-\\theta+\\frac{\\theta^3}{6}\\\\\\theta-\\frac{\\theta^3}{6}&1-\\frac{\\theta^2}{2}\\end{bmatrix}\n\\end{align*}\\]\n\nThese entries look familiar. Recall the Taylor series that describe the functions \\(\\sin\\) and \\(\\cos\\):\n\n\\[\\begin{align*} \\sin x &= x - \\frac{x^3}{3!} + \\frac{x^5}{5!} - \\dots  \\\\\n\\cos x &= 1 - \\frac{x^2}{2!} + \\frac{x^4}{4!} - \\dots \\end{align*}\\]\n\nIf we write out all the terms of \\(e^A\\), we’ll recover the expansions of \\(\\sin\\theta\\) and \\(\\cos\\theta\\)! Therefore:\n\n\\[e^A = e^{\\theta\\mathcal{J}} = \\begin{bmatrix}\\cos\\theta&-\\sin\\theta\\\\\\sin\\theta&\\cos\\theta\\end{bmatrix}\\]\n\nWe’ve determined that the exponential function \\(e^{\\theta\\mathcal{J}}\\) converts our angle \\(\\theta\\) into a corresponding 2D rotation matrix. In fact, we’ve proved a version of Euler’s formula with 2x2 matrices instead of complex numbers:\n\n\\[\\begin{align*} && e^{\\theta\\mathcal{J}} &= (\\cos(\\theta)\\mathcal{I} + \\sin(\\theta)\\mathcal{J})\\\\\n    &\\implies& \\mathbf{p}_\\theta &= e^{\\theta\\mathcal{J}}\\mathbf{p} \n\\end{align*}\\]\n\nThe 2D Logarithmic Map\n\nThe logarithmic map should naturally be the inverse of the exponential:\n\n\\[R = \\exp(\\theta\\mathcal{J}) \\implies \\log(R) = \\theta\\mathcal{J}\\]\n\nSo, given \\(R\\), how can we recover \\(\\theta\\mathcal{J}\\)?\n\n\\[\\begin{align*}\n&& R &= \\begin{bmatrix}\\cos\\theta&-\\sin\\theta\\\\\\sin\\theta&\\cos\\theta\\end{bmatrix}\\\\\n&\\implies& \\theta &= \\text{atan2}(R_{21},R_{11})\\\\\n&\\implies& \\log(R) &= \\begin{bmatrix}0&-\\theta\\\\\\theta&0\\end{bmatrix}\n\\end{align*}\\]\n\nNote that in general, our exponential map is not injective. Clearly, \\(\\exp(\\theta\\mathcal{J}) = \\exp((\\theta + 2\\pi)\\mathcal{J})\\), since adding an extra full turn will always give us back the same rotation matrix. Therefore, our logarithmic map can’t be surjective—we’ll define it as returning the smallest angle \\(\\theta\\mathcal{J}\\) corresponding to the given rotation matrix. Using \\(\\text{atan2}\\) implements this definition.\n\nInterpolation\n\nConsider two 2D rotation angles \\(\\theta_0\\) and \\(\\theta_1\\). The most obvious way to interpolate between these two rotations is to interpolate the angles and create the corresponding rotation matrix. This scheme is essentially a 2D version of axis-angle interpolation.\n\n\\[\\begin{align*} \\theta(t) &= (1-t)\\theta_0 + t\\theta_1\\\\\nR_\\theta(t) &= \\begin{bmatrix}\\cos(\\theta(t))&-\\sin(\\theta(t))\\\\\\sin(\\theta(t))&\\cos(\\theta(t))\\end{bmatrix}\n\\end{align*}\\]\n\nHowever, if \\(\\theta_0\\) and \\(\\theta_1\\) are separated by more than \\(\\pi\\), this expression will take the long way around: it’s not aware that angles are cyclic.\n\n\n\n\nRandomize\n\n\n\n$$ \\theta_0 = 0\\ \\ $$\n$$ \\theta(0) = 0.00\\ \\ $$\n$$ \\theta_1 = 4.71 $$\n\n\nInstead, let’s devise an interpolation scheme based on our exp/log maps. Since we know the two rotation matrices \\(R_0\\), \\(R_1\\), we can express the rotation that takes us directly from the initial pose to the final pose: \\(R_1R_0^{-1}\\), i.e. first undo \\(R_0\\), then apply \\(R_1\\).\n\nUsing our logarithmic map, we can obtain the smallest angle that rotates from \\(R_0\\) to \\(R_1\\): \\(\\log(R_1R_0^{-1})\\). Since \\(\\log\\) gives us an axis-angle rotation, we can simply scale the result by \\(t\\) to perform interpolation. After scaling, we can use our exponential map to get back a rotation matrix. This matrix represents a rotation \\(t\\) of the way from \\(R_0\\) to \\(R_1\\).\n\nHence, our final parametric rotation matrix is \\(R(t) = \\exp(t\\log(R_1R_0^{-1})))R_0\\).\n\n\\[\\begin{align*} R(0) &= \\exp(0)R_0 = R_0\\\\\nR(1) &= \\exp(\\log(R_1R_0^{-1}))R_0 = R_1R_0^{-1}R_0 = R_1 \\end{align*}\\]\n\n\n\n\nRandomize\n\n\n\n$$ R_0 = \\begin{bmatrix}1&0\\\\0&1\\end{bmatrix} $$\n$$ R(0) = \\begin{bmatrix}1.00&0.00\\\\0.00&1.00\\end{bmatrix} $$\n$$ R_1 = \\begin{bmatrix}0&-1\\\\1&0\\end{bmatrix} $$\n\n\nUsing exp/log for interpolation might seem like overkill for 2D—we could instead just check how far apart the angles are. But below, we’ll see how this interpolation scheme generalizes—without modification—to 3D, and in fact any number of dimensions.\n\nAxis/Angle in 3D\n\nWe’re finally ready to derive an exponential and logarithmic map for 3D rotations. In 2D, our map arose from exponentiating \\(\\theta\\mathcal{J}\\), i.e. \\(\\theta\\) times a matrix representing a counter-clockwise quarter turn about the axis of rotation. We will be able to do the same in 3D—but what transformation encodes a quarter turn about a 3D unit vector \\(\\mathbf{u}\\)?\n\nThe cross product \\(\\mathbf{u}\\times\\mathbf{p}\\) is typically defined as a vector normal to the plane containing both \\(\\mathbf{u}\\) and \\(\\mathbf{p}\\). However, we could also interpret \\(\\mathbf{u}\\times\\mathbf{p}\\) as a quarter turn of the projection of \\(\\mathbf{p}\\) into the plane with normal \\(\\mathbf{u}\\), which we will call \\(\\mathbf{p}_\\perp\\):\n\n\n\nSo, if we can compute the quarter rotation of \\(\\mathbf{p}_\\perp\\), it should be simple to recover the quarter rotation of \\(\\mathbf{p}\\). Of course, \\(\\mathbf{p}=\\mathbf{p}_\\perp+\\mathbf{p}_\\parallel\\), so we’ll just have to add back the parallel part \\(\\mathbf{p}_\\parallel\\). This is correct because a rotation about \\(\\mathbf{u}\\) preserves \\(\\mathbf{p}_\\parallel\\):\n\n\n\nHowever, “\\(\\mathbf{u} \\times\\)” is not a mathematical object we can work with. Instead, we can devise a matrix \\(\\mathbf{\\hat{u}}\\) that when multiplied with a a vector \\(\\mathbf{p}\\), outputs the same result as \\(\\mathbf{u} \\times \\mathbf{p}\\):\n\n\\[\\begin{align*}\n\\mathbf{u} \\times \\mathbf{p} &= \\begin{bmatrix} u_yp_z - u_zp_y \\\\ u_zp_x - u_xp_z \\\\ u_xp_y - u_yp_x \\end{bmatrix} \\\\\n &= \\begin{bmatrix}0&-u_z&u_y\\\\u_z&0&-u_x\\\\-u_y&u_x&0\\end{bmatrix}\\begin{bmatrix}p_x\\\\p_y\\\\p_z\\end{bmatrix} \\\\\n &= \\mathbf{\\hat{u}}\\mathbf{p}\n\\end{align*}\\]\n\nWe can see that \\(\\mathbf{\\hat{u}}^T = -\\mathbf{\\hat{u}}\\), so \\(\\mathbf{\\hat{u}}\\) is a skew-symmetric matrix. (i.e. it has zeros along the diagonal, and the two halves are equal but negated.) Note that in the 2D case, our quarter turn \\(\\mathcal{J}\\) was also skew-symmetric, and sneakily represented the 2D cross product! We must be on the right track.\n\nThe reason we want to use axis/angle rotations in the first place is because they form a vector space. So, let’s make sure our translation to skew-symmetric matrices maintains that property. Given two skew-symmetric matrices \\(A_1\\) and \\(A_2\\):\n\n\\[(A_1 + A_2)^T = A_1^T + A_2^T = -A_1 - A_2 = -(A_1 + A_2)\\]\n\nTheir sum is also a skew-symmetric matrix. Similarly:\n\n\\[(cA)^T = c(A^T) = -cA_1\\]\n\nScalar multiplication also maintains skew-symmetry. The other vector space properties follow from the usual definition of matrix addition.\n\nFinally, note that \\(\\mathbf{u} \\times (\\mathbf{u} \\times (\\mathbf{u} \\times \\mathbf{p})) = -\\mathbf{u} \\times \\mathbf{p}\\). Taking the cross product three times would rotate \\(\\mathbf{p}_\\perp\\) three-quarter turns about \\(\\mathbf{u}\\), which is equivalent to a single negative-quarter turn. More generally, \\(\\mathbf{\\hat{u}}^{k+2} = -\\mathbf{\\hat{u}}^k\\) for any \\(k>0\\). We could prove this by writing out all the terms, but the geometric argument is easier:\n\n\n\nThe 3D Exponential Map\n\nGiven an axis/angle rotation \\(\\theta\\mathbf{u}\\), we can make \\(\\theta\\mathbf{\\hat{u}}\\) using the above construction. What happens when we exponentiate it? Using the identity \\(\\mathbf{\\hat{u}}^{k+2} = -\\mathbf{\\hat{u}}^k\\):\n\n\\[\\begin{align*}\ne^{\\theta\\mathbf{\\hat{u}}} &= \\mathcal{I} + \\theta\\mathbf{\\hat{u}} + \\frac{1}{2!}\\theta^2\\mathbf{\\hat{u}}^2 + \\frac{1}{3!}\\theta^3\\mathbf{\\hat{u}}^3 + \\frac{1}{4!}\\theta^4\\mathbf{\\hat{u}}^4 + \\frac{1}{5!}\\theta^5\\mathbf{\\hat{u}}^5 + \\dots \\\\\n&= \\mathcal{I} + \\theta\\mathbf{\\hat{u}} + \\frac{1}{2!}\\theta^2\\mathbf{\\hat{u}}^2 - \\frac{1}{3!}\\theta^3\\mathbf{\\hat{u}} - \\frac{1}{4!}\\theta^4\\mathbf{\\hat{u}}^2 + \\frac{1}{5!}\\theta^5\\mathbf{\\hat{u}} + \\dots \\\\\n&= \\mathcal{I} + \\left(\\theta - \\frac{1}{3!}\\theta^2 + \\frac{1}{5!}\\theta^5 - \\dots\\right)\\mathbf{\\hat{u}} + \\left(1 - \\left(1 - \\frac{1}{2!}\\theta^2 + \\frac{1}{4!}\\theta^4 - \\dots\\right)\\right)\\mathbf{\\hat{u}}^2 \\\\\n&= \\mathcal{I} + \\sin(\\theta)\\mathbf{\\hat{u}} + (1-\\cos(\\theta))\\mathbf{\\hat{u}}^2\n\\end{align*}\\]\n\nIn the last step, we again recover the Taylor expansions of \\(\\sin\\theta\\) and \\(\\cos\\theta\\). Our final expression is known as Rodrigues’ formula.\n\nThis formula is already reminiscent of the 2D case: the latter two terms are building up a 2D rotation in the plane defined by \\(\\mathbf{u}\\). To sanity check our 3D result, let’s compute our transform for \\(\\theta = 0\\):\n\n\\[e^{0\\mathbf{\\hat{u}}}\\mathbf{p} = (\\mathcal{I} + 0\\mathbf{\\hat{u}} + (1-1)\\mathbf{\\hat{u}}^2)\\mathbf{p} = \\mathbf{p}\\]\n\nRotating by \\(\\theta = 0\\) preserves \\(\\mathbf{p}\\), so the formula works. Then compute for \\(\\theta = \\frac{\\pi}{2}\\):\n\n\\[\\begin{align*} e^{\\frac{\\pi}{2}\\mathbf{\\hat{u}}}\\mathbf{p} &= (\\mathcal{I} + 1\\mathbf{\\hat{u}} + (1-0)\\mathbf{\\hat{u}}^2)\\mathbf{p} \\\\ &= \\mathbf{p} + \\mathbf{\\hat{u}}\\mathbf{p} + \\mathbf{\\hat{u}}^2\\mathbf{p} \\\\\n&= \\mathbf{p} + \\mathbf{u}\\times\\mathbf{p} + \\mathbf{u}\\times(\\mathbf{u}\\times\\mathbf{p})\\\\\n&= (\\mathbf{p}_\\perp + \\mathbf{p}_\\parallel) + \\mathbf{u}\\times\\mathbf{p} - \\mathbf{p}_\\perp\\\\\n&= \\mathbf{u}\\times\\mathbf{p} + \\mathbf{p}_\\parallel \n\\end{align*}\\]\n\nAbove, we already concluded \\(\\mathbf{u}\\times\\mathbf{p} + \\mathbf{p}_\\parallel\\) is a quarter rotation. So, our formula is also correct at \\(\\theta = \\frac{\\pi}{2}\\). Then compute for \\(\\theta = \\pi\\):\n\n\\[\\begin{align*} e^{\\pi\\mathbf{\\hat{u}}}\\mathbf{p} &= (\\mathcal{I} + 0\\mathbf{\\hat{u}} + (1-(-1))\\mathbf{\\hat{u}}^2)\\mathbf{p} \\\\\n&= \\mathbf{p} + 2\\mathbf{\\hat{u}}^2\\mathbf{p} \\\\\n&= (\\mathbf{p}_\\perp + \\mathbf{p}_\\parallel) - 2\\mathbf{p}_\\perp \\\\\n&= -\\mathbf{p}_\\perp + \\mathbf{p}_\\parallel\n\\end{align*}\\]\n\n\n\nWe end up with \\(-\\mathbf{p}_\\perp + \\mathbf{p}_\\parallel\\), which is a half rotation. Hence \\(\\theta = \\pi\\) is also correct.\n\nSo far, our formula checks out. Just to be sure, let’s prove that our 3D result is a rotation matrix, i.e. it’s orthonormal and has positive determinant. A matrix is orthonormal if \\(A^TA = \\mathcal{I}\\), so again using \\(\\mathbf{\\hat{u}}^{k+2} = -\\mathbf{\\hat{u}}^k\\):\n\n\\[\\begin{align*} \n&\\left(\\mathcal{I} + \\sin(\\theta)\\mathbf{\\hat{u}} + (1-\\cos(\\theta))\\mathbf{\\hat{u}}^2\\right)^T\\left(\\mathcal{I} + \\sin(\\theta)\\mathbf{\\hat{u}} + (1-\\cos(\\theta))\\mathbf{\\hat{u}}^2\\right) \\\\\n=& \\left(\\mathcal{I}^T + \\sin(\\theta)\\mathbf{\\hat{u}}^T + (1-\\cos(\\theta))\\left(\\mathbf{\\hat{u}}^T\\right)^2\\right)\\left(\\mathcal{I} + \\sin(\\theta)\\mathbf{\\hat{u}} + (1-\\cos(\\theta))\\mathbf{\\hat{u}}^2\\right) \\\\\n=&\\ (\\mathcal{I} - \\sin(\\theta)\\mathbf{\\hat{u}} + (1-\\cos(\\theta))\\mathbf{\\hat{u}}^2)\\left(\\mathcal{I} + \\sin(\\theta)\\mathbf{\\hat{u}} + (1-\\cos(\\theta))\\mathbf{\\hat{u}}^2\\right) \\\\\n=&\\ \\mathcal{I} + \\sin(\\theta)\\mathbf{\\hat{u}} + (1-\\cos(\\theta))\\mathbf{\\hat{u}}^2 - \\sin(\\theta)\\mathbf{\\hat{u}} - \\sin^2(\\theta)\\mathbf{\\hat{u}}^2 - \\sin(\\theta)(1-\\cos(\\theta))\\mathbf{\\hat{u}}^3 \\\\&+ (1-\\cos(\\theta))\\mathbf{\\hat{u}}^2 + \\sin(\\theta)(1-\\cos(\\theta))\\mathbf{\\hat{u}}^3 + (1-\\cos(\\theta))\\mathbf{\\hat{u}}^4 \\\\\n=&\\ \\mathcal{I} + \\sin(\\theta)\\mathbf{\\hat{u}} + (1-\\cos(\\theta))\\mathbf{\\hat{u}}^2 - \\sin(\\theta)\\mathbf{\\hat{u}} - \\sin^2(\\theta)\\mathbf{\\hat{u}} + \\sin(\\theta)(1-\\cos(\\theta))\\mathbf{\\hat{u}} \\\\&+ (1-\\cos(\\theta))\\mathbf{\\hat{u}}^2 - \\sin(\\theta)(1-\\cos(\\theta))\\mathbf{\\hat{u}} - (1-\\cos(\\theta))^2\\mathbf{\\hat{u}}^2\\\\\n=&\\ \\mathcal{I} - \\sin^2(\\theta)\\mathbf{\\hat{u}}^2 + (1-\\cos(\\theta))^2\\mathbf{\\hat{u}}^2\\\\\n=&\\ \\mathcal{I} + (-\\sin^2(\\theta)+1-\\cos^2(\\theta))\\mathbf{\\hat{u}}^2\\\\\n=&\\ \\mathcal{I} + (1-(\\sin^2(\\theta)+\\cos^2(\\theta)))\\mathbf{\\hat{u}}^2\\\\\n=&\\ \\mathcal{I}\n\\end{align*}\\]\n\nTherefore, \\(e^{\\theta\\mathbf{\\hat{u}}}\\) is orthonormal. We could show its determinant is positive (and therefore \\(1\\)) by writing out all the terms, but it suffices to argue that:\n\n\n  Clearly, \\(\\begin{vmatrix}\\exp(0\\mathbf{\\hat{u}})\\end{vmatrix} = \\begin{vmatrix}\\mathcal{I}\\end{vmatrix} = 1\\)\n  There is no \\(\\theta\\), \\(\\mathbf{\\hat{u}}\\) such that \\(\\begin{vmatrix}\\exp(\\theta\\mathbf{\\hat{u}})\\end{vmatrix} = 0\\), since \\(\\mathbf{\\hat{u}}\\) and \\(\\mathbf{\\hat{u}}^2\\) can never cancel out \\(\\mathcal{I}\\).\n  \\(\\exp\\) is continuous with respect to \\(\\theta\\) and \\(\\mathbf{\\hat{u}}\\)\n\n\nTherefore, \\(\\begin{vmatrix}\\exp(0\\mathbf{\\hat{u}})\\end{vmatrix}\\) can never become negative. That means \\(\\exp(\\theta\\mathbf{\\hat{u}})\\) is a 3D rotation matrix!\n\nThe 3D Logarithmic Map\n\nSimilarly to the 2D case, the 3D exponential map is not injective, so the 3D logarithmic map will not be surjective. Instead, we will again define it to return the smallest magnitude axis-angle rotation corresponding to the given matrix. Our exponential map gave us:\n\n\\[R = \\exp(\\theta\\mathbf{\\hat{u}}) = \\mathcal{I} + \\sin(\\theta)\\mathbf{\\hat{u}} + (1-\\cos(\\theta))\\mathbf{\\hat{u}}^2\\]\n\nWe can take the trace (sum along the diagonal) of both sides:\n\n\\[\\operatorname{tr}(R) = \\operatorname{tr}(\\mathcal{I}) + \\sin(\\theta)\\operatorname{tr}(\\mathbf{\\hat{u}}) + (1-\\cos(\\theta))\\operatorname{tr}(\\mathbf{\\hat{u}}^2)\\]\n\nClearly \\(\\operatorname{tr}(\\mathcal{I}) = 3\\), and since \\(\\mathbf{\\hat{u}}\\) is skew-symmetric, its diagonal sum is zero. That just leaves \\(\\mathbf{\\hat{u}}^2\\):\n\n\\[\\mathbf{\\hat{u}}^2 = \\begin{bmatrix}-u_y^2-u_z^2&u_xu_y&u_xu_z\\\\u_xu_y&-u_x^2-u_z^2&u_yu_z\\\\u_xu_z&u_yu_z&-u_x^2-u_y^2\\end{bmatrix}\\]\n\nWe can see \\(\\operatorname{tr}(\\mathbf{\\hat{u}}^2) = -2u_x^2-2u_y^2-2u_z^2 = -2\\|\\mathbf{u}\\|^2 = -2\\). (We originally defined \\(\\mathbf{u}\\) as a unit vector.) Our final trace becomes:\n\n\\[\\begin{align*} && \\operatorname{tr}(R) &= 3 + 0\\sin(\\theta) - 2(1-\\cos(\\theta)) \\\\ &&&= 1 + 2\\cos\\theta \\\\\n&\\implies& \\theta &= \\arccos\\left(\\frac{\\operatorname{tr}(R)-1}{2}\\right) \\end{align*}\\]\n\nThat’s half of our logarithmic map. To recover \\(\\mathbf{\\hat{u}}\\), we can antisymmetrize \\(R\\). Recall \\(\\mathbf{\\hat{u}}^T = -\\mathbf{\\hat{u}}\\), and that \\(\\mathbf{\\hat{u}}^2\\) is symmetric (above).\n\n\\[\\begin{align*}\n&& R - R^T &= \\mathcal{I} - \\mathcal{I}^T + \\sin(\\theta)(\\mathbf{\\hat{u}}-\\mathbf{\\hat{u}}^T) + (1-\\cos(\\theta))(\\mathbf{\\hat{u}}^2-(\\mathbf{\\hat{u}}^2)^T) \\\\\n&&&= \\sin(\\theta)(\\mathbf{\\hat{u}}+\\mathbf{\\hat{u}}) + (1-\\cos(\\theta))(\\mathbf{\\hat{u}}^2-\\mathbf{\\hat{u}}^2) \\\\\n&&&= 2\\sin(\\theta)\\mathbf{\\hat{u}} \\\\\n&\\implies& \\mathbf{\\hat{u}} &= \\frac{1}{2\\sin\\theta}(R-R^T) \\\\\n\\end{align*}\\]\n\nFinally, to get \\(\\mathbf{u}\\), we can pull out the entries of \\(\\mathbf{\\hat{u}}\\), which we just derived:\n\n\\[\\mathbf{u} = \\frac{1}{2\\sin\\theta}\\begin{bmatrix}R_{32}-R_{23}\\\\ R_{13}-R_{31}\\\\R_{21}-R_{12}\\end{bmatrix}\\]\n\nWe now have our full 3D logarithmic map!\n\nInterpolation\n\nNow equipped with our 3D exp and log maps, we can use them for interpolation. The exact same formula as the 2D case still applies:\n\n\\[R(t) = \\exp(t\\log(R_1R_0^{-1})))R_0\\]\n\n\n\n\nRandomize\n\n\n\n$$ R_0 = \\begin{bmatrix}1&0&0\\\\0&1&0\\\\0&0&1\\end{bmatrix} $$\n$$ R(0) = \\begin{bmatrix}1.00&0.00&0.00\\\\0.00&1.00&0.00\\\\0.00&0.00&1.00\\end{bmatrix} $$\n$$ R_1 = \\begin{bmatrix}-0.42&-0.59&-0.69\\\\0.51&-0.79&0.36\\\\-0.75&-0.20&0.63\\end{bmatrix} $$\n\n\nOur interpolation scheme produces all the nice properties of axis/angle rotations—and chooses the shortest path every time. This wouldn’t look so smooth with Euler angles!\n\nAveraging Rotations\n\nHowever, we would have gotten an equally good interpolation scheme by just using quaternions instead of messing about with all this matrix math. Let’s consider something interesting we can only easily do with axis/angle rotations: averaging a set of rotation matrices.\n\nThe most straightforward method is to convert each matrix into an axis/angle rotation, average the resulting vectors, and convert back. That is certainly a valid strategy, but the resulting behavior won’t be very intuitive:\n\n\nRandomize\n\nMaybe there’s a different approach. Since the mean isn’t quite what we want, what about the median? How do we even define a “median” rotation?\n\nThere is a notion of “median” for points in the plane: the geometric median, defined as the point that minimizes total distance from each input point. There’s a simple iterative algorithm that computes the geometric median of \\(x_0, \\dots, x_n\\):\n\n\n  Pick an initial guess \\(\\bar{x} \\in \\mathbb{R}^2\\) (can be one of the points).\n  Repeat:\n    \n      For each point, get its translation from the guess: \\(\\mathbf{u}_i \\leftarrow x_i - \\bar{x}\\)\n      Average the vectors: \\(\\mathbf{u} \\leftarrow \\frac{1}{n} \\sum_{i=1}^n \\mathbf{u}_i\\)\n      Step toward the average direction: \\(\\bar{x} \\leftarrow \\bar{x} + \\tau\\mathbf{u}\\)\n    \n  \n  while \\(\\|\\mathbf{u}\\| > \\epsilon\\).\n\n\n\n\nAssuming the step size \\(\\tau\\) is small enough, \\(\\bar{x}\\) will eventually converge to the geometric median.\n\n\n\nOur logarithmic map converts rotation matrices to axis axis/angle rotations, which are themselves just 3D points. Can we modify this algorithm to find the “geometric median” of rotation matrices \\(R_0, \\dots, R_n\\)?\n\n\n  Pick an initial guess \\(\\bar{R} \\in \\mathbb{R}^{3\\times3}\\) (can be \\(\\mathcal{I}\\)).\n  Repeat:\n    \n      For each matrix, get its axis/angle rotation from the guess: \\(\\mathbf{u}_i \\leftarrow \\log(R_i\\bar{R}^{-1})\\)\n      Average the vectors: \\(\\mathbf{u} \\leftarrow \\frac{1}{n} \\sum_{i=1}^n \\mathbf{u}_i\\)\n      Step toward the average rotation: \\(\\bar{R} \\leftarrow \\exp(\\tau\\mathbf{u})\\bar{R}\\)\n    \n  \n  while \\(\\|\\mathbf{u}\\| > \\epsilon\\).\n\n\n\n\nStep\nRandomize\n\n\nTry comparing the mean and median averaging algorithms—randomizing will keep them in sync. While the results are often similar, the median exhibits more consistent behavior. Our rotation median is formally known as the Karcher mean.\n\nQuaternions (Again)\n\nWarning: section assumes knowledge of quaternions\n\nOkay, I couldn’t resist talking about quaternions at least a little bit, given how closely they’re related to axis/angle rotations. Just like how complex exponentiation turned out to be equivalent to (skew-symmetric) 2D matrix exponentiation, quaternion exponentiation is equivalent to (skew-symmetric) 3D matrix exponentiation.\n\nIn 2D, an axis/angle rotation was simply \\(\\theta\\). We created a pure-imaginary complex number \\(i\\theta\\) and exponentiated it:\n\n\\[e^{i\\theta} = \\cos\\theta + i\\sin\\theta\\]\n\nWe got back a complex number that when multiplied with a point, rotates it by \\(\\theta\\). It’s always the case that \\(\\|\\cos\\theta + i\\sin\\theta\\| = 1\\), so 2D rotations can be represented as unit-norm complex numbers.\n\nIn 3D, an axis/angle rotation is a vector \\(\\mathbf{u}\\) such that \\(\\|\\mathbf{u}\\| = \\theta\\). What happens if we create a pure-imaginary quaternion \\(\\mathbf{q} = u_x\\mathbf{i} + u_y\\mathbf{j} + u_z\\mathbf{k}\\) and exponentiate it, too?\n\nTo make evaluating \\(e^\\mathbf{q}\\) easier, first derive the following using the quaternion multiplication rules:\n\n\\[\\begin{align*}\n\\mathbf{q}^2 &= (u_x\\mathbf{i} + u_y\\mathbf{j} + u_z\\mathbf{k})(u_x\\mathbf{i} + u_y\\mathbf{j} + u_z\\mathbf{k}) \\\\\n             &= u_x^2\\mathbf{i}^2 + u_xu_y\\mathbf{i}\\mathbf{j} + u_xu_z\\mathbf{i}\\mathbf{k} + u_yu_x\\mathbf{j}\\mathbf{i} + u_y^2\\mathbf{j}^2 + u_yu_z\\mathbf{j}\\mathbf{k} + u_zu_x\\mathbf{k}\\mathbf{i} + u_zu_y\\mathbf{k}\\mathbf{j} + u_z^2\\mathbf{k}^2 \\\\\n             &= -u_x^2 + u_xu_y\\mathbf{k} - u_xu_z\\mathbf{j} - u_yu_x\\mathbf{k} - u_y^2 + u_yu_z\\mathbf{i} + u_zu_x\\mathbf{j} - u_zu_y\\mathbf{i} - u_z^2 \\\\\n             &= -u_x^2-u_y^2-u_z^2\\\\\n             &= -\\|\\mathbf{q}\\|^2\\\\\n             &= -\\theta^2\n\\end{align*}\\]\n\nWhich is highly reminiscent of the skew-symmetric matrix identity used above. Therefore…\n\n\\[\\begin{align*}\ne^\\mathbf{q} &= 1 + \\mathbf{q} + \\frac{\\mathbf{q}^2}{2!} + \\frac{\\mathbf{q}^3}{3!} + \\frac{\\mathbf{q}^4}{4!} + \\frac{\\mathbf{q}^5}{5!} + \\dots \\\\\n             &= 1 + \\frac{\\theta\\mathbf{q}}{\\theta} - \\frac{\\theta^2}{2!} - \\frac{\\theta^3\\mathbf{q}}{3!\\theta} + \\frac{\\theta^4}{4!} + \\frac{\\theta^5\\mathbf{q}}{5!\\theta} \\dots \\\\\n             &= \\left(1 - \\frac{\\theta^2}{2!} + \\frac{\\theta^4}{4!} - \\dots\\right) + \\frac{\\mathbf{q}}{\\theta}\\left(\\theta - \\frac{\\theta^3}{3!} + \\frac{\\theta^5}{5!} - \\dots\\right) \\\\\n             &= \\cos\\theta + \\frac{\\mathbf{q}}{\\theta}\\sin\\theta \\\\\n             &\\approx \\cos\\theta + \\frac{\\mathbf{u}}{\\|\\mathbf{u}\\|}\\sin\\theta \n\\end{align*}\\]\n\nOur result looks almost exactly like the 2D case, just with three imaginary axes instead of one. In 2D, our axis/angle rotation became a unit-norm complex number. In 3D, it became a unit-norm quaternion. Now we can use this quaternion to rotate 3D points! Pretty cool, right?\n\nOne advantage of using quaternions is how easy the exponential map is to compute—if you don’t need a rotation matrix, it’s a good option. The quaternion logarithmic map is similarly simple:\n\n\\[\\theta = \\arccos(\\Re(\\mathbf{q})), \\mathbf{u} = \\frac{1}{\\sin\\theta}\\Im(\\mathbf{q})\\]\n\nFinally, note that the way to rotate a point \\(\\mathbf{p}\\) by a quaternion \\(\\mathbf{q}\\) is by evaluating the conjugation \\(\\mathbf{q}\\mathbf{p}\\mathbf{q}^{-1}\\), where \\(\\mathbf{p} = p_x\\mathbf{i} + p_y\\mathbf{j} + p_z\\mathbf{k}\\) is another pure-imaginary quaternion representing our point. The conjugation technically rotates the point by \\(2\\theta\\) about \\(\\mathbf{u}\\), but that’s easily accounted for by making \\(\\|\\mathbf{u}\\| = \\frac{\\theta}{2}\\) in the beginning.\n\nFurther Reading\n\nMade it this far? Well, there’s even more to learn about rotations.\n\nLearn about quaternions here, and why geometric algebra is more intuitive here.\n\nBeyond understanding the four representations covered here (plus geometric algebra), it can be enlightening to learn about the algebraic structure underlying all 3D rotations: the group \\(SO(3)\\). I found this video to be a great resource: it explains \\(SO(3)\\) both intuitively and visually, demonstrating how it relates it to the group \\(SU(2)\\) as well as why quaternions and axis/angle rotations double-cover 3D rotation matrices.\n\nThe wikipedia page on SO(3) is also informative, though very math heavy. It touches on connections with axis/angle rotations, topology, \\(SU(2)\\), quaternions, and Lie algebra. It turns out the vector space of skew-symmetric matrices we derived above makes up \\(\\mathfrak{so}(3)\\), the Lie algebra that corresponds to \\(SO(3)\\)—but I don’t know what that entails.\n\n\n\n",
    "Confidence": 0.9563933
  },
  {
    "Title": "GitHub - pisto/oggify: Download Spotify tracks to Ogg Vorbis (with a premium account)",
    "Url": "https://github.com/pisto/oggify",
    "Timestamp": "2022-04-19T14:01:56",
    "Domain": "github.com",
    "Description": "Download Spotify tracks to Ogg Vorbis (with a premium account) - GitHub - pisto/oggify: Download Spotify tracks to Ogg Vorbis (with a premium account)",
    "Confidence": 0.9696898
  },
  {
    "Title": "April 19, 2022",
    "Url": "https://devblogs.microsoft.com/oldnewthing/20220419-00/",
    "Timestamp": "2022-04-19T14:01:56",
    "Domain": "devblogs.microsoft.com",
    "Description": "The desperation of programming under tight memory constraints.",
    "Confidence": 0.7498554
  },
  {
    "Title": "Getting Submitted Form Data in Umbraco Forms",
    "Url": "https://www.andybutland.dev/2022/04/getting-submitted-form-data-in-umbraco.html",
    "Timestamp": "2022-04-19T13:01:41",
    "Domain": "www.andybutland.dev",
    "Description": "With Umbraco Forms, you can configure a page to redirect the user to once a form has been submitted.  A question came to me about how on tha...",
    "Confidence": 0.9810226
  },
  {
    "Title": "Running JavaScript inside a .NET app with JavaScriptEngineSwitcher",
    "Url": "https://andrewlock.net/running-javascript-in-a-dotnet-app-with-javascriptengineswitcher/",
    "Timestamp": "2022-04-19T13:01:41",
    "Domain": "andrewlock.net",
    "Description": "In this post I describe how you can use the JavaScriptEngineSwitcher NuGet package to run JavaScript inside a .NET application",
    "Confidence": 0.9810226
  },
  {
    "Title": "How to bootstrap Terraform and Azure DevOps to start deploying your infrastructure as code to Azure",
    "Url": "https://www.mytechramblings.com/posts/how-to-bootstrap-terraform-and-azdo-to-start-deploying-iac-to-azure/",
    "Timestamp": "2022-04-19T13:01:40",
    "Domain": "www.mytechramblings.com",
    "Description": "Deploying infrastructure as code on Azure using Azure Pipelines and Terraform requires a minimal bootstrap process. This process can be done manually, but you'll have to do it every time you want to start deploying resources into a new subscription. So, having some kind of automation seems the way to go here. And that's exactly what I want to show in this post, how to programmatically bootstrap an Azure subscription and an Azure DevOps project to start deploying Infrastructure as Code with Terraform.",
    "Confidence": 0.9810226
  },
  {
    "Title": "GitHub - Tyrrrz/GitHubActionsTestLogger: Test logger for .NET that reports results in a format that GitHub Actions understands",
    "Url": "https://github.com/Tyrrrz/GitHubActionsTestLogger",
    "Timestamp": "2022-04-19T12:01:56",
    "Domain": "github.com",
    "Description": "Test logger for .NET that reports results in a format that GitHub Actions understands - GitHub - Tyrrrz/GitHubActionsTestLogger: Test logger for .NET that reports results in a format that GitHub Ac...",
    "Confidence": 0.82774764
  },
  {
    "Title": "Clean Code Tip: Avoid using too many Imports in your classes - Code4IT",
    "Url": "https://www.code4it.dev/cleancodetips/too-many-imports/",
    "Timestamp": "2022-04-19T11:01:56",
    "Domain": "www.code4it.dev",
    "Description": "Having too many 'using's, or imports, is a good indicator that your class does too many things. You should work to reduce the number of dependencies of a class.",
    "Confidence": 0.92788714
  },
  {
    "Title": "Internals of C# nullable reference types - Migrating to nullable reference types - Part 2",
    "Url": "https://blog.maartenballiauw.be/post/2022/04/19/internals-of-csharp-nullable-reference-types-migrating-to-nullable-reference-types-part-2.html",
    "Timestamp": "2022-04-19T11:01:56",
    "Domain": "blog.maartenballiauw.be",
    "Description": "In the previous post, we saw that with nullable reference types enabled, you get better static flow analysis when working on your code.While nullable reference types don’t give you runtime safety, the design-time and compile-time help is priceless!",
    "Confidence": 0.9939045
  },
  {
    "Title": "ADO.NET provider 9.0.0.0 for Firebird is ready (with Entity Framework Core 6.0 support)",
    "Url": "https://www.tabsoverspaces.com/233896-ado-net-provider-9-0-0-0-for-firebird-is-ready-with-entity-framework-core-6-0-support",
    "Timestamp": "2022-04-19T11:01:54",
    "Domain": "www.tabsoverspaces.com",
    "Description": "19 Apr 2022\n\t\n\t 2 mins\n\t\n\t .NET, C#, Databases in general, Entity Framework, Entity Framework Core, Firebird, LINQ, SQL, Visual Studio",
    "Confidence": 0.99770766
  },
  {
    "Title": "Using dotnet format Command to Format the C#/.NET Code - Code Maze",
    "Url": "https://code-maze.com/dotnet-format-command-csharp/",
    "Timestamp": "2022-04-19T09:01:38",
    "Domain": "code-maze.com",
    "Description": "In this article we'll discuss the use of dotnet format, to enforce consistent coding standards across operating systems and IDEs.",
    "Confidence": 0.994645
  },
  {
    "Title": "RavenDB with the Java API",
    "Url": "https://ayende.com/blog/197025-B/ravendb-with-the-java-api",
    "Timestamp": "2022-04-19T09:01:37",
    "Domain": "ayende.com",
    "Description": "I usually talk about RavenDB in the context of C# and .NET, but we also have clients for many other platform. On Thursday, the Copenhagen Javagruppen Meetup ...",
    "Confidence": 0.95953673
  }
]