[
  {
    "Title": "Biscuit 2.0 release",
    "Url": "https://www.biscuitsec.org/blog/biscuit-2-0/",
    "Timestamp": "2022-01-24T22:01:51",
    "Domain": "www.biscuitsec.org",
    "Description": "Introducing Biscuit 2.0",
    "Confidence": 0.9747733
  },
  {
    "Title": "Chesterton's Fence - Lesswrongwiki",
    "Url": "https://wiki.lesswrong.com/wiki/Chesterton%27s_Fence",
    "Timestamp": "2022-01-24T22:01:50",
    "Domain": "wiki.lesswrong.com",
    "Description": "Chesterton's fence is the principle that reforms should not be made until the reasoning behind the existing state of affairs is understood. The quotation is from Chesterton’s 1929 book The Thing, in the chapter entitled \"The Drift from Domesticity\":",
    "Confidence": 0.9831556
  },
  {
    "Title": "GitHub - max-sixty/prql: PRQL is a modern language for transforming data — a simpler and more powerful SQL",
    "Url": "https://github.com/max-sixty/prql",
    "Timestamp": "2022-01-24T22:01:50",
    "Domain": "github.com",
    "Description": "PRQL is a modern language for transforming data — a simpler and more powerful SQL - GitHub - max-sixty/prql: PRQL is a modern language for transforming data — a simpler and more powerful SQL",
    "Confidence": 0.9831556
  },
  {
    "Title": "Google is reportedly planning a next-gen Chromecast with Google TV",
    "Url": "https://arstechnica.com/gadgets/2022/01/google-is-reportedly-planning-a-next-gen-chromecast-with-google-tv/?utm_social-type=owned",
    "Timestamp": "2022-01-24T21:01:41",
    "Domain": "arstechnica.com",
    "Description": "The obvious upgrades would be more storage and AV1 support. ",
    "Confidence": 0.86524177
  },
  {
    "Title": "Why we're migrating (many of) our servers from Linux to FreeBSD",
    "Url": "https://it-notes.dragas.net/2022/01/24/why-were-migrating-many-of-our-servers-from-linux-to-freebsd/",
    "Timestamp": "2022-01-24T21:01:37",
    "Domain": "it-notes.dragas.net",
    "Description": "We started a complex, continuous and not always linear operation, that is to migrate, where possible, most of the servers from Linux to FreeBSD. Here's why.",
    "Confidence": 0.9510841
  },
  {
    "Title": "Alien Observers",
    "Url": "https://xkcd.com/2572/",
    "Timestamp": "2022-01-24T21:01:35",
    "Domain": "xkcd.com",
    "Description": "",
    "Confidence": 0.8522955
  },
  {
    "Title": "GitHub - dotnet/runtime at release/7.0-preview1",
    "Url": "https://github.com/dotnet/runtime/tree/release/7.0-preview1",
    "Timestamp": "2022-01-24T19:01:40",
    "Domain": "github.com",
    "Description": ".NET is a cross-platform runtime for cloud, mobile, desktop, and IoT apps. - GitHub - dotnet/runtime at release/7.0-preview1",
    "Confidence": 0.9883433
  },
  {
    "Title": "Dependency Injection in .NET 6 - Service Lifetimes",
    "Url": "https://exceptionnotfound.net/dependency-injection-in-dotnet-6-service-lifetimes/",
    "Timestamp": "2022-01-24T19:01:40",
    "Domain": "exceptionnotfound.net",
    "Description": "What's the difference between Transient, Scoped, and Singleton services?",
    "Confidence": 0.9883433
  },
  {
    "Title": "Wordle With Grep - Susam's Maze",
    "Url": "https://susam.net/maze/wordle-with-grep.html",
    "Timestamp": "2022-01-24T19:01:39",
    "Domain": "susam.net",
    "Description": "By Susam Pal on 23 Jan 2022",
    "Confidence": 0.93356645
  },
  {
    "Title": "The Curse of NixOS",
    "Url": "https://blog.wesleyac.com/posts/the-curse-of-nixos",
    "Timestamp": "2022-01-24T18:01:37",
    "Domain": "blog.wesleyac.com",
    "Description": "",
    "Confidence": 0.9249858
  },
  {
    "Title": "Dockerize your Blazor App:  Carl Franklin's Blazor Train Ep 68",
    "Url": "https://www.youtube.com/watch?v=L32qddZTw74",
    "Timestamp": "2022-01-24T17:01:35",
    "Domain": "www.youtube.com",
    "Description": "Carl welcomes Chris Sainty back to show us how to use Docker to create Blazor apps in containers. 🔗 Download Files 🔗🚀 Get Started Today – Free 30 Day Tria...",
    "Confidence": 0.56446534
  },
  {
    "Title": "Implementing a file pager in Zig: Pages, buffers and metadata, oh my!",
    "Url": "https://ayende.com/blog/196353-A/implementing-a-file-pager-in-zig-pages-buffers-and-metadata-oh-my?Key=d347324f-db09-4385-9042-8db39c39da6c",
    "Timestamp": "2022-01-24T17:01:33",
    "Domain": "ayende.com",
    "Description": "Databases will typically divide their data files into pages, and manage all data in pages. As you can imagine, the notion of pages is pretty important to a d...",
    "Confidence": 0.9778435
  },
  {
    "Title": "Modern Web Applications with SAFE Stack",
    "Url": "https://www.youtube.com/watch?v=9pzgKpPTssM",
    "Timestamp": "2022-01-24T16:01:34",
    "Domain": "www.youtube.com",
    "Description": "The SAFE stack is an free, open-source, flexible end-to-end, functional-first stack for cloud-ready web applications that emphasizes type-safe programming. I...",
    "Confidence": 0.993615
  },
  {
    "Title": "runtime/Environment.Variables.Windows.cs at 57bfe474518ab5b7cfe6bf7424a79ce3af9d6657 · dotnet/runtime",
    "Url": "https://github.com/dotnet/runtime/blob/57bfe474518ab5b7cfe6bf7424a79ce3af9d6657/src/libraries/System.Private.CoreLib/src/System/Environment.Variables.Windows.cs#L13-L31",
    "Timestamp": "2022-01-24T16:01:33",
    "Domain": "github.com",
    "Description": ".NET is a cross-platform runtime for cloud, mobile, desktop, and IoT apps. - runtime/Environment.Variables.Windows.cs at 57bfe474518ab5b7cfe6bf7424a79ce3af9d6657 · dotnet/runtime",
    "Confidence": 0.99727637
  },
  {
    "Title": "The MainWindowHandle property is just a guess based on heuristics",
    "Url": "https://devblogs.microsoft.com/oldnewthing/20220124-00/?p=106192",
    "Timestamp": "2022-01-24T16:01:32",
    "Domain": "devblogs.microsoft.com",
    "Description": "A customer had a program written in Windows Forms that wanted the following behavior: When the user minimizes the app, it hides the window. When the user relaunches the app, the second instance finds the existing (hidden) window and makes it visible again.",
    "Confidence": 0.74909216
  },
  {
    "Title": "Awaiting an async void method in .NET - Gérald Barré",
    "Url": "https://www.meziantou.net/awaiting-an-async-void-method-in-dotnet.htm",
    "Timestamp": "2022-01-24T15:02:59",
    "Domain": "www.meziantou.net",
    "Description": "In this post, I describe how to await an async void method in .NET using a custom Synchronization Context.",
    "Confidence": 0.9994336
  },
  {
    "Title": "How slow is MediatR really?",
    "Url": "https://www.youtube.com/watch?v=baiH3f_TFfY",
    "Timestamp": "2022-01-24T13:02:12",
    "Domain": "www.youtube.com",
    "Description": "Check out my courses: https://nickchapsas.comBecome a Patreon and get source code access: https://www.patreon.com/nickchapsasHello everybody I'm Nick and in ...",
    "Confidence": 0.95054144
  },
  {
    "Title": "Alexandre Nédélec - Week 3, 2022 - Tips I learned this week",
    "Url": "https://www.techwatching.dev/posts/w03-2022-tips-learned-this-week",
    "Timestamp": "2022-01-24T13:02:11",
    "Domain": "www.techwatching.dev",
    "Description": ".NET 6 introduced a new way to build a .NET application using the new WebApplication and WebApplicationBuilder classes. One thing I like about it is how configuration is handled. Instead of using the ConfigureAppConfiguration method to add a new configuration source, you can directly use the Configuration property on the WebApplicationBuilder instance. You can see an example of this change on this screenshot of the ASP.NET Core documentation:",
    "Confidence": 0.99561006
  },
  {
    "Title": "This Post Was Written by GitHub Copilot",
    "Url": "https://flower.codes/2021/07/08/this-post-was-written-by-github-copilot",
    "Timestamp": "2022-01-24T13:02:10",
    "Domain": "flower.codes",
    "Description": "Impostor.",
    "Confidence": 0.9592214
  },
  {
    "Title": "Simple WebSocket client and server application using .NET",
    "Url": "https://www.tabsoverspaces.com/233883-simple-websocket-client-and-server-application-using-dotnet",
    "Timestamp": "2022-01-24T11:02:42",
    "Domain": "www.tabsoverspaces.com",
    "Description": "24 Jan 2022\n\t\n\t 2 mins\n\t\n\t .NET, ASP.NET Core, WebSocket",
    "Confidence": 0.9982586
  },
  {
    "Title": "I accidentally used YAML.parse instead of JSON.parse, and it... worked?",
    "Url": "https://rohitpaulk.com/articles/accidentally-used-yaml-instead-of-json",
    "Timestamp": "2022-01-24T11:02:41",
    "Domain": "rohitpaulk.com",
    "Description": "How I stumbled upon the fact that YAML is a superset of JSON.\n",
    "Confidence": 0.63896286
  },
  {
    "Title": "Top-Level Statements in C# - Code Maze",
    "Url": "https://code-maze.com/csharp-top-level-statements/",
    "Timestamp": "2022-01-24T09:01:46",
    "Domain": "code-maze.com",
    "Description": "If you want to know more about top-level statements in c# and learn to write a program without writing classes, this is the article for you!",
    "Confidence": 0.98784447
  },
  {
    "Title": "Microsoft Feature Management - Feature Flags in ASP.NET Core C# - Detailed Guide | Pro Code Guide",
    "Url": "https://procodeguide.com/programming/feature-flags-in-aspnet-core/",
    "Timestamp": "2022-01-24T09:01:43",
    "Domain": "procodeguide.com",
    "Description": "We will be implementing Microsoft Feature Management i.e. feature flags in ASP.NET Core C# application but all this is applicable to other types of .NET C#",
    "Confidence": 0.9887064
  },
  {
    "Title": "290: The .NET MAUI Episode",
    "Url": "https://www.mergeconflict.fm/290",
    "Timestamp": "2022-01-24T09:01:43",
    "Domain": "www.mergeconflict.fm",
    "Description": "We answer all of your questions! Which seem to mostly be about .NET MAUI :)",
    "Confidence": 0.8817835
  },
  {
    "Title": "[Fixed Ending] Episode 90 - Clean Architecture and Subcutaneous Testing with Matthew Jeorrett",
    "Url": "https://dotnetcore.show/episode-90-fixed-ending-clean-architecture-and-subcutaneous-testing-with-matthew-jeorrett/",
    "Timestamp": "2022-01-24T09:01:43",
    "Domain": "dotnetcore.show",
    "Description": "In this episode of The .NET Core Podcast we talked with Matthew Jeorrett about what the Clean Architecture, Subcutaneous Testing, and how he utilitsed both to build web applications in a clean, vertical, extensible manner.",
    "Confidence": 0.9134227
  },
  {
    "Title": "Fundamentals of Garbage Collection",
    "Url": "https://www.telerik.com/blogs/fundamentals-garbage-collection",
    "Timestamp": "2022-01-24T06:02:15",
    "Domain": "www.telerik.com",
    "Description": "Let’s talk about a core computer science concept: garbage collection—it’s key to managing memory for many languages. How does your preferred language handle it?",
    "Confidence": 0.9639171
  },
  {
    "Title": "Amazon.com: Out of the Woods of Oregon Slice it Right! Board with Bread & Bagel Slicer (Maple Slicer): Home & Kitchen",
    "Url": "https://www.amazon.com/Out-Woods-Oregon-Slice-Slicer/dp/B0893PKY1N?tag=linksfordevs-20&lfd=202201",
    "Timestamp": "2022-01-24T06:02:15",
    "Domain": "www.amazon.com",
    "Description": "Online shopping for Kitchen Knives & Accessories from a great selection of Cutlery Sets, Specialty Knives, Sharpeners, Cutting Boards, & more at everyday low prices.",
    "Confidence": 0.77935183
  },
  {
    "Title": "grouping Arrays via `.groupBy()` and `.groupByToMap()`",
    "Url": "https://2ality.com/2022/01/array-grouping.html",
    "Timestamp": "2022-01-24T06:02:14",
    "Domain": "2ality.com",
    "Description": "This blog post describes the ECMAScript proposal “Array grouping” by Justin Ridgewell.",
    "Confidence": 0.9738505
  },
  {
    "Title": "Announcing TypeScript 4.6 Beta",
    "Url": "https://devblogs.microsoft.com/typescript/announcing-typescript-4-6-beta/",
    "Timestamp": "2022-01-24T06:02:13",
    "Domain": "devblogs.microsoft.com",
    "Description": "Today we are excited to announce the beta release of TypeScript 4.6! To get started using the beta, you can get it through NuGet, or use npm with the following command: npm install typescript@beta You can also get editor support by Downloading for Visual Studio 2019/2017 Following directions for Visual Studio Code and Sublime Text 3.",
    "Confidence": 0.99168915
  },
  {
    "Title": "Debugging Compatibility in Edge",
    "Url": "https://textslashplain.com/2022/01/20/debugging-compatibility-in-edge/",
    "Timestamp": "2022-01-24T06:02:13",
    "Domain": "textslashplain.com",
    "Description": "Background By moving from our old codebase to Chromium, the Microsoft Edge team significantly modernized our codebase and improved our compatibility with websites. As we now share the vast majority…",
    "Confidence": 0.97053826
  },
  {
    "Title": "Using games engines for work and profit! | Meetup",
    "Url": "https://www.meetup.com/Sydney-Alt-Net/events/282399701/",
    "Timestamp": "2022-01-24T05:03:48",
    "Domain": "www.meetup.com",
    "Description": "Tue, 25 Jan, 7:00 pm AEDT: ...or something along those lines 😇\n\nNow that games engines are ridiculously over powered, wouldn't it be great if we could somehow find ways to incorporate them into our ",
    "Confidence": 0.9645954
  },
  {
    "Title": "Azure Functions consumption plan naming",
    "Url": "https://dotnetthoughts.net/azure-functions-consumption-plan-naming/",
    "Timestamp": "2022-01-24T05:03:48",
    "Domain": "dotnetthoughts.net",
    "Description": "This post is about how to follow naming conventions for Azure Function consumption plans. Unlike Azure App Services, when we create Azure Functions with consumption plan Azure will create a plan name which you can’t modify. If you’re following certain naming conventions it will be different from what you’re following. Here is an example.",
    "Confidence": 0.9656525
  },
  {
    "Title": "Implement hash and HMAC stream one shots by vcsjones · Pull Request #63757 · dotnet/runtime",
    "Url": "https://github.com/dotnet/runtime/pull/63757",
    "Timestamp": "2022-01-24T04:01:48",
    "Domain": "github.com",
    "Description": "This implements hashing and HMAC statics for streams. Additionally,\n&quot;LiteHmac&quot; and &quot;LiteHash&quot; were introduced. The existing HMAC and hash\nprovider functionality do some bookkeep...",
    "Confidence": 0.9229808
  },
  {
    "Title": "Piped",
    "Url": "https://youtube.censors.us/YQ_xWvX1n9g",
    "Timestamp": "2022-01-24T00:01:46",
    "Domain": "youtube.censors.us",
    "Description": "An alternative privacy-friendly YouTube frontend which is efficient by design.",
    "Confidence": 0.7223936
  },
  {
    "Title": "Customizing web search",
    "Url": "https://notes.npilk.com/custom-search",
    "Timestamp": "2022-01-23T23:03:08",
    "Domain": "notes.npilk.com",
    "Description": "I use a simple Cloudflare Worker script to automatically redirect my search queries based on keywords I've chosen.",
    "Confidence": 0.9263044
  },
  {
    "Title": "Sponsor @ErikEJ on GitHub Sponsors",
    "Url": "https://github.com/sponsors/ErikEJ",
    "Timestamp": "2022-01-23T23:03:08",
    "Domain": "github.com",
    "Description": ".NET and Data Development guru, Entity Framework expert, Microsoft MVP since 2009, .NET Foundation member",
    "Confidence": 0.9460493
  },
  {
    "Title": "Why I'm comfortable publishing foolishness",
    "Url": "https://yakkomajuri.github.io/blog/publishing-foolishness",
    "Timestamp": "2022-01-23T23:03:08",
    "Domain": "yakkomajuri.github.io",
    "Description": "When I started, I was very insecure.",
    "Confidence": 0.8028512
  },
  {
    "Title": "On decoupled loaders",
    "Url": "https://erock.io/2022/01/21/on-decoupled-loaders.html",
    "Timestamp": "2022-01-23T23:03:08",
    "Domain": "erock.io",
    "Description": "A common interface for loading states",
    "Confidence": 0.9939328
  },
  {
    "Title": "In defense of complicated programming languages",
    "Url": "https://viralinstruction.com/posts/defense/",
    "Timestamp": "2022-01-23T23:03:08",
    "Domain": "viralinstruction.com",
    "Description": "Written 2022-01-23",
    "Confidence": 0.89484245
  },
  {
    "Title": "Surgical programming",
    "Url": "https://macoy.me/blog/programming/SurgicalProgramming",
    "Timestamp": "2022-01-23T23:03:08",
    "Domain": "macoy.me",
    "Description": "I have been relatively busy lately due to unpacking all my things from my cross-country move. Some of my hobbies have been receiving more time. However, don't worry, Cakelisp and GameLib development still continues.",
    "Confidence": 0.9551695
  },
  {
    "Title": "Prototype the UI Before Building an MVP",
    "Url": "https://gashamola.com/2022/01/22/prototype-the-ui-before-building-an-mvp.html",
    "Timestamp": "2022-01-23T23:03:08",
    "Domain": "gashamola.com",
    "Description": "Being a heavy user of software products, I’ll sometimes have an idea of a product I want. After a brief incubation period, I’ll get the urge to build the damn thing. Being a software developer, I always succumb to this urge and invest a lot of time and effort into building at least an MVP of the product. Most of the time, unfortunately, I lose interest in the product just after playing with it for a while. Then, thinking that I didn’t actually want it, I’ll go about burying it in my Side Projects Graveyard. This pattern persisted more than I’m willing to admit. The problem is that users (including us, developers) won’t know what they want until they see it and feel it. Common sense tells us that the solution is to build and iterate on an MVP to find out what users want, right? But building an MVP is not as cheap as it appears to be. Neither is iterating on an MVP. Think about all the technical decisions you must make and the technical debt you must carry. Software is always less flexible than we hoped. Notice also that after investing in building an MVP it’s extremely hard to let it go once you find out users don’t actually want it. So, you tend to spend on it much more than you should. (Perhaps that’s the reason that many bad movies are produced.) If you are spending someone else’s money, you may accept it as a grim fact of life. Otherwise, you may want to consider other options. For several years now, I’m convinced that a better option is to prototype the UI first. Of course, it does not apply to all products. Luckily, it applies to most user-facing products. A UI prototype is as effective as an MVP in finding out what users want. Unlike design mockups, users can both see it and feel it. Most important, developing a UI prototype takes a fraction of the time and cost of developing an equivalent MVP. Large companies and some startups have been doing it for ages. I know it’s nothing new. But, it has been underemployed by most companies I’ve been involved in. In one company I overheard an all too familiar conversation. The lead developer just finished working on a long-awaited feature and showed it to the VP of Product (and a user himself). His response was quick: “This is exactly what I asked you to develop. It’s perfect. But, there’s no way our customers will ever want it in the product.” (The reason being some overlooked organizational considerations.) The developer worked on it for over a week. A UI prototype would have been enough to discover the issue in a few hours. So, to find out what users want, ask them what they want. Next, build a UI prototype of what they said they wanted. Then, iterate on showing them the prototype, asking if it’s indeed what they wanted, and incorporating their feedback in the prototype. Proceed to develop an MVP only when they are excited about the prototype. I still get the urge to build things, by the way. What changed is I no longer rush to build an MVP of any idea that comes to my mind. Instead, I can satisfy my urge by prototyping what I think I want. Consequently, my Side Projects Graveyard stopped growing as much as it used to do.",
    "Confidence": 0.91513056
  },
  {
    "Title": "Improving end to end tests reliability",
    "Url": "https://frantic.im/e2e-tests/",
    "Timestamp": "2022-01-23T23:03:08",
    "Domain": "frantic.im",
    "Description": "End-to-end tests are not flaky, if you cook them right.",
    "Confidence": 0.99194133
  }
]