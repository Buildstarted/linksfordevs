[
  {
    "Title": "How HLS Works",
    "Url": "https://jazco.dev/2024/07/05/hls/",
    "Timestamp": "2024-07-07T11:00:58",
    "Domain": "jazco.dev",
    "Description": "HLS (HTTP Live Streaming) is basically just a bunch of text files in a trench coat pointing at a handful of itty-bitty seconds-long video files",
    "Confidence": 0.99093384
  },
  {
    "Title": "Building Strong Foundations: The Crucial Role of Data in Software Development",
    "Url": "https://dotnettips.wordpress.com/2024/07/07/building-strong-foundations-the-crucial-role-of-data-in-software-development/",
    "Timestamp": "2024-07-07T10:01:01",
    "Domain": "dotnettips.wordpress.com",
    "Description": "Creating beloved software demands collective effort from various teams. Data plays a pivotal role, analogous to a building’s foundation. Neglecting the data infrastructure can lead to persist…",
    "Confidence": 0.8280065
  },
  {
    "Title": "Hosting Blazor Apps in Contabo Servers",
    "Url": "https://checox.com/hosting-blazor-apps-in-contabo-servers/",
    "Timestamp": "2024-07-07T04:00:59",
    "Domain": "checox.com",
    "Description": "This was a meet up for a XAF Developer Group managed by Javier Columbie, where I was talking about how to host Blazor Apps in Contabo Servers using GitHub Actions, this a Spanish content, I hope you enjoy it!!!",
    "Confidence": 0.99506634
  },
  {
    "Title": "UChicago Prof. Shirley Meng’s Laboratory for Energy Storage and Conversion creates world’s first anode-free sodium solid-state battery – a breakthrough in inexpensive, clean, fast-charging batteries",
    "Url": "https://pme.uchicago.edu/news/uchicago-prof-shirley-mengs-laboratory-energy-storage-and-conversion-creates-worlds-first",
    "Timestamp": "2024-07-07T00:01:03",
    "Domain": "pme.uchicago.edu",
    "Description": "July 3, 2024",
    "Confidence": 0.9065985
  },
  {
    "Title": "Always Optimize the Feedback Loop",
    "Url": "https://blog.waleson.com/2024/07/always-optimize-feedback-loop.html",
    "Timestamp": "2024-07-06T23:01:05",
    "Domain": "blog.waleson.com",
    "Description": "Speed, I am Speed. -- Lightning McQueen Some thoughts about the impact of feedback loops in startups and software. Parts: Intro Framework Ob...",
    "Confidence": 0.9724522
  },
  {
    "Title": "A Thousand Primers, Not Just One",
    "Url": "https://mssv.net/2024/07/06/a-thousand-primers-not-just-one/",
    "Timestamp": "2024-07-06T23:01:05",
    "Domain": "mssv.net",
    "Description": "If gamification isn’t specific to its subject, it won’t be effective.",
    "Confidence": 0.9226762
  },
  {
    "Title": "Evaluating a Decade of Hacker News Predictions: An Open-Source Approach",
    "Url": "https://eamag.me/2024/HackerNews-Prediction-Evaluator",
    "Timestamp": "2024-07-06T23:01:05",
    "Domain": "eamag.me",
    "Description": "What See the result here. You can see 2804 predictions HN users made, evaluated by LLM with categories, filters and search. Try typing “Linux” in a search bar! Source code is on GitHub Why I stumbled upon a 2010 thread of predictions for the upcoming decade and had fun reading through it.",
    "Confidence": 0.99261224
  },
  {
    "Title": "Xuanwo's VISION: Data Freedom",
    "Url": "https://xuanwo.io/2024/04-xuanwo-vision/",
    "Timestamp": "2024-07-06T23:01:05",
    "Domain": "xuanwo.io",
    "Description": "An infrastructure engineer, focused on distributed storage system",
    "Confidence": 0.9855848
  },
  {
    "Title": "Solving problems \"Inside Out\"",
    "Url": "http://thevivekpandey.github.io/posts/2024-06-17-solving-problems-inside-out.html",
    "Timestamp": "2024-07-06T23:01:05",
    "Domain": "thevivekpandey.github.io",
    "Description": "Lately, while solving a few programming problems I have noticed that the pattern of thinking \"inside out\" can be\nuseful.",
    "Confidence": 0.9981016
  },
  {
    "Title": "Machine Learning and the triumph of GOFAI",
    "Url": "https://neilmadden.blog/2024/06/30/machine-learning-and-the-triumph-of-gofai/",
    "Timestamp": "2024-07-06T23:01:05",
    "Domain": "neilmadden.blog",
    "Description": "I’ve been slowly reading Brian Cantwell Smith’s “The Promise of Artificial Intelligence” recently. I haven’t finished reading it yet, and like much of BCS’s writing, it’ll probably take me 3 or 4 r…",
    "Confidence": 0.9505818
  },
  {
    "Title": "What's in a name?",
    "Url": "https://joshcannon.me/2024/07/05/package-names.html",
    "Timestamp": "2024-07-06T23:01:05",
    "Domain": "joshcannon.me",
    "Description": "Background Naming is important (as well as hard). Good names are good. Bad names are… bad. And we name a lot of things. In Python (a name) code is bundled and uploaded as a package (another name), usually to the Python Package Index (PyPI, a third name). Inside of these...",
    "Confidence": 0.9942473
  },
  {
    "Title": "Things that don’t work",
    "Url": "https://dynomight.net/things/",
    "Timestamp": "2024-07-06T23:01:04",
    "Domain": "dynomight.net",
    "Description": "Or: Things where there’s a case worth considering that they don’t work all that well for most people.",
    "Confidence": 0.9488398
  },
  {
    "Title": "Learn Nix the Fun Way",
    "Url": "https://fzakaria.com/2024/07/05/learn-nix-the-fun-way.html",
    "Timestamp": "2024-07-06T23:01:04",
    "Domain": "fzakaria.com",
    "Description": "This is a post inspired by many talks I’ve given to engineering groups about Nix. You can see an example of one such talk Why I love Nix, and you should too I’ve given a lot of Nix talks. I’ve given Nix talks internally at companies where I’ve introduced it, at local meetups and even at NixCon. Giving a talk about Nix is hard. As engineers I find often we try to explain why or how Nix works but never show the end result. Many of the talks I’ve given start explaining “Nix developed as part of Eelco’s PhD thesis in 2003” and immediately eyes roll. Let’s do it different this time. Let’s learn Nix the fun way.",
    "Confidence": 0.99902534
  },
  {
    "Title": "(modal)",
    "Url": "https://wryl.tech/projects/modal.html",
    "Timestamp": "2024-07-06T23:01:04",
    "Domain": "wryl.tech",
    "Description": "Modal is a flexible general purpose programming language based on the concept of rewriting. It was created in 2018 as a response to the rise in implementation complexity for high-level languages.\n\nThe language has a single operation:\n    * Find a pattern.\n    * Replace that pattern with another pattern.\n\nAll Modal code is phrased in terms of \"rules\", which specify a pattern and a replacement.\n\nModal programs \"evolve\" over the course of multiple replacement operations, replacing parts of themselves and morphing into a final \"result\" where no more rules may be applied.\n\nModal programs manipulate a global \"tree\" structure, similar to (term rewriting systems). All search-and-replace operations happen on this single, global tree.",
    "Confidence": 0.99563336
  },
  {
    "Title": "Properly Testing Concurrent Data Structures",
    "Url": "https://matklad.github.io/2024/07/05/properly-testing-concurrent-data-structures.html",
    "Timestamp": "2024-07-06T23:01:04",
    "Domain": "matklad.github.io",
    "Description": "There's a fascinating Rust library, loom, which can be used to\nthoroughly test lock-free data structures. I always wanted to learn how it works. I still do! But\nrecently I accidentally implemented a small toy which, I think, contains some of the loom's ideas,\nand it seems worthwhile to write about that. The goal here isn't to teach you what you should be\nusing in practice (if you need that, go read loom's docs), but rather to derive a couple of neat\nideas from first principles.",
    "Confidence": 0.99763834
  }
]