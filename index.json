[
  {
    "Title": "Assuring an accurate research record",
    "Url": "https://economics.mit.edu/news/assuring-accurate-research-record",
    "Timestamp": "2025-05-17T04:02:20",
    "Domain": "economics.mit.edu",
    "Description": "Following the posting of the preprint paper ‚ÄúArtificial Intelligence, Scientific Discovery, and Product Innovation‚Äù on arXiv in November 2024, concerns were raised about the integrity of the research. MIT conducted an internal, confidential review and¬†concluded that the paper should be withdrawn from public discourse.",
    "Confidence": 0.7861994
  },
  {
    "Title": "Thoughts on thinking ‚Ä¢ Dustin Curtis",
    "Url": "https://dcurt.is/thinking",
    "Timestamp": "2025-05-17T02:02:20",
    "Domain": "dcurt.is",
    "Description": "I have been stuck. Every time I sit down to write a blog post, code a feature, or start a project, I come to the same realization: in the context of AI, what I‚Äôm doing is a waste of time. It‚Äôs horrifying. The fun has been sucked out of the process... | Dustin Curtis | Designer, hacker, investor, nomad. Founder of Svbtle.",
    "Confidence": 0.98667824
  },
  {
    "Title": "CQRS Pattern the Way It Should've Been From the Start",
    "Url": "https://www.milanjovanovic.tech/blog/cqrs-pattern-the-way-it-should-have-been-from-the-start",
    "Timestamp": "2025-05-17T01:02:09",
    "Domain": "www.milanjovanovic.tech",
    "Description": "Learn how to implement CQRS in .NET without relying on MediatR. This guide walks you through a lightweight setup using simple interfaces, decorators, and DI ‚Äî no frameworks required.",
    "Confidence": 0.9991291
  },
  {
    "Title": "Upgrading my 25gbit internet router to VyOS",
    "Url": "https://sschueller.github.io/posts/vyos-router-update/",
    "Timestamp": "2025-05-17T00:02:27",
    "Domain": "sschueller.github.io",
    "Description": "It has been a while since I setup my original router for my 25gbit internet connection. I decided it was time to upgrade but since I have some services running I did not want to be down for too long and purchased some new hardware which would allow me to experiment with VyOS without effecting my current setup.",
    "Confidence": 0.98567486
  },
  {
    "Title": "Slopaganda",
    "Url": "https://dbushell.com/2025/05/15/slopaganda/",
    "Timestamp": "2025-05-17T00:02:27",
    "Domain": "dbushell.com",
    "Description": "The one where I declare the internet is cooked and you stoked the fire üé£",
    "Confidence": 0.95846164
  },
  {
    "Title": "How I Made PDF Table Rendering 95% Faster in an Afternoon",
    "Url": "https://kb.itextpdf.com/itext/how-i-made-pdf-table-rendering-faster",
    "Timestamp": "2025-05-17T00:02:27",
    "Domain": "kb.itextpdf.com",
    "Description": "Here at Apryse, we occasionally have some free time at the end of our iText development sprints where we're encouraged to use our initiative to \"wo...",
    "Confidence": 0.95247746
  },
  {
    "Title": "RAG‚Äôs big blindspot",
    "Url": "https://softwaredoug.com/blog/2025/05/16/rags-big-blindspot.html",
    "Timestamp": "2025-05-17T00:02:27",
    "Domain": "softwaredoug.com",
    "Description": "RAG apps have a big blindspot - using actual user engagement to drive improvement. But its a hard problem. Let‚Äôs discuss!",
    "Confidence": 0.988983
  },
  {
    "Title": "In-depth look at CRDs and how they work under the hood",
    "Url": "https://skarlso.github.io/2025/05/12/in-depth-look-at-crds-and-how-they-work-under-the-hood/",
    "Timestamp": "2025-05-17T00:02:27",
    "Domain": "skarlso.github.io",
    "Description": "In-depth look at CRDs and how they work under the hood\nToday, we are going to walk through how a CRD looks like, what it does, what it contains, how it works and how it alters Kubernetes.\nThe design, the api extension and links and snippets to the code ( accurate at the time of writing ) where it happens.\nLet‚Äôs dive in.\nWhat are CRDs\nCRDs as described in the official Kubernetes Documentation page are objects that can extend the API of Kubernetes.",
    "Confidence": 0.99701977
  },
  {
    "Title": "Why do prompts fail? And why will they fail?",
    "Url": "https://dkaleta.com/blog/why-do-prompts-fail/",
    "Timestamp": "2025-05-17T00:02:27",
    "Domain": "dkaleta.com",
    "Description": "",
    "Confidence": 0.9977006
  },
  {
    "Title": "Would I do a PhD again? ‚Äì Milo≈° ≈†va≈àa",
    "Url": "https://svana.name/2025/01/would-i-do-a-phd-again/",
    "Timestamp": "2025-05-17T00:02:26",
    "Domain": "svana.name",
    "Description": "In May 2024 I successfully defended my dissertation and ended a 5-year-long adventure that was doing a PhD. Knowing what I know now, would I do it again?",
    "Confidence": 0.92625856
  },
  {
    "Title": "How I Built AteIQ in a Week (and Why I‚Äôm Glad I Did)",
    "Url": "https://www.stphndxn.com/how-i-built-ateiq-in-a-week-and-why-im-glad-i-did/",
    "Timestamp": "2025-05-17T00:02:26",
    "Domain": "www.stphndxn.com",
    "Description": "Last month, I found myself in an unusual spot. I wasn‚Äôt working full-time. I wasn‚Äôt consulting. I wasn‚Äôt even really resting. I was floating ‚Äî thinking, tinkering, and craving a small, focused creative challenge.\n\nI kept coming back to the same thought every time I ate something: Why",
    "Confidence": 0.94824046
  },
  {
    "Title": "A Ledger In PostgreSQL Is Fast!",
    "Url": "https://www.pgrs.net/2025/05/16/pgledger-in-postgresql-is-fast/",
    "Timestamp": "2025-05-17T00:02:26",
    "Domain": "www.pgrs.net",
    "Description": "I‚Äôve been working on a ledger implementation in pure PostgreSQL called pgledger. For the backstory, please read my previous blog post: Ledger Implementation in PostgreSQL.",
    "Confidence": 0.9660939
  },
  {
    "Title": "Streamlining Web App Development With Zeroconf",
    "Url": "https://blog.julik.nl/2025/05/dev-subdomains-with-zeroconf",
    "Timestamp": "2025-05-17T00:02:26",
    "Domain": "blog.julik.nl",
    "Description": "The sites which are using Shardine do not only have separate data storage - they all have their own domain names. I frequently need to validate that every site is able to work correctly with the changes I am making. At Cheddar we are also using multiple domains, which is a good security practice due to CORS and CSP. Until recently I didn‚Äôt really have a good setup for developing with multiple domains, but that has changed - and the setup I ended up with works really, really well. So, let‚Äôs dive in - it could work just as well for you too! The problem of multiple hostnames When you have an application (let‚Äôs assume it is a Rails application, for simplicity) and you run bin/rails s or bin/dev the app boots and binds to localhost:127.0.0.1. It means that it will respond on requests to your localhost IP only (regardless of which domain name is used), and it usually runs on port 3000 - which is a Rails default. When you have multiple subdomains and you want to test them, the standard approach is editing your /etc/hosts and adding the following segment to it: 127.0.0.1 myapp-site1 127.0.0.1 myapp-site2 127.0.0.1 myapp-site3 You then need to flush your DNS caches and change the Puma config to bind not to localhost but to your link-local IP instead: bind \"tcp://0.0.0.0:3000\" This is so that Puma listens not only to localhost but to any request that comes in to your link-local IP. This approach works, but it has some disadvantages. First, you need to edit your /etc/hosts and add (or remove) every app‚Äôs domains that you are working on. This is annoying and wasteful. Second, you can encounter problems with .local, .home and .example TLDs if you use them - so you may bump into your DNS lookups taking 5 seconds Also, the /etc/hosts approach only makes these new names resolvable on the machine the app is running on. It is fine as long as you do not want to test your site on a mobile device, for example - a very valid use case! You want to open your app on your smartphone and examine the mobile-optimized layout, for example - as well as test the JS-heavy bits that may be slow on mobile. But just resolving to localhost will not allow your device to access your workstation where the app is running! You can also use .lvh.me which gives you a DNS resolution to 127.0.0.1 for anything you throw at it. This removes the need to edit /etc/hosts but introduces another big problem. Some ISPs will actually filter out any DNS responses that you receive which resolve to 127.0.0.1 - this is called DNS rebinding protection and one of the dominant ISPs here in the Netherlands does it so heavy-handedly and badly that even if you configure your own DNS servers their responses get filtered out as well. This manifests as another severe DNS timeout when you try to access locally-bound hosts. And the only remedy for this is‚Ä¶ adding those hosts to your /ect/hosts. Bah.",
    "Confidence": 0.9924711
  },
  {
    "Title": "Understand Your Manager - Don't Break Prod",
    "Url": "https://dontbreakprod.com/posts/understand-your-manager",
    "Timestamp": "2025-05-17T00:02:26",
    "Domain": "dontbreakprod.com",
    "Description": "Don't Break Prod provides bite-sized pieces of career advice for software engineers.",
    "Confidence": 0.95433164
  },
  {
    "Title": "Kate Monica's portfolio",
    "Url": "https://katemonica.com/why-brand-matters",
    "Timestamp": "2025-05-17T00:02:24",
    "Domain": "katemonica.com",
    "Description": "Helping tech companies build brand moats",
    "Confidence": 0.9904359
  },
  {
    "Title": "Insane malware hidden with invisible Unicode and Google Calendar invites!",
    "Url": "https://youtube.com/watch?v=N8dHa2b-I5A",
    "Timestamp": "2025-05-17T00:02:15",
    "Domain": "youtube.com",
    "Description": "In this video, we uncover one of the most bizarre and sophisticated supply chain attacks we‚Äôve seen so far ‚Äî involving Unicode PUA characters, base64 obfuscation, and Google Calendar invites as malware delivery vehicles. üïµÔ∏è‚Äç‚ôÇÔ∏è\n\nüîç What we found:\n\nAn NPM package called os-info-checker-es6 hiding malicious logic behind invisible characters.\nUse of eval(atob(...)) patterns to silently execute obfuscated code.\nMalware delivered through a Google Calendar link embedded in a fake package update.\nA payload delivery chain that uses base64 strings encoded inside calendar event titles to fetch malicious domains.\n\n‚ö†Ô∏è What makes this even scarier? This package has dependents that look professional, giving the attack a supply chain infection vector. The attackers seem to be preparing for a large-scale deployment... but we caught them in the act.\n\nIndicators of Compromise (IOCs), technical deep dive, and decoded examples are all covered in this video.\n\nüõ°Ô∏è Stay safe, stay vigilant‚Äîand don‚Äôt trust every NPM package!\n\n\nRead more about it on our blog https://www.aikido.dev/blog/youre-invited-delivering-malware-via-google-calendar-invites-and-puas\n\n#Malware #SupplyChainAttack #InfoSec #JavaScript #NodeJS #NPM #Obfuscation #CyberSecurity #GoogleCalendarExploit",
    "Confidence": 0.9869593
  },
  {
    "Title": "Sail Physics",
    "Url": "https://xkcd.com/3090/",
    "Timestamp": "2025-05-16T21:02:22",
    "Domain": "xkcd.com",
    "Description": "",
    "Confidence": 0.98151064
  },
  {
    "Title": "After months of coding with LLMs, I'm going back to using my brain ‚Ä¢ albertofortin.com",
    "Url": "https://albertofortin.com/writing/coding-with-ai",
    "Timestamp": "2025-05-16T15:02:21",
    "Domain": "albertofortin.com",
    "Description": "I've been building MVPs and SaaS products for 15 years. Let's work together on your next project.",
    "Confidence": 0.9893098
  },
  {
    "Title": "Ground control to Major Trial",
    "Url": "https://virtualize.sh/blog/ground-control-to-major-trial/",
    "Timestamp": "2025-05-16T14:02:23",
    "Domain": "virtualize.sh",
    "Description": "When a $130M aerospace company chooses to endlessly abuse free trials instead of typing git pull, you start to question gravity, or at least common sense.",
    "Confidence": 0.9750308
  },
  {
    "Title": "BuyMeACoffee silently dropped support for many countries, and nobody cares",
    "Url": "https://zverok.space/blog/2024-08-08-bmac-snafu.html",
    "Timestamp": "2025-05-16T14:02:21",
    "Domain": "zverok.space",
    "Description": "Silent changes in payment methods on big creator funding platforms raise some unpleasant questions.",
    "Confidence": 0.8981156
  },
  {
    "Title": "Building a Product, Live on Twitch üé•",
    "Url": "https://www.berkansasmaz.com/building-a-product-live-on-twitch/",
    "Timestamp": "2025-05-16T13:02:16",
    "Domain": "www.berkansasmaz.com",
    "Description": "Next week, I will start building a real-world app live on Twitch ‚Äî using ABP Framework and AI to get things done faster and smarter.\n\nThe app is called BeeFocus (I‚Äôve already secured beefocus.io), and it will include:\n\n * üîñ Read It Later\n * üåê RSS Feeder\n * ‚úÖ Task Management\n * ‚è±Ô∏è Pomodoro\n * üìÖ Calendar\n * etc.\n\nI",
    "Confidence": 0.95731384
  },
  {
    "Title": "Ollama's new engine for multimodal models ¬∑ Ollama Blog",
    "Url": "https://ollama.com/blog/multimodal-models",
    "Timestamp": "2025-05-16T13:02:15",
    "Domain": "ollama.com",
    "Description": "Ollama now supports new multimodal models with its new engine.",
    "Confidence": 0.9729137
  },
  {
    "Title": "Building Your Own CQRS Pipeline With Decorators (Dropped MediatR!)",
    "Url": "https://youtube.com/watch?v=gsluG8NdCfw",
    "Timestamp": "2025-05-16T12:02:33",
    "Domain": "youtube.com",
    "Description": "Get the free Clean Architecture template: https://dub.sh/ca-template\nWant to master Clean Architecture? Go here: https://bit.ly/3PupkOJ\nWant to unlock Modular Monoliths? Go here: https://bit.ly/3SXlzSt\n\nSo‚Ä¶ you‚Äôve removed MediatR. But how do you replace pipeline behaviors like logging and validation?\n\nIn this video, I‚Äôll show you how to implement a powerful middleware pipeline for your custom CQRS setup using the Decorator Pattern‚Äîno MediatR needed.\n\nüéØ You‚Äôll learn how to:\n- Implement logging and validation decorators for commands and queries\n- Use Scrutor to auto-wire decorators in the DI container\n- Preserve the same cross-cutting power you had with MediatR\n- Chain decorators cleanly and control execution order\n\nThis approach works with custom `ICommandHandler` and `IQueryHandler` abstractions‚Äîso you stay in control of your architecture, without sacrificing functionality.\n\nüìå Covered:\n- Replacing MediatR's `IPipelineBehavior`\n- Using `Scrutor` for `services.Decorate`\n- Order of execution in custom pipelines\n- FluentValidation integration\n\nCheck out my courses:\nhttps://www.milanjovanovic.tech/courses\n\nRead my Blog here:\nhttps://www.milanjovanovic.tech/blog\n\nJoin my weekly .NET newsletter:\nhttps://www.milanjovanovic.tech\n\nChapters\n0:00 What are Pipeline Behaviors?\n1:14 Introducing a Logging Decorator\n3:59 Registering decorators with DI\n8:01 Decorating the command handlers\n9:37 Creating a Validation Decorator\n13:33 The correct Decorator ordering",
    "Confidence": 0.9827247
  },
  {
    "Title": "ABP Module - Identity",
    "Url": "https://youtube.com/watch?v=y0lvrlmWDIM",
    "Timestamp": "2025-05-16T11:02:20",
    "Domain": "youtube.com",
    "Description": "Tired of scattered identity features? ABP's Identity Module gives you full control over users, roles, claims, and more with advanced authentication and authorization for .NET.\n\nWebsite: https://abp.io\nModule: https://abp.io/modules/Volo.Identity.Pro\nAll Modules: https://abp.io/modules\n\n#abpframework #modules #identitymodule #dotnet #abp",
    "Confidence": 0.991699
  },
  {
    "Title": "Understanding the Domain and Application Layers in ABP Framework",
    "Url": "https://www.berkansasmaz.com/understanding-the-domain-and-application-layers-in-abp-framework/",
    "Timestamp": "2025-05-16T10:02:14",
    "Domain": "www.berkansasmaz.com",
    "Description": "When building a well-structured and maintainable software system using the ABP Framework, it is essential to understand the core responsibilities of the Domain and Application layers. These layers implement the Domain-Driven Design (DDD) principles and encapsulate business logic, coordinate use cases, and ensure a clean separation of concerns.\n\n\nDomain Layer:",
    "Confidence": 0.99197257
  },
  {
    "Title": ".NET Web App Modernization Made Easy with Tom√°≈° Herceg's New Book and DotVVM",
    "Url": "https://youtube.com/watch?v=MPTCAGmPZ4A",
    "Timestamp": "2025-05-16T09:02:07",
    "Domain": "youtube.com",
    "Description": "DotConnect and Entity Developer dotConnect and Entity Developer boost .NET development with high-performance ADO .NET providers and visual ORM builder. Try a 30-day free trial now!\r\n\r\n Show Notes \"I remember I had the entire life cycle of the web forms printed on a wall. It was like six sheets of paper and it was very complex, and it was very useful to have it on the wall because, like, you could always look at it and say, \"okay, this is going on before this one.\" So you have to like switch the order of things. But that's exactly what I call interesting\"‚Äî Tom√°≈° Herceg\r\n\r\n Welcome friends to The Modern .NET Show; the premier .NET podcast, focusing entirely on the knowledge, tools, and frameworks that all .NET developers should have in their toolbox. We are the go-to podcast for .NET developers worldwide, and I am your host: Jamie \"GaProgMan\" Taylor.\r\n\r\n In this episode, we talk with Tom√°≈° Herceg about strategies for modernizing .NET Framework web applications such that they leverage the very latest in the .NET stack. Tom√°≈° shares his insights from the journey of upgrading his own applications and those of his clients, both of which provided the background for his new book: \"Modernizing .NET Web Applications\".\r\n\r\n \"The biggest problem of the YARP migrations: that they will force you to do a lot of infrastructure things at the beginning before you even start migrating some real functionality.\"‚Äî Tom√°≈° Herceg\r\n\r\n Along the way, we discuss how using his DotVVM project can help with the migration. Not only is the upgrade path for DotVVM projects a process of swapping a NuGet package, but is also keeps the upgrade as a single in-memory process‚Äîsomething that YARP-based migrations aren't able to do.\r\n\r\n Anyway, without further ado, let's sit back, open up a terminal, type in `dotnet new podcast` and we'll dive into the core of Modern .NET.\r\n\r\n Supporting the Show If you find this episode useful in any way, please consider supporting the show by either leaving a review (check our review page for ways to do that), sharing the episode with a friend or colleague, buying the host a coffee, or considering becoming a Patron of the show.\r\n\r\n Full Show Notes The full show notes, including links to some of the things we discussed and a full transcription of this episode, can be found at:  https://dotnetcore.show/season-7/dotnet-web-app-modernization-made-easy-with-tomas-hercegs-new-book-and-dotvvm/\r\n\r\n Links:  DotVVM DotVVM.Owin DotVVM.AspNetCore Yarp Strangler Fig Pattern Modernizing .NET Web Applications Gauss Curve (aka Normal distribution) Tom√°≈° on LinkedIn  Model-view-ViewModel  Supporting the show:  dotConnect 30 day trial Entity Developer 30 day trial Leave a rating or review Buy the show a coffee Become a patron  Getting in Touch:  Via the contact page Joining the Discord  Remember to rate and review the show on  Apple Podcasts, Podchaser, or wherever you find your podcasts, this will help the show's audience grow. Or you can just share the show with a friend.\r\n\r\n And don't forget to reach out via our Contact page. We're very interested in your opinion of the show, so please get in touch.\r\n\r\n You can support the show by making a monthly donation on the show's Patreon page at: https://www.patreon.com/TheDotNetCorePodcast.\r\n\r\n Music created by Mono Memory Music, licensed to RJJ Software for use in The Modern .NET Show",
    "Confidence": 0.9827612
  },
  {
    "Title": "A leap year check in three instructions",
    "Url": "https://hueffner.de/falk/blog/a-leap-year-check-in-three-instructions.html",
    "Timestamp": "2025-05-16T06:02:13",
    "Domain": "hueffner.de",
    "Description": "How to test for leap years (until year 102499) in the proleptic Gregorian calendar with just three 32-bit instructions, with detailed explanation of the bit-level tricks.",
    "Confidence": 0.99803346
  },
  {
    "Title": "The Unreasonable Effectiveness of an LLM Agent Loop with Tool Use",
    "Url": "https://sketch.dev/blog/agent-loop",
    "Timestamp": "2025-05-16T05:02:26",
    "Domain": "sketch.dev",
    "Description": "2025-05-15 by Philip Zeyliger",
    "Confidence": 0.9870211
  }
]