[
  {
    "Title": "Axelar’s Universal Blockchain Interoperability Network Raises $35 Million to Reach $1 Billion Valuation | Axelar Network",
    "Url": "https://axelar.network/news/axelars-universal-blockchain-interoperability-network-raises-35-million-to-reach-1-billion-valuation",
    "Timestamp": "2022-02-15T20:05:17",
    "Domain": "axelar.network",
    "Description": "15 February 2022 - Axelar, the universal decentralized interoperability network connecting all blockchain ecosystems, applications, and assets has today",
    "Confidence": 0.8515646
  },
  {
    "Title": "Visual Studio 2022 version 17.1 Release Notes",
    "Url": "https://docs.microsoft.com/en-us/visualstudio/releases/2022/release-notes#17.1.0",
    "Timestamp": "2022-02-15T20:05:17",
    "Domain": "docs.microsoft.com",
    "Description": "Get the latest features, bug fixes, and support for Visual Studio 2022 version 17.1. Download today.",
    "Confidence": 0.8515646
  },
  {
    "Title": "Microsoft Orleans documentation",
    "Url": "https://docs.microsoft.com/en-us/dotnet/orleans/",
    "Timestamp": "2022-02-15T20:05:16",
    "Domain": "docs.microsoft.com",
    "Description": "Samples, tutorials, and education for .NET Orleans. Microsoft's cloud native and distributed systems platform.",
    "Confidence": 0.66518116
  },
  {
    "Title": "Kash Goudarzi",
    "Url": "https://kg.dev/thoughts/i-love-you-hn-but-youre-toxic",
    "Timestamp": "2022-02-15T20:05:16",
    "Domain": "kg.dev",
    "Description": "My website.",
    "Confidence": 0.55010694
  },
  {
    "Title": "Rustup packages availability on x86_64-unknown-linux-gnu",
    "Url": "https://rust-lang.github.io/rustup-components-history/",
    "Timestamp": "2022-02-15T20:05:15",
    "Domain": "rust-lang.github.io",
    "Description": "powerpc-unknown-linux-gnuspe",
    "Confidence": 0.7673692
  },
  {
    "Title": "The Pulumi Automation API - The Next Quantum Leap in IaC",
    "Url": "https://www.pulumi.com/blog/automation-api/",
    "Timestamp": "2022-02-15T19:05:18",
    "Domain": "www.pulumi.com",
    "Description": "Introducing the Pulumi Automation API - Scaling Cloud Projects with Software, Not Humans",
    "Confidence": 0.99829626
  },
  {
    "Title": "Entity Framework Core Inside Rider: UI Way | The .NET Tools Blog",
    "Url": "https://jb.gg/vl2r3g",
    "Timestamp": "2022-02-15T19:05:11",
    "Domain": "jb.gg",
    "Description": "Do you work with Entity Framework Core? Would you like to manage entities right inside your IDE? Then you're in luck! The Entity Framework Core UI plugin for Rider helps you effectively manage everyth",
    "Confidence": 0.982152
  },
  {
    "Title": "My thoughts on writing a Minecraft server from scratch (in Bash)",
    "Url": "https://sdomi.pl/weblog/15-witchcraft-minecraft-server-in-bash/",
    "Timestamp": "2022-02-15T19:05:09",
    "Domain": "sdomi.pl",
    "Description": "I wrote a working Minecraft server in Bash! wait, why did I do that",
    "Confidence": 0.9678302
  },
  {
    "Title": "NServiceBus.Extensions.Diagnostics 2.0 Released",
    "Url": "https://jimmybogard.com/nservicebus-extensions-diagnostics-2-0-released/",
    "Timestamp": "2022-02-15T17:03:41",
    "Domain": "jimmybogard.com",
    "Description": "Last week I pushed out the 2.0 release of NServiceBus.Extensions.Diagnostics package: NuGetRelease NotesAnd related packages: NServiceBus.Extensions.Diagnostics.OpenTelemetryNServiceBus.Extensions.IntegrationTestingThe biggest feature change was to allow behaviors to be able to modify the original activity started by accessing an ICurrentActivity from the ContextBag instead of using",
    "Confidence": 0.9080466
  },
  {
    "Title": "crt.sh | Certificate Search",
    "Url": "https://crt.sh/",
    "Timestamp": "2022-02-15T17:03:41",
    "Domain": "crt.sh",
    "Description": "Free CT Log Certificate Search Tool from Sectigo (formerly Comodo CA)",
    "Confidence": 0.51103157
  },
  {
    "Title": "Google Search Is Dying | DKB",
    "Url": "https://dkb.io/post/google-search-is-dying",
    "Timestamp": "2022-02-15T17:03:35",
    "Domain": "dkb.io",
    "Description": "Reddit is currently the most popular search engine. The only people who don’t know that are the team at Reddit, who can’t be bothered to build a decent search interface. So instead we resort to using Google, and appending the word “reddit” to the end of our queries.",
    "Confidence": 0.6796211
  },
  {
    "Title": "jDeploy - Developer friendly desktop deployment tool",
    "Url": "https://www.jdeploy.com/",
    "Timestamp": "2022-02-15T16:03:35",
    "Domain": "www.jdeploy.com",
    "Description": "jDeploy - Developer friendly desktop deployment tool",
    "Confidence": 0.950235
  },
  {
    "Title": "COM asynchronous interfaces, part 2: Abandoning the operation - The Old New Thing",
    "Url": "https://devblogs.microsoft.com/oldnewthing/20220215-00/?p=106253",
    "Timestamp": "2022-02-15T15:03:31",
    "Domain": "devblogs.microsoft.com",
    "Description": "Last time, we ran a very basic demonstration of COM asynchronous interfaces. Now we’ll start to get fancy. Our first fancy thing is creating a fire-and-forget asynchronous call. To do this, you simply abandon the call object after calling the Begin_ method.",
    "Confidence": 0.99048513
  },
  {
    "Title": "Badly implementing encryption: Part III–breaking your encryption apart",
    "Url": "https://ayende.com/blog/196451-A/badly-implementing-encryption-part-iii-breaking-your-encryption-apart?Key=37066694-05da-4f95-a5a8-c1a6c985a047",
    "Timestamp": "2022-02-15T13:03:29",
    "Domain": "ayende.com",
    "Description": "In the previous post, I showed how the lack of nonce means that encrypted similar values will expose their content. Now I want to discuss a different matter,...",
    "Confidence": 0.7224066
  },
  {
    "Title": "Waiting for your ASP.NET Core app to be ready from an IHostedService in .NET 6",
    "Url": "https://andrewlock.net/finding-the-urls-of-an-aspnetcore-app-from-a-hosted-service-in-dotnet-6/",
    "Timestamp": "2022-02-15T13:03:29",
    "Domain": "andrewlock.net",
    "Description": "In this post I describe how you can wait for your ASP.NET Core app to be ready to receive requests from inside an IHostedService/BackgroundService in .NET 6",
    "Confidence": 0.9908072
  },
  {
    "Title": "How to Add Custom Headers in ASP.NET Core Web API",
    "Url": "https://code-maze.com/aspnetcore-add-custom-headers/",
    "Timestamp": "2022-02-15T09:03:37",
    "Domain": "code-maze.com",
    "Description": "In this article, we are going to learn how to add custom headers in ASP.NET Core Web API and how to enable it with CORS.",
    "Confidence": 0.993466
  },
  {
    "Title": "How to become master writing C# code",
    "Url": "https://ardalis.com/how-to-become-master-writing-c-code/",
    "Timestamp": "2022-02-15T08:02:29",
    "Domain": "ardalis.com",
    "Description": "How to become master writing C# code. The discussion that followed had a lot of great ideas and insights, from many well-respected and experienced C# developers. ",
    "Confidence": 0.8258941
  },
  {
    "Title": "That Wild Ask A Manager Story - Jacob Kaplan-Moss",
    "Url": "https://jacobian.org/2022/feb/14/that-wild-aam-story/",
    "Timestamp": "2022-02-15T08:02:28",
    "Domain": "jacobian.org",
    "Description": "Ask A Manager had a wild story a week ago. A company interviewed someone, hired him, but when he showed up for work … it was a totally different person. A friend asked, “if this was your hire, and you manager asked you to change your hiring practices to prevent this, what would you do?” Nothing. I would do nothing. Here’s why.",
    "Confidence": 0.8258969
  },
  {
    "Title": "20 years of .NET ",
    "Url": "https://asp.net-hacker.rocks/2022/02/14/20-years-of-dotnet.html",
    "Timestamp": "2022-02-15T07:04:18",
    "Domain": "asp.net-hacker.rocks",
    "Description": ".NET turns 20 years today and it is just kind of ... wow! 20 years of .NET also means to me to be a software engineer for more than 20 years.",
    "Confidence": 0.96042204
  },
  {
    "Title": "Why We Use Julia, 10 Years Later",
    "Url": "https://www.julialang.org/blog/2022/02/10years/",
    "Timestamp": "2022-02-15T07:04:16",
    "Domain": "www.julialang.org",
    "Description": "10 years ago today, we published 'Why we Created Julia' ...",
    "Confidence": 0.8450044
  },
  {
    "Title": "A Practical Guide to Dapper - Simple Talk",
    "Url": "https://www.red-gate.com/simple-talk/development/dotnet-development/a-practical-guide-to-dapper/",
    "Timestamp": "2022-02-15T06:03:17",
    "Domain": "www.red-gate.com",
    "Description": "Dapper is a lightweight framework for data access. Camilo Reyes explains how to query, call stored procedures, and more with Dapper in C#.",
    "Confidence": 0.9795096
  },
  {
    "Title": "A conditional sandwich example",
    "Url": "https://blog.ploeh.dk/2022/02/14/a-conditional-sandwich-example/",
    "Timestamp": "2022-02-15T06:03:14",
    "Domain": "blog.ploeh.dk",
    "Description": "An F# example of reducing a workflow to an impureim sandwich.",
    "Confidence": 0.95200133
  },
  {
    "Title": "tinydomain",
    "Url": "https://tinydomain.net/",
    "Timestamp": "2022-02-15T06:03:14",
    "Domain": "tinydomain.net",
    "Description": "Free and very fast short domain suggestions or search by keyword. Tiny Domain returns 8 characters or less unregistered domains. ",
    "Confidence": 0.80814326
  },
  {
    "Title": "Health Stats",
    "Url": "https://xkcd.com/2581/",
    "Timestamp": "2022-02-15T05:02:54",
    "Domain": "xkcd.com",
    "Description": "",
    "Confidence": 0.8522955
  },
  {
    "Title": "MonoLisa",
    "Url": "https://www.monolisa.dev/",
    "Timestamp": "2022-02-15T04:04:20",
    "Domain": "www.monolisa.dev",
    "Description": "A font family designed for software developers. Font follows function.",
    "Confidence": 0.58386487
  },
  {
    "Title": "ACM: Developing a new app is an unnecessary and unreasonable condition that Apple imposes on dating-app providers",
    "Url": "https://www.acm.nl/en/publications/acm-developing-new-app-unnecessary-and-unreasonable-condition-apple-imposes-dating-app-providers",
    "Timestamp": "2022-02-15T03:03:13",
    "Domain": "www.acm.nl",
    "Description": "The revised conditions that Apple has imposed on dating-app providers are unreasonable, and create an unnecessary barrier. Apple must therefore pay another 5 million euros.",
    "Confidence": 0.5412566
  },
  {
    "Title": "PDFs in Django like it’s 2022! — /var/",
    "Url": "https://www.spapas.net/2022/02/14/django-pdfs-2022/",
    "Timestamp": "2022-02-15T02:03:11",
    "Domain": "www.spapas.net",
    "Description": "In a previous article I had written a very comprehensive\nguide on how to render PDFs in Django using tools like reportlab and xhtml2pdf. Although these tools\nare still valid and work fine I have decided that usually it’s way too much pain to set them up to work properly.",
    "Confidence": 0.9987123
  },
  {
    "Title": "Performance Vs. Scalability",
    "Url": "https://christianfindlay.com/2022/02/13/performance-vs-scalability/",
    "Timestamp": "2022-02-15T02:03:11",
    "Domain": "christianfindlay.com",
    "Description": "\nPerformance and scalability are two related but separate aspects of a system. However, there is a lot of confusion around the two terms, which often leads to architectural mistakes. This article talks about the difference between the two concepts and how to improve them.\n\n\n\nPerformance\n\n\n\nPerformance is about how fast your system works. It's the experience users have when waiting for your system to do something, and it's how fast your underlying code runs. Network latency, bandwidth, and other factors also affect performance. \n\n\n\nWhen the system does not have a lot of data or users, performance is usually acceptable and easy to manage. When the amount of data and number of concurrent users grow, the servers' resources may reach their maximum, and this will cause performance degradation.\n\n\n\nHowever, there is a key point here. The system's design and the code quality have a huge impact on how quickly the server's resources reach their maximum capacity. You can pay for an extremely expensive database server, but data retrieval will consume a lot of resources if you do not put indexes in the right place. Conversely, efficient code can avoid resource depletion even on cheap servers.\n\n\n\nIf you've done elementary computer science and learned the basics of data structures and algorithms, you will be aware of how quickly a poor implementation can chew memory or CPU power. This is what we mean by resources. Poor code will chew these up, your system will reach capacity, and users will experience poor performance.\n\n\n\nBasically, bad code and database design will slow your servers down and potentially max out your server's resources.\n\n\n\nScalability\n\n\n\nScalability is the ability to handle larger amounts of work when the system is under heavy load by throwing more resources at the problem. This generally means improving performance by buying faster servers or adding more servers. A system is scalable if you can increase the computing power of the existing servers (vertical scaling or scaling up) or increase the number of servers (horizontal scaling or scaling out), and you can also scale back down when there is less system load.\n\n\n\nAutomatic scaling means that resources become available during busier times but become unavailable when not needed. This is pretty important because you may not be available to add resources during busy times, and you don't want to pay for extra resources when it's quiet. \n\n\n\nA system is not horizontally scalable if the code design does not allow multiple servers to respond to requests. For example, if a service depends on the local state of the server, another server may not be able to serve the same requests. If server a) writes local files to the hard drive and needs those to respond, server b) cannot see those files and will give incorrect responses. Horizontal scalability requires special attention to state.\n\n\n\nIndependent Scalability\n\n\n\nSometimes architects divide systems into smaller parts. They may separate a data store into two physically different parts. This means that one part of the system can scale up or down separately from the other parts of the system. This can be useful when one part of the system receives more traffic than other parts. \n\n\n\nFor example, the menu part of the system may receive thousands of requests per second, while the ordering part may only receive a few transactions per second. If the menu part of the system maxes out resources, it may slow down ordering even though ordering is not doing much work. Independent scaling would allow you to throw resources at the menu so that ordering doesn't suffer performance degradation.\n\n\n\nOn its face, this seems like a nice-to-have feature of the architecture. However, this may massively increase the system's complexity, and it may actually increase costs. Database instances are often expensive, and you often pay a flat monthly fee whether you use them heavily or not. Moreover, the busier part of the system should only affect the performance of the less active part if the active part maxes out resources.\n\n\n\nThe important thing to be clear about here is that you do not need independent scalability to achieve vertical or horizontal scalability in your app. All things being equal, the server will respond to requests across different parts of the app simultaneously. If the server cannot, it probably means that it doesn't have enough resources or a code issue is causing blocking. \n\n\n\nThe System is Slow. What do I do?\n\n\n\nThe first thing you need is monitoring and observability. You need to log information about what is happening, and you need to have information about the resource usage of the servers that are serving up the system. You cannot answer any questions without this information. So, when your boss comes to you and says, Please make the system go faster., the first thing you need to look at is whether you can measure how the system is performing.\n\n\n\nWhen you have some data on what is happening, you will be in a position to speculate about whether you need to work on performance, scale-up, or both. \n\n\n\nLet's say that your GetMenu endpoint takes three seconds, even during quiet times. The server's CPU is hovering at 10%, and there is plenty of free memory. This is a clear sign that you have a typical performance problem. The system is running slowly, even when there is no extra load on the server. It may be as simple as adding an index to a database table. You should use the existing telemetry (logging) data and performance profiling to figure out what is wrong. This scenario is a clear case where you need to optimize code or the software design. Scaling up will not help you in this scenario.\n\n\n\nTake a different scenario. During quiet times, the performance is good, but during peak times, all endpoints take 3+ seconds to run, the server is constantly hovering at around 90%+ CPU usage, and there is very little memory left. This suggests that you could alleviate the problem by scaling up or scaling out the servers. But, it does not prove that you don't have a simple code quality issue. In this scenario, you may want to scale up to improve the experience for users temporarily, but you still need to determine if there is some bad code that is maxing out resources. Again, you will need to use telemetry data and profiling to understand what is happening. There may simply be one code piece that slows the entire system down. Quite often it's a database query.\n\n\n\n\n\n\n\nDoes the System Need Scalability?\n\n\n\nIt's important to distinguish between vertical and horizontal scalability. You can usually get vertical scalability for free if you deploy to the cloud. Most cloud providers allow you to upgrade the server with a faster CPU and more memory. However, it may shock many people to read that most systems probably do not need horizontal scalability. Unless you are dealing with a very high-end system with thousands of users, the chances are that you will not need it. Assuming that you will need horizontal scalability is a massive underestimation of modern computing power. \n\n\n\nIn 2001 I worked on a warehouse management system for Nike. The team bought a Sun Microsystems server that cost around $100,000 at the time, was about 1 meter cubed and weighed more than one person could carry. The server ran an Oracle database server and served the whole warehouse system. I worked on box scanning, and this took around 10 seconds. I optimized the code and added some indexes to the database, which reduced the time to less than 2 seconds which was satisfactory for performance at the time. This system didn't need horizontal scalability even though it serviced a large operation. My smartphone is probably more powerful than that server at this point. Computers are fast and getting faster. \n\n\n\nIf you build a Saas application and plan to store data from many organizations in one system, you probably need scalability. Let's say that your application will service businesses that employ 100+ users, and you plan to onboard 100+ businesses to your system. Your app could potentially have 10,000+ concurrent users. In this scenario, you will probably need to spread the load over multiple servers, and this is where horizontal scalability is critical. \n\n\n\nYou should design for horizontal scalability because you may need at least two servers running incase one server becomes unavailable. In this sense horizontal scalability relates to availability. But bear in mind that you are far more likely to encounter bad code that slows down your system than hitting a genuine requirement for horizontal scalability. My experience has shown that 9 times out of 10, you can fix performance issues by optimizing the code or database query. I have seen technology or framework upgrades improve response times by 200% to 300%. \n\n\n\nThink about horizontal scalability, but don't be preoccupied with it. Focus on good code quality and observability. These are core ingredients for systems that perform well. \n\n\n\n\n\n\n\nOur Code is Old, Messy, and We Don't Want to Change It.\n\n\n\nThis leads me to the big mistake. Almost all businesses allow their codebase to degrade over time. The system slows down, refactoring gets harder, and users start complaining. Attempts to improve performance fail and cause bugs instead. This is the point at which many people conclude that you need to rewrite completely and with extreme scalability in mind. Often, people add in the independency scalability clause. The thinking is that the system is performing so badly right now that only going to the extreme opposite will fix the problems. \n\n\n\nThis is where the derogatory term monolith comes in. People point to the existing system, note that it only has one database, and then there is no further argumentation necessary to justify massive expenditure on building a new system that supports independent scalability. I've seen this mistake over and over. The mistake here is the belief that engineers cannot improve existing code and that upgrading code to newer technologies is too hard. They can, and they need to improve code continuously. If they don't, you will have the same issue in a few years.\n\n\n\nI've witnessed companies burning countless months of time and money to rebuild parts of a system only to abandon the project in the end. \n\n\n\nYour company can improve existing code. You can use things like conditional compilation symbols to target two technologies so you can upgrade, and you can add tests to your existing code to make refactoring easier. I can definitely say that this is almost always the cheaper, easier solution. I recently entered a project where the plan was to implement massive scalability. I led a team to upgrade from .NET Framework to .NET Core, and the performance issues disappeared. There was no need for horizontal scaling at all. \n\n\n\nYour business needs to allocate time and resources to improve code over time. You cannot escape this. Not doing this will only ensure that you end up in the same situation again soon.\n\n\n\nWrap-Up\n\n\n\nPerformance and scalability are things you will have to deal with in your career. It's important to understand the difference and how they relate to each other. Sometimes you will need to decide which one to focus on, but don't let the existing slow system with poor code guide your decision-making. Poor performance is the inevitable result of neglecting performance over time. Exhaust the performance optimization approach before you reach for scaling out. Scaling out will cost your business money and won't address underlying issues. Use monitoring and observability to guide your decisions instead of buzzwords and architecture trends, and don't get confused between scalability and independent scalability. You don't necessarily need independent scalability to scale horizontally.\n",
    "Confidence": 0.9864108
  },
  {
    "Title": "Why Write Technical Articles",
    "Url": "https://coornail.net/2022/02/why-write-technical-articles/",
    "Timestamp": "2022-02-15T02:03:10",
    "Domain": "coornail.net",
    "Description": "I don’t have many people reading my blog, on most days I get about 5 visitors. Why on earth should I keep writing articles? The chance of landing a job is slim and I certainly won’t earn any revenue from the site.",
    "Confidence": 0.9077969
  },
  {
    "Title": "What Color Is Your Monad",
    "Url": "https://patrickthebold.github.io/posts/what-color-is-your-monad/",
    "Timestamp": "2022-02-15T02:03:09",
    "Domain": "patrickthebold.github.io",
    "Description": "There’s a lovely old blog post What Color is Your Function (WCIYF).\nIf you haven’t read that, please do so instead of reading this one.",
    "Confidence": 0.973358
  },
  {
    "Title": "How I research any topic",
    "Url": "https://charleswilliamson.com/how-i-research-any-topic/",
    "Timestamp": "2022-02-15T02:03:09",
    "Domain": "charleswilliamson.com",
    "Description": "Here are some principles that I try to stick to when learning a completely new and unfamiliar topic",
    "Confidence": 0.9690262
  },
  {
    "Title": "Education is its own privilege",
    "Url": "https://www.zeldman.com/2022/02/12/education-is-its-own-privilege/",
    "Timestamp": "2022-02-15T02:03:09",
    "Domain": "www.zeldman.com",
    "Description": "Whether or not it was the most expensive or most competitive college in the land (it wasn’t), it was a place where they’d encounter other smart kids from different backgrounds and discover Truffaut and Bergman and stay up all night enthralled by great ideas or ridiculing them, cracking each other up, sleeping together, experiencing new levels of romance and heartbreak, discovering possibilities.",
    "Confidence": 0.70508945
  },
  {
    "Title": "Building an iPod for 2022",
    "Url": "https://ellie.wtf/ipod/",
    "Timestamp": "2022-02-15T02:03:09",
    "Domain": "ellie.wtf",
    "Description": "I modified an old iPod Video with more storage, a new casing, and more battery life. Also some fancy software :)",
    "Confidence": 0.6407831
  },
  {
    "Title": "Why won’t anyone teach her math?",
    "Url": "https://quomodocumque.wordpress.com/2022/02/12/why-wont-anyone-teach-her-math/",
    "Timestamp": "2022-02-15T02:03:09",
    "Domain": "quomodocumque.wordpress.com",
    "Description": "Lots of discussion in my feeds about this Daily Princetonian piece, “Why won’t anyone teach me math?” by first-year student Abigail Rabieh. She just took Math 202, an intro to lin…",
    "Confidence": 0.64075255
  },
  {
    "Title": "As .NET Turns 20, Microsoft Says .NET 7 Preview 1 Coming This Week -- Visual Studio Magazine",
    "Url": "https://visualstudiomagazine.com/articles/2022/02/14/net-20.aspx",
    "Timestamp": "2022-02-15T01:03:10",
    "Domain": "visualstudiomagazine.com",
    "Description": "  Microsoft, in celebrating the 20th anniversary of .NET, revealed that the first preview of the latest version, .NET 7, will debut this week.",
    "Confidence": 0.8869818
  },
  {
    "Title": "FailScout - the crowdsourced database for broken or worn-out products",
    "Url": "https://www.failscout.co/",
    "Timestamp": "2022-02-15T00:03:38",
    "Domain": "www.failscout.co",
    "Description": "We should build a collection about how things break - review broken and worn-out products to teach how to identify cheap products.",
    "Confidence": 0.85073
  },
  {
    "Title": "Security of BLS batch verification - Cryptography - Ethereum Research",
    "Url": "https://ethresear.ch/t/security-of-bls-batch-verification/10748",
    "Timestamp": "2022-02-14T23:02:57",
    "Domain": "ethresear.ch",
    "Description": "Security of BLS batch verification By JP Aumasson (Taurus), Quan Thoi Minh Nguyen, and Antonio Sanso (Ethereum Foundation)  Thanks to Vitalik Buterin for his feedback.     In a 2019 post Vitalik Buterin introduced Fast verification of multiple BLS signatures. Quoting his own words this is   a purely client-side optimization that can voluntarily be done by clients verifying blocks that contain multiple signatures   The original post includes some preliminary security analysis, but in this post w...",
    "Confidence": 0.9660814
  },
  {
    "Title": "Software Engineer - Planning & Tracking",
    "Url": "https://boards.greenhouse.io/github/jobs/3940318",
    "Timestamp": "2022-02-14T23:02:54",
    "Domain": "boards.greenhouse.io",
    "Description": "Remote - US / Canada",
    "Confidence": 0.91210943
  },
  {
    "Title": "[Last Week in .NET #81] – Happy Birthday, .NET",
    "Url": "https://georgestocker.com/2022/02/14/last-week-in-net-81-happy-birthday-net/",
    "Timestamp": "2022-02-14T23:02:54",
    "Domain": "georgestocker.com",
    "Description": "Happy Birthday .NET! You’ve turned 20. 🎂 In honor of your birthday, let’s talk about you for a minute, and all you’ve brought into this world. You’ve had a bit of a shaky li…",
    "Confidence": 0.62795
  },
  {
    "Title": "TripIt Privacy Policy",
    "Url": "https://www.tripit.com/uhp/privacyPolicy",
    "Timestamp": "2022-02-14T22:03:13",
    "Domain": "www.tripit.com",
    "Description": "The following Privacy Policy summarizes the various ways that we use the information you provide to us or we gather from you while you use the tripit.com online service.",
    "Confidence": 0.81742513
  },
  {
    "Title": "Initial revision · dotnet/runtime@480e91e",
    "Url": "https://github.com/dotnet/runtime/commit/480e91e54517a0fee2e64a9a24dc8319dad03186",
    "Timestamp": "2022-02-14T22:03:13",
    "Domain": "github.com",
    "Description": "svn path=/trunk/mono/; revision=9\n\n\nCommit migrated from https://github.com/mono/mono/commit/0fae05ddc83ee034344d50a6d4d618cfb10ee491",
    "Confidence": 0.9584809
  },
  {
    "Title": "One Rule Engine to Rule them all? | Meetup",
    "Url": "https://www.meetup.com/HaintonsDotNetMeetup/events/283608740/",
    "Timestamp": "2022-02-14T21:03:00",
    "Domain": "www.meetup.com",
    "Description": "Thu, Feb 17, 6:00 PM GMT: Join Peter Bull from tombola as he talks about using Rule Engines in C# and how tombola is creating and using a Rule Engine to implement conditional behaviour in their webs",
    "Confidence": 0.99359167
  }
]