[
  {
    "Title": "GitHub - malmeloo/FindMy.py: üçè + üéØ + üêç = Everything you need to query Apple's FindMy network!",
    "Url": "https://github.com/malmeloo/FindMy.py",
    "Timestamp": "2024-12-21T22:01:40",
    "Domain": "github.com",
    "Description": "üçè + üéØ + üêç = Everything you need to query Apple's FindMy network! - malmeloo/FindMy.py",
    "Confidence": 0.99530506
  },
  {
    "Title": "GitHub - davidfowl/IIS.NativeAOT: An experimental project that attempts to write a fully native IIS module using C# NativeAOT",
    "Url": "https://github.com/davidfowl/IIS.NativeAOT",
    "Timestamp": "2024-12-21T20:01:38",
    "Domain": "github.com",
    "Description": "An experimental project that attempts to write a fully native IIS module using C# NativeAOT - davidfowl/IIS.NativeAOT",
    "Confidence": 0.9587552
  },
  {
    "Title": "dropping hyper",
    "Url": "https://daniel.haxx.se/blog/2024/12/21/dropping-hyper/",
    "Timestamp": "2024-12-21T20:01:38",
    "Domain": "daniel.haxx.se",
    "Description": "The ride is coming to an end. The experiment is done. We tried, but we admit defeat. Four years ago we started adding support for an alternative HTTP backend in curl. It would use a library written in rust, called hyper. The idea was to introduce an alternative implementation of HTTP internals that you could ‚Ä¶ Continue reading dropping hyper ‚Üí",
    "Confidence": 0.9892234
  },
  {
    "Title": "Compiling C to Safe Rust, Formalized",
    "Url": "https://arxiv.org/abs/2412.15042",
    "Timestamp": "2024-12-21T18:01:35",
    "Domain": "arxiv.org",
    "Description": "The popularity of the Rust language continues to explode; yet, many critical codebases remain authored in C, and cannot be realistically rewritten by hand. Automatically translating C to Rust is thus an appealing course of action. Several works have gone down this path, handling an ever-increasing subset of C through a variety of Rust features, such as unsafe. While the prospect of automation is appealing, producing code that relies on unsafe negates the memory safety guarantees offered by Rust, and therefore the main advantages of porting existing codebases to memory-safe languages.\n  We instead explore a different path, and explore what it would take to translate C to safe Rust; that is, to produce code that is trivially memory safe, because it abides by Rust's type system without caveats. Our work sports several original contributions: a type-directed translation from (a subset of) C to safe Rust; a novel static analysis based on \"split trees\" that allows expressing C's pointer arithmetic using Rust's slices and splitting operations; an analysis that infers exactly which borrows need to be mutable; and a compilation strategy for C's struct types that is compatible with Rust's distinction between non-owned and owned allocations.\n  We apply our methodology to existing formally verified C codebases: the HACL* cryptographic library, and binary parsers and serializers from EverParse, and show that the subset of C we support is sufficient to translate both applications to safe Rust. Our evaluation shows that for the few places that do violate Rust's aliasing discipline, automated, surgical rewrites suffice; and that the few strategic copies we insert have a negligible performance impact. Of particular note, the application of our approach to HACL* results in a 80,000 line verified cryptographic library, written in pure Rust, that implements all modern algorithms - the first of its kind.",
    "Confidence": 0.9857248
  },
  {
    "Title": "ChatGPT vs. Advent of Code 2024 Day 21: Keypad Conundrum",
    "Url": "https://youtube.com/watch?v=F9SxefLHwPo",
    "Timestamp": "2024-12-21T16:01:36",
    "Domain": "youtube.com",
    "Description": "Recursive keypads are a trouble for every human, but are they for AI too?\n\n#openai #chatgpt #python #ai #codeinterpreter #adventofcode \n\nContents:\n0:00 - Intro\n0:20 - Part 1\n2:57 - Part 2\n4:30 - Summary",
    "Confidence": 0.99559295
  },
  {
    "Title": "Artemis",
    "Url": "https://artemis.jamesg.blog/",
    "Timestamp": "2024-12-21T11:01:42",
    "Domain": "artemis.jamesg.blog",
    "Description": "Artemis is a calm web reader.",
    "Confidence": 0.98483264
  },
  {
    "Title": "SHUT UP And Take The Money! - Principal Software Engineering Manager AMA",
    "Url": "https://youtube.com/watch?v=IYrLasLYp9c",
    "Timestamp": "2024-12-21T08:01:34",
    "Domain": "youtube.com",
    "Description": "They say the grass isn't always greener on the other side... But is it true? How can we tell?\n\nWhen it comes to making team, organization, or role changes as software engineers, we have a lot of things to consider!\n\nIn this stream we'll look at:\n- Team dynamics\n- Career and technical growth\n- Comfort, complacency, and permanency\n- ... and of course, MONEY\n\nAs with all livestreams, I'm looking forward to answering YOUR questions! So join me live and ask in the chat, or you can comment now and I can try to get it answered while I stream.\r\n\r\n----\r\nüîë Membership & Subscriptions:\n- üì® Weekly Newsletter: https://weekly.devleader.ca\n- üèòÔ∏è Private Discord Community: https://sidestack.io/devleader\n\nüß† Courses:\n- All Courses: https://www.devleader.ca/courses\n- Get Promoted As A Software Engineer: https://dometrain.com/course/career-getting-promoted-as-a-software-engineer/?ref=nick-cosentino\n- Nailing The Behavioral Interview: https://dometrain.com/course/career-nailing-the-behavioral-interview/?ref=nick-cosentino\n- Getting Started with C#: https://dometrain.com/course/getting-started-csharp?ref=nick-cosentino\n- Deep dive C#: https://dometrain.com/course/deep-dive-csharp?ref=nick-cosentino\n- C# Zero to Hero BUNDLE: https://dometrain.com/bundle/from-zero-to-hero-csharp/?ref=nick-cosentino\n- Reflection in .NET: https://dometrain.com/course/from-zero-to-hero-reflection-in-dotnet/?ref=nick-cosentino\n- Refactoring For C# Devs: https://dometrain.com/course/from-zero-to-hero-refactoring-for-csharp-developers?ref=nick-cosentino\n- [FREE] Intro to Software Development: https://www.youtube.com/playlist?list=PLzATctVhnsggb3lj53T8fJSK6LJQFUyKS\r\n\r\nüó£Ô∏è Social Media & Links:\r\n- All My Links: https://linktr.ee/devleader\r\n- Vlogs: @DevLeaderBTS @CodeCommute \r\n- Blog: https://www.devleader.ca/\r\n- TikTok: https://www.tiktok.com/@devleader\r\n- LinkedIn: https://www.linkedin.com/in/nickcosentino\r\n- Threads: https://threads.net/@dev.leader\r\n- Twitter: https://twitter.com/DevLeaderCa\r\n- Facebook: https://www.facebook.com/DevLeaderCa\r\n- Instagram: https://www.instagram.com/dev.leader\r\n- GitHub: https://github.com/ncosentino/\r\n- Twitch: https://twitch.tv/devleaderca\r\n- YouTube: https://youtube.com/@DevLeader?sub_confirmation=1\r\n\r\n‚ù§Ô∏è Affiliations & Products/Services That I Love:\r\n- @BrandGhostAI  for all of my content creation: https://brandghost.ai\r\n- AI shorts helper Opus Clip: https://opus.pro/?via=2f9e97\r\n- VPS hosting from RackNerd: https://my.racknerd.com/aff.php?aff=9013\r\n- VPS hosting from Contabo: https://www.jdoqocy.com/click-101028632-12454592\r\n- Newsletter platform ConvertKit: https://convertkit.com/?lmref=c5X7KQ\r\n- Newsletter referral system SparkLoop: https://dash.sparkloop.app/signup?aff=9fe76c8b\r\n----\r\n#ama #askmeanything #softwareengineering #softwareengineer",
    "Confidence": 0.9934255
  },
  {
    "Title": "Enum of Arrays",
    "Url": "https://tigerbeetle.com/blog/2024-12-19-enum-of-arrays/",
    "Timestamp": "2024-12-21T04:01:52",
    "Domain": "tigerbeetle.com",
    "Description": "The financial transactions database to power the next 30 years of Online Transaction Processing.",
    "Confidence": 0.9896872
  },
  {
    "Title": "Exclusion Principle",
    "Url": "https://xkcd.com/3027/",
    "Timestamp": "2024-12-21T04:01:51",
    "Domain": "xkcd.com",
    "Description": "",
    "Confidence": 0.98151064
  }
]