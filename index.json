[
  {
    "Title": "Binary BitPath by Goldenlion5648",
    "Url": "https://goldenlion5648.itch.io/bitpath",
    "Timestamp": "2022-10-02T13:01:29",
    "Domain": "goldenlion5648.itch.io",
    "Description": "A puzzle game that teaches binary operations and logic gates!",
    "Confidence": 0.92597497
  },
  {
    "Title": "Infographics Compendium I - Generators, pure functions and more",
    "Url": "https://steven-giesel.com/blogPost/3ba2e619-4fb2-4f98-ae20-968fc1fe687c",
    "Timestamp": "2022-10-02T07:01:28",
    "Domain": "steven-giesel.com",
    "Description": "Sometimes I publish parts of my infographics I publish on various channels with more explanation.\nAnd then sometimes I don't. This time I just put some of my (hopefully self-explanatory) infographics here.\nPure functions\nGenerator functions\nCost of anonymous types\n",
    "Confidence": 0.988101
  },
  {
    "Title": "Artificial intelligence reduces a 100,000-equation quantum physics problem to only four equations",
    "Url": "https://phys.org/news/2022-09-artificial-intelligence-equation-quantum-physics.html",
    "Timestamp": "2022-10-02T07:01:28",
    "Domain": "phys.org",
    "Description": "Using artificial intelligence, physicists have compressed a daunting quantum problem that until now required 100,000 equations into a bite-size task of as few as four equations—all without sacrificing accuracy. The work, published in the September 23 issue of Physical Review Letters, could revolutionize how scientists investigate systems containing many interacting electrons. Moreover, if scalable to other problems, the approach could potentially aid in the design of materials with sought-after properties such as superconductivity or utility for clean energy generation.",
    "Confidence": 0.95687294
  },
  {
    "Title": "Amazon Best Sellers: Best Computer Cryptography",
    "Url": "https://www.amazon.com/Best-Sellers-Computer-Cryptography/zgbs/books/3875?tag=linksfordevs-20&lfd=202210",
    "Timestamp": "2022-10-02T03:04:52",
    "Domain": "www.amazon.com",
    "Description": "Discover the best books in Amazon Best Sellers. Find the top 100 most popular Amazon books.",
    "Confidence": 0.97616094
  },
  {
    "Title": "Chrome’s new ad-blocker-limiting extension platform will launch in 2023",
    "Url": "https://arstechnica.com/gadgets/2022/09/chromes-new-ad-blocker-limiting-extension-platform-will-launch-in-2023/",
    "Timestamp": "2022-10-01T23:03:22",
    "Domain": "arstechnica.com",
    "Description": "If Google really wants more secure extensions, why not just police the store better?",
    "Confidence": 0.7119433
  },
  {
    "Title": "Gaze – The Missing Input Device for Magical VR Experiences",
    "Url": "https://mlajtos.mu/posts/gaze-contingency",
    "Timestamp": "2022-10-01T23:03:16",
    "Domain": "mlajtos.mu",
    "Description": "So you want to shoot lasers from your eyes, hmm?",
    "Confidence": 0.9717287
  },
  {
    "Title": "Django 4 form rendering using Tailwind without Node or crispy",
    "Url": "https://www.joseferben.com/posts/django-4-form-tailwind-without-node-crispy/",
    "Timestamp": "2022-10-01T23:03:15",
    "Domain": "www.joseferben.com",
    "Description": "Since Django 4, form rendering with Tailwind can be used to render beautiful forms without using Node or any other packages like django-crispy-forms. All you need is the Tailwind CLI binary and django-widget-tweaks.",
    "Confidence": 0.99343264
  },
  {
    "Title": "TurtleWare",
    "Url": "https://turtleware.eu/posts/Buffering-Output.html",
    "Timestamp": "2022-10-01T23:03:15",
    "Domain": "turtleware.eu",
    "Description": "Tagged as lisp, output, buffering",
    "Confidence": 0.9902487
  },
  {
    "Title": "You should write bad code",
    "Url": "https://davidamos.dev/write-bad-code/",
    "Timestamp": "2022-10-01T23:03:15",
    "Domain": "davidamos.dev",
    "Description": "How to embrace absurdity and unlock more creative coding",
    "Confidence": 0.97722137
  },
  {
    "Title": "Why You Should Rethink Using Wrist Rests",
    "Url": "https://lunecake.com/wrist-rests.html",
    "Timestamp": "2022-10-01T23:03:14",
    "Domain": "lunecake.com",
    "Description": "The information provided on this blog post does not, and is not intended to, constitute medical advice; instead, all information, content, and materials available on this site are for general informational purposes only.",
    "Confidence": 0.9145094
  },
  {
    "Title": "extending Go backward compatibility · Discussion #55090 · golang/go",
    "Url": "https://github.com/golang/go/discussions/55090",
    "Timestamp": "2022-10-01T18:01:42",
    "Domain": "github.com",
    "Description": "This discussion is about backward compatibility, meaning new versions of Go compiling older Go code. For the problem of old versions of Go compiling newer Go code, see this other discussion about f...",
    "Confidence": 0.9907028
  }
]