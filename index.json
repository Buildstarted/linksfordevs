[
  {
    "Title": "Chronotrains - Europe Train Map",
    "Url": "https://www.chronotrains.com/en",
    "Timestamp": "2024-12-28T20:01:45",
    "Domain": "www.chronotrains.com",
    "Description": "Visualize where you can travel by train in Europe on this interactive map.",
    "Confidence": 0.7672463
  },
  {
    "Title": "Using the AI Dev Gallery to Create a Windows Application with AI - Nick's .NET Travels",
    "Url": "https://nicksnettravels.builttoroam.com/ai-dev-gallery/",
    "Timestamp": "2024-12-28T19:01:27",
    "Domain": "nicksnettravels.builttoroam.com",
    "Description": "Recently, Microsoft announced an open-sourced project that they’ve been working on, AI Dev Gallery. Whilst it’s not available on the Microsoft Store as an app you can download, it’s easy enough to clone the repository and run the app. In this post we’ll use the AI Dev Gallery to build a simple Windows application that ... Read more",
    "Confidence": 0.9736003
  },
  {
    "Title": "Liberating Wi-Fi on the ESP32",
    "Url": "https://media.ccc.de/v/38c3-liberating-wi-fi-on-the-esp32",
    "Timestamp": "2024-12-28T15:01:42",
    "Domain": "media.ccc.de",
    "Description": "Reverse engineering the Wi-Fi peripheral of the ESP32 to build an open source Wi-Fi stack.\n\nDuring the 38c3, there are probably multipl...",
    "Confidence": 0.83807653
  },
  {
    "Title": "Debugging memory corruption: Who wrote ‘2’ into my stack?!",
    "Url": "https://unity.com/blog/engine-platform/debugging-memory-debugging-memory-corruption-who-wrote-2-into-my-stack-who-the-hell",
    "Timestamp": "2024-12-28T08:01:33",
    "Domain": "unity.com",
    "Description": "Several weeks ago we received a bug report from a customer that said their game was crashing when using IL2CPP scripting backend. QA verified the bug and assigned it to me for fixing. The project was quite big (although far from the largest ones); it took 40 minutes to build on my machine. The instructions on the bug report said: “Play the game for 5-10 minutes until it crashes”. Sure enough, after following instructions, I observed a crash. I fired up WinDbg ready to nail it down. Unfortunately, the stack trace was bogus:\n0:049&gt; k\n# Child-SP RetAddr Call Site\n00 00000022`e25feb10 00000000`00000010 0x00007ffa`00000102\n0:050&gt; u 0x00007ffa`00000102 L10\n00007ffa`00000102 ?? ???\n^ Memory access error in 'u 0x00007ffa`00000102 l10'\nClearly, it tried executing an invalid memory address. Although the stacktrace had been corrupted, I was hoping that only a part of the whole stack got corrupted and that I should be able to reconstruct it if I look at memory contents past the stack pointer register. Surely enough, that gave me an idea where to look next:\n0:049&gt; dps @rsp L200\n...............\n00000022`e25febd8 00007ffa`b1fdc65c ucrtbased!heap_alloc_dbg+0x1c [d:\\th\\minkernel\\crts\\ucrt\\src\\appcrt\\heap\\debug_heap.cpp @ 447]\n00000022`e25febe0 00000000`00000004\n00000022`e25febe8 00000022`00000001\n00000022`e25febf0 00000022`00000000\n00000022`e25febf8 00000000`00000000\n00000022`e25fec00 00000022`e25fec30\n00000022`e25fec08 00007ffa`99b3d3ab UnityPlayer!std::_Vector_alloc&lt;std::_Vec_base_types&lt;il2cpp::os::PollRequest,std::allocator&lt;il2cpp::os::PollRequest&gt; &gt; &gt;::_Get_data+0x2b [ c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\vector @ 642]\n00000022`e25fec10 00000022`e25ff458\n00000022`e25fec18 cccccccc`cccccccc\n00000022`e25fec20 cccccccc`cccccccc\n00000022`e25fec28 00007ffa`b1fdf54c ucrtbased!_calloc_dbg+0x6c [d:\\th\\minkernel\\crts\\ucrt\\src\\appcrt\\heap\\debug_heap.cpp @ 511]\n00000022`e25fec30 00000000`00000010\n00000022`e25fec38 00007ffa`00000001\n...............\n00000022`e25fec58 00000000`00000010\n00000022`e25fec60 00000022`e25feca0\n00000022`e25fec68 00007ffa`b1fdb69e ucrtbased!calloc+0x2e [d:\\th\\minkernel\\crts\\ucrt\\src\\appcrt\\heap\\calloc.cpp @ 25]\n00000022`e25fec70 00000000`00000001\n00000022`e25fec78 00000000`00000010\n00000022`e25fec80 cccccccc`00000001\n00000022`e25fec88 00000000`00000000\n00000022`e25fec90 00000022`00000000\n00000022`e25fec98 cccccccc`cccccccc\n00000022`e25feca0 00000022`e25ff3f0\n00000022`e25feca8 00007ffa`99b3b646 UnityPlayer!il2cpp::os::SocketImpl::Poll+0x66 [ c:\\users\\tautvydas\\builds\\bin2\\il2cppoutputproject\\il2cpp\\libil2cpp\\os\\win32\\socketimpl.cpp @ 1429]\n00000022`e25fecb0 00000000`00000001\n00000022`e25fecb8 00000000`00000010\n...............\n00000022`e25ff3f0 00000022`e25ff420\n00000022`e25ff3f8 00007ffa`99c1caf4 UnityPlayer!il2cpp::os::Socket::Poll+0x44 [ c:\\users\\tautvydas\\builds\\bin2\\il2cppoutputproject\\il2cpp\\libil2cpp\\os\\socket.cpp @ 324]\n00000022`e25ff400 00000022`e25ff458\n00000022`e25ff408 cccccccc`ffffffff\n00000022`e25ff410 00000022`e25ff5b4\n00000022`e25ff418 00000022`e25ff594\n00000022`e25ff420 00000022`e25ff7e0\n00000022`e25ff428 00007ffa`99b585f8 UnityPlayer!il2cpp::vm::SocketPollingThread::RunLoop+0x268 [ c:\\users\\tautvydas\\builds\\bin2\\il2cppoutputproject\\il2cpp\\libil2cpp\\vm\\threadpool.cpp @ 452]\n00000022`e25ff430 00000022`e25ff458\n00000022`e25ff438 00000000`ffffffff\n...............\n00000022`e25ff7d8 00000022`e25ff6b8\n00000022`e25ff7e0 00000022`e25ff870\n00000022`e25ff7e8 00007ffa`99b58d2c UnityPlayer!il2cpp::vm::SocketPollingThreadEntryPoint+0xec [ c:\\users\\tautvydas\\builds\\bin2\\il2cppoutputproject\\il2cpp\\libil2cpp\\vm\\threadpool.cpp @ 524]\n00000022`e25ff7f0 00007ffa`9da83610 UnityPlayer!il2cpp::vm::g_SocketPollingThread\n00000022`e25ff7f8 00007ffa`99b57700 UnityPlayer!il2cpp::vm::FreeThreadHandle [ c:\\users\\tautvydas\\builds\\bin2\\il2cppoutputproject\\il2cpp\\libil2cpp\\vm\\threadpool.cpp @ 488]\n00000022`e25ff800 00000000`0000106c\n00000022`e25ff808 cccccccc`cccccccc\n00000022`e25ff810 00007ffa`9da83610 UnityPlayer!il2cpp::vm::g_SocketPollingThread\n00000022`e25ff818 000001c4`1705f5c0\n00000022`e25ff820 cccccccc`0000106c\n...............\n00000022`e25ff860 00005eaa`e9a6af86\n00000022`e25ff868 cccccccc`cccccccc\n00000022`e25ff870 00000022`e25ff8d0\n00000022`e25ff878 00007ffa`99c63b52 UnityPlayer!il2cpp::os::Thread::RunWrapper+0xd2 [ c:\\users\\tautvydas\\builds\\bin2\\il2cppoutputproject\\il2cpp\\libil2cpp\\os\\thread.cpp @ 106]\n00000022`e25ff880 00007ffa`9da83610 UnityPlayer!il2cpp::vm::g_SocketPollingThread\n00000022`e25ff888 00000000`00000018\n00000022`e25ff890 cccccccc`cccccccc\n...............\n00000022`e25ff8a8 000001c4`15508c90\n00000022`e25ff8b0 cccccccc`00000002\n00000022`e25ff8b8 00007ffa`99b58c40 UnityPlayer!il2cpp::vm::SocketPollingThreadEntryPoint [ c:\\users\\tautvydas\\builds\\bin2\\il2cppoutputproject\\il2cpp\\libil2cpp\\vm\\threadpool.cpp @ 494]\n00000022`e25ff8c0 00007ffa`9da83610 UnityPlayer!il2cpp::vm::g_SocketPollingThread\n00000022`e25ff8c8 000001c4`155a5890\n00000022`e25ff8d0 00000022`e25ff920\n00000022`e25ff8d8 00007ffa`99c19a14 UnityPlayer!il2cpp::os::ThreadStartWrapper+0x54 [ c:\\users\\tautvydas\\builds\\bin2\\il2cppoutputproject\\il2cpp\\libil2cpp\\os\\win32\\threadimpl.cpp @ 31]\n00000022`e25ff8e0 000001c4`155a5890\n...............\n00000022`e25ff900 cccccccc`cccccccc\n00000022`e25ff908 00007ffa`99c63a80 UnityPlayer!il2cpp::os::Thread::RunWrapper [ c:\\users\\tautvydas\\builds\\bin2\\il2cppoutputproject\\il2cpp\\libil2cpp\\os\\thread.cpp @ 80]\n00000022`e25ff910 000001c4`155a5890\n...............\n00000022`e25ff940 000001c4`1e0801b0\n00000022`e25ff948 00007ffa`e6858102 KERNEL32!BaseThreadInitThunk+0x22\n00000022`e25ff950 000001c4`1e0801b0\n00000022`e25ff958 00000000`00000000\n00000022`e25ff960 00000000`00000000\n00000022`e25ff968 00000000`00000000\n00000022`e25ff970 00007ffa`99c199c0 UnityPlayer!il2cpp::os::ThreadStartWrapper [ c:\\users\\tautvydas\\builds\\bin2\\il2cppoutputproject\\il2cpp\\libil2cpp\\os\\win32\\threadimpl.cpp @ 26]\n00000022`e25ff978 00007ffa`e926c5b4 ntdll!RtlUserThreadStart+0x34\n00000022`e25ff980 00007ffa`e68580e0 KERNEL32!BaseThreadInitThunk\nHere’s a rough reconstructed stacktrace:\n00000022`e25febd8 00007ffa`b1fdc65c ucrtbased!heap_alloc_dbg+0x1c [...\\appcrt\\heap\\debug_heap.cpp @ 447]\n00000022`e25fec28 00007ffa`b1fdf54c ucrtbased!_calloc_dbg+0x6c [...\\appcrt\\heap\\debug_heap.cpp @ 511]\n00000022`e25fec68 00007ffa`b1fdb69e ucrtbased!calloc+0x2e [...\\appcrt\\heap\\calloc.cpp @ 25]\n00000022`e25feca8 00007ffa`99b3b646 UnityPlayer!il2cpp::os::SocketImpl::Poll+0x66 [...\\libil2cpp\\os\\win32\\socketimpl.cpp @ 1429]\n00000022`e25ff3f8 00007ffa`99c1caf4 UnityPlayer!il2cpp::os::Socket::Poll+0x44 [...\\libil2cpp\\os\\socket.cpp @ 324]\n00000022`e25ff428 00007ffa`99b585f8 UnityPlayer!il2cpp::vm::SocketPollingThread::RunLoop+0x268 [...\\libil2cpp\\vm\\threadpool.cpp @ 452]\n00000022`e25ff7e8 00007ffa`99b58d2c UnityPlayer!il2cpp::vm::SocketPollingThreadEntryPoint+0xec [...\\libil2cpp\\vm\\threadpool.cpp @ 524]\n00000022`e25ff878 00007ffa`99c63b52 UnityPlayer!il2cpp::os::Thread::RunWrapper+0xd2 [...\\libil2cpp\\os\\thread.cpp @ 106]\n00000022`e25ff8d8 00007ffa`99c19a14 UnityPlayer!il2cpp::os::ThreadStartWrapper+0x54 [...\\libil2cpp\\os\\win32\\threadimpl.cpp @ 31]\n00000022`e25ff948 00007ffa`e6858102 KERNEL32!BaseThreadInitThunk+0x22\n00000022`e25ff978 00007ffa`e926c5b4 ntdll!RtlUserThreadStart+0x34\nAlright, so now I knew which thread was crashing: it was the IL2CPP runtime socket polling thread. Its responsibility is tell other threads when their sockets are ready to send or receive data. It goes like this: there’s a FIFO queue that socket poll requests get put in by other threads, the socket polling thread then dequeues these requests one by one, calls select() function and when select() returns a result, it queues a callback that was in the original request to the thread pool. So somebody is corrupting the stack badly. In order to narrow the search, I decided to put “stack sentinels” on most stack frames in that thread. Here’s how my stack sentinel was defined:\n",
    "Confidence": 0.9772488
  },
  {
    "Title": "Effective Software Teams: Islands and Autonomy - Principal Software Engineering Manager AMA",
    "Url": "https://youtube.com/watch?v=x2DfkB_9hb0",
    "Timestamp": "2024-12-28T08:01:29",
    "Domain": "youtube.com",
    "Description": "What makes an effective software engineering team?\n\nIt depends!\n\nIn all seriousness though, many factors go into running effective teams. In this stream, I wanted to focus on some examples of things I've seen work well and others that have not gone so well!\n\nAs with all livestreams, I'm looking forward to answering YOUR questions! So join me live and ask in the chat, or you can comment now and I can try to get it answered while I stream.\r\n\r\n----\r\n🔑 Membership & Subscriptions:\n- 📨 Weekly Newsletter: https://weekly.devleader.ca\n- 🏘️ Private Discord Community: https://sidestack.io/devleader\n\n🧠 Courses:\n- All Courses: https://www.devleader.ca/courses\n- Get Promoted As A Software Engineer: https://dometrain.com/course/career-getting-promoted-as-a-software-engineer/?ref=nick-cosentino\n- Nailing The Behavioral Interview: https://dometrain.com/course/career-nailing-the-behavioral-interview/?ref=nick-cosentino\n- Getting Started with C#: https://dometrain.com/course/getting-started-csharp?ref=nick-cosentino\n- Deep dive C#: https://dometrain.com/course/deep-dive-csharp?ref=nick-cosentino\n- C# Zero to Hero BUNDLE: https://dometrain.com/bundle/from-zero-to-hero-csharp/?ref=nick-cosentino\n- Reflection in .NET: https://dometrain.com/course/from-zero-to-hero-reflection-in-dotnet/?ref=nick-cosentino\n- Refactoring For C# Devs: https://dometrain.com/course/from-zero-to-hero-refactoring-for-csharp-developers?ref=nick-cosentino\n- [FREE] Intro to Software Development: https://www.youtube.com/playlist?list=PLzATctVhnsggb3lj53T8fJSK6LJQFUyKS\r\n\r\n🗣️ Social Media & Links:\r\n- All My Links: https://linktr.ee/devleader\r\n- Vlogs: @DevLeaderBTS @CodeCommute \r\n- Blog: https://www.devleader.ca/\r\n- TikTok: https://www.tiktok.com/@devleader\r\n- LinkedIn: https://www.linkedin.com/in/nickcosentino\r\n- Threads: https://threads.net/@dev.leader\r\n- Twitter: https://twitter.com/DevLeaderCa\r\n- Facebook: https://www.facebook.com/DevLeaderCa\r\n- Instagram: https://www.instagram.com/dev.leader\r\n- GitHub: https://github.com/ncosentino/\r\n- Twitch: https://twitch.tv/devleaderca\r\n- YouTube: https://youtube.com/@DevLeader?sub_confirmation=1\r\n\r\n❤️ Affiliations & Products/Services That I Love:\r\n- @BrandGhostAI  for all of my content creation: https://brandghost.ai\r\n- AI shorts helper Opus Clip: https://opus.pro/?via=2f9e97\r\n- VPS hosting from RackNerd: https://my.racknerd.com/aff.php?aff=9013\r\n- VPS hosting from Contabo: https://www.jdoqocy.com/click-101028632-12454592\r\n- Newsletter platform ConvertKit: https://convertkit.com/?lmref=c5X7KQ\r\n- Newsletter referral system SparkLoop: https://dash.sparkloop.app/signup?aff=9fe76c8b\r\n----\r\n#ama #askmeanything #softwareengineering #softwareengineer",
    "Confidence": 0.9916489
  },
  {
    "Title": "Notes on China",
    "Url": "https://www.dwarkeshpatel.com/p/notes-on-china",
    "Timestamp": "2024-12-28T03:01:51",
    "Domain": "www.dwarkeshpatel.com",
    "Description": "Last month, I spent 2 weeks in China - I visited Beijing, Chengdu, Dujiangyan, Chongqing, Shanghai, and Hangzho.",
    "Confidence": 0.7769824
  },
  {
    "Title": "Guide: User Defined Variables in MySQL",
    "Url": "https://nelkodev.com/en/blog/master-user-defined-variables-in-mysql/",
    "Timestamp": "2024-12-28T03:01:51",
    "Domain": "nelkodev.com",
    "Description": "Discover how to use user-defined variables in MySQL with this complete step-by-step guide. Learn how to optimize your queries and improve the performance of your database.",
    "Confidence": 0.99356395
  },
  {
    "Title": "Copy Code from CLI to LLMs",
    "Url": "https://azerkoculu.com/posts/llmcat-copy-code-from-cli-to-llms",
    "Timestamp": "2024-12-28T03:01:49",
    "Domain": "azerkoculu.com",
    "Description": "I frequently need to feed parts of my codebase to LLMs. Manually going into the directories, finding the files, and preparing them in the right format for LLMs was taking me away from what I really want to do.",
    "Confidence": 0.99548703
  },
  {
    "Title": "A founder's midlife crisis",
    "Url": "https://alexperelman.com/a-founders-midlife-crisis/",
    "Timestamp": "2024-12-28T03:01:48",
    "Domain": "alexperelman.com",
    "Description": "On paper, I was living the Silicon Valley dream – a heartwarming immigrant success story straight from the TechCrunch cookie cutter. A first generation immigrant educated at top US universities, a four time founder, my previous company had grown to doing billions in GMV, now going through YC for the second",
    "Confidence": 0.78451073
  },
  {
    "Title": "Solving Sudoku with tmux",
    "Url": "https://willhbr.net/2024/12/27/solving-sudoku-with-tmux/",
    "Timestamp": "2024-12-28T03:01:48",
    "Domain": "willhbr.net",
    "Description": "The question that everyone has been asking me since I compiled Python to run on tmux is: “can you actually do anything useful with this?”. I’m happy to report back that the answer is still no, but I can now use tmux to solve sudoku, and I can do it using a different and trickier approach than the one I used with the compiler. With projects like this, seeing is believing, so I made a quick video showing what it...",
    "Confidence": 0.99261916
  },
  {
    "Title": "Creating Impactful Data Products",
    "Url": "https://georgoulis.tech/how-to-build-data-products-that-matter",
    "Timestamp": "2024-12-28T03:01:48",
    "Domain": "georgoulis.tech",
    "Description": "Build impactful Data Products by understanding user needs, prioritizing value, and continuously improving for real-world benefits",
    "Confidence": 0.988545
  },
  {
    "Title": "The Ego-Legacy Complex: On Ancient Monuments and Modern Malaise",
    "Url": "https://www.joanwestenberg.com/the-ego-legacy-complex-on-ancient-monuments-and-modern-malaise/",
    "Timestamp": "2024-12-28T03:01:48",
    "Domain": "www.joanwestenberg.com",
    "Description": "A handful of years ago, I visited the Roman Forum in Mérida, Spain. And I found myself contemplating a peculiar fact: I was standing among ruins that had survived longer than most modern nations have existed. These towering columns had watched Spain become Spain, seen the Moors arrive and leave,",
    "Confidence": 0.7360015
  },
  {
    "Title": "Learning Solver Design: Automating Factorio Balancers",
    "Url": "https://gianlucaventurini.com/posts/2024/factorio-sat",
    "Timestamp": "2024-12-28T03:01:48",
    "Domain": "gianlucaventurini.com",
    "Description": "I built a Factorio belt balancer solver. From tiny 2x2 grids to a massive 16x16 monster, every step revealed new solver tricks, numeric hiccups, and devious debugging puzzles.",
    "Confidence": 0.97805
  },
  {
    "Title": "On the Structure of Neural Embeddings",
    "Url": "https://seanpedersen.github.io/posts/structure-of-neural-latent-space",
    "Timestamp": "2024-12-28T03:01:48",
    "Domain": "seanpedersen.github.io",
    "Description": "Another place for thought infusion",
    "Confidence": 0.9722326
  },
  {
    "Title": "Unix Time and a Modest Proposal",
    "Url": "https://www.johndcook.com/blog/2024/12/27/unix-time/",
    "Timestamp": "2024-12-28T03:01:48",
    "Domain": "www.johndcook.com",
    "Description": "Why Unix time is not exactly what it is often described to be, and a proposal for fixing it.",
    "Confidence": 0.9376597
  },
  {
    "Title": "matthewsinclair.com · Intelligence. Innovation. Leadership. Influence.",
    "Url": "https://matthewsinclair.com/blog/0173-52-things-i-learned-in-2024",
    "Timestamp": "2024-12-28T03:01:48",
    "Domain": "matthewsinclair.com",
    "Description": "Source: Photo by Kajetan Sumila on Unsplash",
    "Confidence": 0.9722326
  },
  {
    "Title": "openai-structured-outputs-are-really-useful - Chad Nauseam Home",
    "Url": "https://chadnauseam.com/coding/ai/openai-structured-outputs-are-really-useful",
    "Timestamp": "2024-12-28T03:01:47",
    "Domain": "chadnauseam.com",
    "Description": "openai-structured-outputs-are-really-useful - Chad Nauseam Home",
    "Confidence": 0.9904292
  },
  {
    "Title": "How to add metaprogramming to Gleam – lpil.uk",
    "Url": "https://lpil.uk/blog/how-to-add-metaprogramming-to-gleam/",
    "Timestamp": "2024-12-28T03:01:47",
    "Domain": "lpil.uk",
    "Description": "From the keyboard of Louis Pilfold",
    "Confidence": 0.9986243
  },
  {
    "Title": "12 Days of EXO",
    "Url": "https://blog.exolabs.net/day-2/",
    "Timestamp": "2024-12-28T03:01:47",
    "Domain": "blog.exolabs.net",
    "Description": "12 Days of Truly Open Innovation",
    "Confidence": 0.99760264
  },
  {
    "Title": "Browsers are absolutely unusable | KorigamiK",
    "Url": "https://korigamik.dev.ar/blog/browsers_are_unsable/",
    "Timestamp": "2024-12-28T03:01:46",
    "Domain": "korigamik.dev.ar",
    "Description": "A rant on the modern web browser usability for power users.",
    "Confidence": 0.9847879
  },
  {
    "Title": "Why OpenAI’s Structure Must Evolve To Advance Our Mission",
    "Url": "https://openai.com/index/why-our-structure-must-evolve-to-advance-our-mission",
    "Timestamp": "2024-12-28T02:01:29",
    "Domain": "openai.com",
    "Description": "A stronger non-profit supported by the for-profit’s success.",
    "Confidence": 0.9177063
  },
  {
    "Title": "PlasticList",
    "Url": "https://www.plasticlist.org/report",
    "Timestamp": "2024-12-28T02:01:29",
    "Domain": "www.plasticlist.org",
    "Description": "Data on plastic chemicals in Bay Area foods",
    "Confidence": 0.9111623
  },
  {
    "Title": "GitHub - DrewThomasson/ebook2audiobook: Convert ebooks to audiobooks with chapters and metadata using dynamic AI models and voice cloning. Supports 1,107+ languages!",
    "Url": "https://github.com/DrewThomasson/ebook2audiobook",
    "Timestamp": "2024-12-28T01:01:39",
    "Domain": "github.com",
    "Description": "Convert ebooks to audiobooks with chapters and metadata using dynamic AI models and voice cloning. Supports 1,107+ languages! - DrewThomasson/ebook2audiobook",
    "Confidence": 0.9255204
  },
  {
    "Title": "What Rewriting a 40-Year-Old Project Taught Me About Software Development",
    "Url": "https://www.milanjovanovic.tech/blog/what-rewriting-a-40-year-old-project-taught-me-about-software-development",
    "Timestamp": "2024-12-28T01:01:38",
    "Domain": "www.milanjovanovic.tech",
    "Description": "When tasked with modernizing a 40-year-old manufacturing system written in APL, I faced both technical complexity and organizational challenges that shaped my understanding of successful software development. This article shares key lessons learned during a four-year journey of rewriting critical legacy code while keeping a $10M business running smoothly.",
    "Confidence": 0.9908598
  },
  {
    "Title": "Lasering Incidents",
    "Url": "https://xkcd.com/3030/",
    "Timestamp": "2024-12-27T23:01:40",
    "Domain": "xkcd.com",
    "Description": "",
    "Confidence": 0.98151064
  }
]