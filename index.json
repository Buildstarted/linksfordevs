[
  {
    "Title": "Razor Pages And Bootstrap - Modal Master Details",
    "Url": "https://www.mikesdotnetting.com/article/349/razor-pages-and-bootstrap-modal-master-details",
    "Timestamp": "2023-10-10T09:03:46",
    "Domain": "www.mikesdotnetting.com",
    "Description": "This is the first in a series of posts exploring how to use some of the \ncomponents provided by Bootstrap within a database-driven Razor Pages web \napplication. In this article, I look at using the Bootstrap Modal in a \nMaster/Details scenario, to display the details of the selected record in a \nmaster list.",
    "Confidence": 0.985281
  },
  {
    "Title": "Understand the .NET Support Lifecycle",
    "Url": "https://youtube.com/watch?v=A0HlpRvSRpU",
    "Timestamp": "2023-10-10T09:03:44",
    "Domain": "youtube.com",
    "Description": "Learn the lifecycle adopted by Microsoft for providing support to versions of .NET. You can use this knowledge to plan your projects as you become a more sen...",
    "Confidence": 0.9213404
  },
  {
    "Title": "Unlocking CI/CD for .NET Apps on Cloud #shorts",
    "Url": "https://youtube.com/watch?v=QGwkiWMSuM0",
    "Timestamp": "2023-10-10T09:03:44",
    "Domain": "youtube.com",
    "Description": "Unlocking CI/CD for .NET Apps on Cloud #shorts üñ•Ô∏è‚ú® Support me on Patreon to access the source code:https://www.patreon.com/mohamadlawandLet us connect:üåç  M...",
    "Confidence": 0.9214513
  },
  {
    "Title": "How to force reload cached JSON Schemas in Visual Studio",
    "Url": "https://blog.elmah.io/how-to-force-reload-cached-json-schemas-in-visual-studio/",
    "Timestamp": "2023-10-10T08:02:15",
    "Domain": "blog.elmah.io",
    "Description": "Visual Studio caches JSON Schema files used for IntelliSense. Learn how to force reload a schema if Visual Studio doesn't pick up the changes.",
    "Confidence": 0.98707926
  },
  {
    "Title": "148624 - Tooltips persist in foreground when Firefox is in background",
    "Url": "https://bugzilla.mozilla.org/show_bug.cgi?id=148624",
    "Timestamp": "2023-10-10T07:02:37",
    "Domain": "bugzilla.mozilla.org",
    "Description": "RESOLVED (fanzhuyifan+github) in Core - XUL. Last updated 2023-10-09.",
    "Confidence": 0.9907881
  },
  {
    "Title": "String Interpolation in C# (Covers C# 10 and C# 11)",
    "Url": "https://www.dotnetcurry.com/csharp/string-interpolation-csharp-10-11",
    "Timestamp": "2023-10-10T06:01:58",
    "Domain": "www.dotnetcurry.com",
    "Description": "This tutorial explores the evolution of string interpolation in C# from its inception to the latest enhancements. This guide delves into its features, showcasing its readability, conciseness, and flexibility. Read this article to stay updated with the most beloved feature of C# and enhance your coding experience.",
    "Confidence": 0.99144506
  },
  {
    "Title": "Create an ASP.NET Core backgroundservice that runs at regular intervals using PeriodicTimer",
    "Url": "https://bartwullems.blogspot.com/2023/10/create-aspnet-core-backgroundservice.html",
    "Timestamp": "2023-10-10T06:01:55",
    "Domain": "bartwullems.blogspot.com",
    "Description": "Today I had to implement an ASP.NET Core backgroundservice that need to execute at certain intervals. Before .NET 6 I would have used Task.D...",
    "Confidence": 0.99275655
  },
  {
    "Title": "Quick Tip: Decorators in TypeScript ‚Äî SitePoint",
    "Url": "https://www.sitepoint.com/decorators-in-typescript/",
    "Timestamp": "2023-10-10T06:01:55",
    "Domain": "www.sitepoint.com",
    "Description": "Decorators let us craft a function that tweaks the behavior of a class and its methods. They're now ready for the prime time in TypeScript 5.",
    "Confidence": 0.99169487
  },
  {
    "Title": "DNS records for hn.algolia.com",
    "Url": "https://www.nslookup.io/domains/hn.algolia.com/dns-records/",
    "Timestamp": "2023-10-10T04:02:24",
    "Domain": "www.nslookup.io",
    "Description": "These are the uncached A, AAAA, CNAME, TXT, NS, MX and SOA records for hn.algolia.com. Other DNS records are also available.",
    "Confidence": 0.9037248
  },
  {
    "Title": "Medieval staircases were NOT built going clockwise for the defender‚Äôs advantage",
    "Url": "https://fakehistoryhunter.net/2023/10/09/medieval-staircases-were-not-built-going-clockwise-for-the-defenders-advantage/",
    "Timestamp": "2023-10-10T04:02:24",
    "Domain": "fakehistoryhunter.net",
    "Description": "This story has been making the rounds on the internet with a claim that you‚Äôve probably been told during visits to castles, but, it‚Äôs not true. In short the idea is that it‚Äôs easi‚Ä¶",
    "Confidence": 0.7806842
  },
  {
    "Title": "Soft skill books that will make you a better developer",
    "Url": "https://addyosmani.com/blog/soft-skills-books/",
    "Timestamp": "2023-10-10T03:03:32",
    "Domain": "addyosmani.com",
    "Description": "Explore takeaways from a curated selections of leadership and productivity books, handpicked by Addy Osmani. Unlock your potential with titles like The Effec...",
    "Confidence": 0.9885383
  },
  {
    "Title": "The most successful people are those who can talk to others - thesis about the social skills needed for working with modern technology | Adam Trojanczyk",
    "Url": "https://trojanczyk.eu/social-skills-needed-for-modern-technology/",
    "Timestamp": "2023-10-10T00:02:54",
    "Domain": "trojanczyk.eu",
    "Description": "57% menad≈ºer√≥w wy≈ºszego szczebla twierdzi, ≈ºe kompetencje spo≈Çeczne sƒÖ wa≈ºniejsze ni≈º techniczne. Wprawdzie wiƒôkszo≈õƒá ludzi jest zatrudniana ze wzglƒôdu na swoje umiejƒôtno≈õci techniczne, ale to ich umiejƒôtno≈õci ludzkie zapewniajƒÖ im \"trwa≈Ço≈õƒá kariery‚Äù.",
    "Confidence": 0.92237
  },
  {
    "Title": "A primer on formal verification and TLA+ ‚Äî Jack Vanlightly",
    "Url": "https://jack-vanlightly.com/blog/2023/10/10/a-primer-on-formal-verification-and-tla",
    "Timestamp": "2023-10-10T00:02:52",
    "Domain": "jack-vanlightly.com",
    "Description": "The aim of this post is to give the reader an understanding of why formal methods exist and an introduction to TLA+ including the conceptual model of how it represents data and time. From here, you should be able to go out and read more advanced content on TLA+ with some foundational idea of what it",
    "Confidence": 0.99340194
  },
  {
    "Title": "On Experience ",
    "Url": "https://www.samjarman.co.nz/blog/on-experience",
    "Timestamp": "2023-10-10T00:02:52",
    "Domain": "www.samjarman.co.nz",
    "Description": "An experienced software engineer, or any professional can feel just as lucky as they come to a problem they've seen before, and solve it swiftly.",
    "Confidence": 0.9914452
  },
  {
    "Title": "Notes on Ghana",
    "Url": "https://mattlakeman.org/2023/10/09/notes-on-ghana/",
    "Timestamp": "2023-10-10T00:02:51",
    "Domain": "mattlakeman.org",
    "Description": "I spent 12 days in Ghana, specifically in Accra, Kumasi, Cape Coast, and Mole National Park. These are my notes, though this essay is more like Notes on Saudi Arabia with a bigger emphasis on the h‚Ä¶",
    "Confidence": 0.82651156
  },
  {
    "Title": "New Unit Tests Need to Fail (Running the Old Code) ‚Äì Alex Kirk",
    "Url": "https://alex.kirk.at/2023/10/09/new-unit-tests-need-to-fail-running-the-old-code/",
    "Timestamp": "2023-10-10T00:02:51",
    "Domain": "alex.kirk.at",
    "Description": "When possible, I very much recommend adding unit tests to a Pull Request when you fix something as a way to prevent that it breaks again in future. This is no news.",
    "Confidence": 0.99599916
  },
  {
    "Title": "Organizing system configs with NixOS",
    "Url": "https://johns.codes/blog/organizing-system-configs-with-nixos",
    "Timestamp": "2023-10-10T00:02:51",
    "Domain": "johns.codes",
    "Description": "How I organize and manage my system and user configs with NixOS and homemanager",
    "Confidence": 0.9988012
  },
  {
    "Title": "Crinkle Crankle Optimization",
    "Url": "https://vladfeinberg.com/2023/10/08/serpentine-wall.html",
    "Timestamp": "2023-10-10T00:02:51",
    "Domain": "vladfeinberg.com",
    "Description": "Vlad's Blog",
    "Confidence": 0.98535603
  },
  {
    "Title": "Why AutoGPT engineers ditched vector databases | Dariusz Semba",
    "Url": "https://dariuszsemba.com/blog/why-autogpt-engineers-ditched-vector-databases/",
    "Timestamp": "2023-10-10T00:02:51",
    "Domain": "dariuszsemba.com",
    "Description": "AutoGPT decided to drop the support for vector databases: Pinecone, Milvus, Redis, Weaviate - all gone. What has happened to the original idea of efficiently storing agent's memories?",
    "Confidence": 0.98587126
  },
  {
    "Title": "[Building Engage] #4. Avatars",
    "Url": "https://obem.be/2023/10/08/avatars.html",
    "Timestamp": "2023-10-10T00:02:51",
    "Domain": "obem.be",
    "Description": "Features like avatars look trivial in products with user profiles, but most times, they are not. (Is anything actually trivial?).  It‚Äôs even more interesting, as with Engage, when users can‚Äôt uploa...",
    "Confidence": 0.9987476
  },
  {
    "Title": "Let‚Äôs design a new form element",
    "Url": "https://merely.xyz/blog/2023/001-lets-design-a-new-form-element/",
    "Timestamp": "2023-10-10T00:02:51",
    "Domain": "merely.xyz",
    "Description": "< Back to merely.xyz",
    "Confidence": 0.9728106
  },
  {
    "Title": "Fake It ‚ÄôTil You Fake It",
    "Url": "https://pxlnv.com/blog/fake-it-til-you-fake-it/",
    "Timestamp": "2023-10-10T00:02:50",
    "Domain": "pxlnv.com",
    "Description": "Since Google‚Äôs introduction of its Pixel 8 phones earlier this month, it has been interesting and a little amusing to me to read the reactions to its image manipulation tools. It feels like we have been asking the same questions every year ‚Äî questions like what is a photograph, anyway?, and has technology gone too [‚Ä¶]",
    "Confidence": 0.797945
  },
  {
    "Title": "Money",
    "Url": "https://notes.ghed.in/posts/2023/money/",
    "Timestamp": "2023-10-10T00:02:50",
    "Domain": "notes.ghed.in",
    "Description": "Wired‚Äôs Kate Knibbs discovered a bizarre phenomenon on YouTube: channels that read obituaries of ordinary people, in large volumes.",
    "Confidence": 0.89198637
  },
  {
    "Title": "How I do side projects | Chun Rapeepat",
    "Url": "https://chunrapeepat.com/blog/side-projects/",
    "Timestamp": "2023-10-10T00:02:50",
    "Domain": "chunrapeepat.com",
    "Description": "Over the past years, I have been building and launching several of projects. Many people have asked about my approach. So, I decided that it would be beneficial to share my learning and the personal system I use, from coming up with ideas to releasing the MVP.",
    "Confidence": 0.99717796
  },
  {
    "Title": "Profitable Parenting",
    "Url": "https://taylor.town/profitable-parenting",
    "Timestamp": "2023-10-10T00:02:50",
    "Domain": "taylor.town",
    "Description": "This guide will teach you how to transform your children from liabilities into assets.",
    "Confidence": 0.79289705
  },
  {
    "Title": "Full precision floating-point summation in C# ¬∑ Anthony Lloyd",
    "Url": "http://anthonylloyd.github.io/blog/2023/10/09/fsum",
    "Timestamp": "2023-10-09T23:02:33",
    "Domain": "anthonylloyd.github.io",
    "Description": "Full precision floating-point summation in C#",
    "Confidence": 0.8763782
  },
  {
    "Title": "Language Acquisition",
    "Url": "https://xkcd.com/2839/",
    "Timestamp": "2023-10-09T22:02:40",
    "Domain": "xkcd.com",
    "Description": "",
    "Confidence": 0.98151064
  },
  {
    "Title": "VS Code Update Improves Testing with GitHub Copilot AI -- Visual Studio Magazine",
    "Url": "https://visualstudiomagazine.com/articles/2023/10/09/vs-code-1-83.aspx",
    "Timestamp": "2023-10-09T21:02:15",
    "Domain": "visualstudiomagazine.com",
    "Description": "  Microsoft improved testing with the GitHub Copilot Chat extension for Visual Studio Code as part of the regular monthly update to the super-popular code editor.\n",
    "Confidence": 0.83577377
  },
  {
    "Title": "Episode 475 - Diagrid on AKS",
    "Url": "https://azpodcast.azurewebsites.net/post/Episode-475-Diagrid-on-AKS",
    "Timestamp": "2023-10-09T21:02:14",
    "Domain": "azpodcast.azurewebsites.net",
    "Description": "October 9, 2023",
    "Confidence": 0.9652223
  },
  {
    "Title": "Zimaboard: the closest thing to my dream home server setup",
    "Url": "https://ounapuu.ee/posts/2023/10/09/zimaboard/",
    "Timestamp": "2023-10-09T21:02:14",
    "Domain": "ounapuu.ee",
    "Description": "I gave in to my impulses and bought myself a small single board computer to be my power-efficient home server, here's how it went.",
    "Confidence": 0.9833882
  },
  {
    "Title": "things i just don't like about git",
    "Url": "https://cohost.org/tef/post/3009746-things-i-just-don-t",
    "Timestamp": "2023-10-09T21:02:14",
    "Domain": "cohost.org",
    "Description": "a short and incomplete list, of no use to anyone.\n\nlook, the modern git maintainers are doing god's work, and have shaved off so, so many rough edges. i don't have to --ff-only or set up precomposeunicode, and for all the other painful moments there's often a command flag to make it less awful.\n\nat the same time, git sucks in ways small and large, and many of the faults are now foundational. let me explain:\n\n----------------------------------------\n\nsha1 was a bad choice back then, too\n\nyes, sha1 was already considered deprecated by the crypto community before git began using it, and yes, it was known that any cryptographic primitive has a lifespan, and any software relying on it should prepare for the worst\n\ngit chose to just use the worst option from day one, and that's not the problem. the problem is that git's use of sha1 is very hard to change, as certain details are baked in to the on disk formats.\n\nthe moral here is \"treat your identifiers as opaque strings\" along with \"sometimes a sha1: prefix doesn't hurt anyone\"\n\nanyway, where we we? ah. on disk formats\n\nevery single data format in git is unique\n\nevery single data structure serialized to disk has been crafted by the finest code artisans known to man, which is why one of the git extensions involves \"sneaking things in after a filename that ends with a \u0000 null\" because \"just use json\" is a bit too much to bear\n\ni understand the distaste for xml and even json sucks at timestamps, but well, there's no good reason why git couldn't use one format for almost everything, except that git's written in C and so therefore we can't have nice things.\n\ndon't change your email, or your name\n\ni guess when you read lkml, the notion of spam isn't too worrying, but putting names and emails into every commit means any time someone changes name, or changes email, they might as well be a whole different person to the repo.\n\nsure enough, when you store names in the files, you have to rewrite history when someone changes email address, but in another world, you'd use a uuid and a file called .gitauthors that maps one to the other‚Äîand you wouldn't even have to put email addresses in the file, you could just put github urls or similar.\n\non a similar note, it would be nice to be able to have multiple authors in a commit message. it's one of the few times in git that there's only one of a thing allowed.\n\nthere's two different mechanisms for almost every feature\n\nnot that there's many features, but it's worth noting that submodules and lfs work in entirely different ways.\n\nsubmodules? they're a file in the repo with a special type inside the trees, git knows when checking out that the file is special, and could run other commands. it then does not run those commands and the person using submodules begins crying.\n\nanyway.\n\nlfs? handled by a filter program defined in .gitattributes. unlike git attributes, this way allows users to actually specify behaviour, rather than hidden inside files hidden in the object store or .git directory.\n\nthe reason lfs and submodules work differently is that they're implemented at different levels of git. submodules are inside git, lfs is written atop the C tools, and only one of the mechanisms is designed for other programs to use.\n\nthere's a similar story with git commit headers and git commit trailer headers. trailers are user editable, and the built in headers are not easy to edit, change, or add to. so no-one bothers with it.\n\nthere's two ways to use git, and both of them suck too\n\ntake micro vs monorepos, it's a false choice. what you're really asking is \"how do we work around git not supporting subtree checkouts\" or \"how do we work around submodules being painful\"\n\nin a better world, git would have subtree checkouts. it would make a lot of problems moot. in an even better world, git subtrees would work, but for now we settle with using another package manager atop and praying for death.\n\non a similar note, take rebases vs merges.\n\ngit forces you to make a choice. use merge and get a noisy, but representative history. use rebases and lose some of the work, but the log is a lot easier to navigate.\n\nthe truth is we could have our cake and eat it. git for windows does \"merge rebase\" commits that preserve history during rebases: it creates a merge commit with the latest version, replays the existing commits atop\n\nwe could also have a version of git log that didn't make merges look like shit, but that's another problem altogtether.\n\nthe unix philosophy is about building toolkits, not applications\n\nlook, the idea behind the unix philosophy is simple: your tool is probably making an output file. you can use grep, diff, less, cut, and a bunch of other tools to make things go. this is pretty cool actually.\n\ngit is somewhat a poster child for the unix philosophy. it's not one big command, but lots of smaller C programs held together with bash. if you want paged output, you run less, if you want to find things, you use grep, and if you want to build a feature: just hack it up out of bash. it eschews binary formats for text, abhors captive user interfaces, and dumps almost everything in the filesystem.\n\nit's a great way to build a toolbox, but a terrible way to build tools: the error messages are weird, the problems are hard to recover from, and god help you if you run the wrong command in the wrong place.\n\nwhen it comes to adding features, you are limited: you cannot add cross cutting features. you can't have modes where some commands are valid, and some aren't. a good tool should make these things impossible. git is not a good tool, and git's architecture means that these sorts of ux decisions are near impossible to realise.\n\nin other words: have you ever accidentally committed inside a rebase? or accidentally committed a conflict? tough shit, fucko.\n\nin another world, your vcs system would know \"i'm in the rebasing mode\" and wouldn't let you shit all over the repository, but we are not in the good universe.\n\nbefore we drop the unix philosophy, there's two other points to nail to the door. firstly: git commands are named after implementation, not use, and there's absolutely no excuse for it.\n\nsecondly: flat files kinda suck if your state gets corrupted.\n\ni've been spoiled by sqlite.\n\ndid you hit control-c? bad news buddy, your repository is fucked.\n\ngit, despite being labeled a database, isn't really interested in transactions or atomicity or durability as much as you'd hope. the closest you get to a write ahead log is a reflog for branches.\n\ni'm not saying git needs to be as good as sqlite is, but it would be nice to not live in fear of accidentally corrupting my repository every time i cancel a command. at least if i do the wrong command, i have a chance of undoing my work\n\non a similar note: undo and redo would go a long, long way. even if it was just git commit --undo and it only worked 80% of the time, it would be a vast improvement on the current situation.\n\nwhich is bad, btw.\n\ngit is made from papercuts\n\nthere's bits where you can't check in an empty directory, or how you can set files to ignore but not files to include. the ignore settings should come with defaults, but don't, and an awful lot of modern git workflow is turning on a bunch of settings and flags that should have been there from the outset\n\ni didn't want to mention the unix philosophy again but when you build your software as a toolkit for automation, it's a lot harder to make breaking changes to things. users are usually a lot better at handing differences than bash scripts.\n\nusually.\n\neither way, one of the biggest reasons we can't just fix git is that we've built a small empire of bash atop of it, which falls apart if you look at it funny. there's just so much suck that's never going to go away.\n\n----------------------------------------\n\nthis is by no means a complete list, but i'm done writing it for now.\n\ngit may suck, but the alternative is the \"you never make a mistake\" source control, which is even more awful unix brain than git, so i guess i'll live with it for now.",
    "Confidence": 0.98525625
  },
  {
    "Title": "Hello world! ‚Äì My Blog",
    "Url": "https://espressocoder.com/2023/10/09/hello-world/",
    "Timestamp": "2023-10-09T19:02:31",
    "Domain": "espressocoder.com",
    "Description": "Welcome to WordPress. This is your first post. Edit or delete it, then start writing!",
    "Confidence": 0.8884955
  },
  {
    "Title": "Unraveling Razor Syntax: Introduction for Blazor Devs!",
    "Url": "https://youtube.com/watch?v=-Qsv8BiRe14",
    "Timestamp": "2023-10-09T17:02:28",
    "Domain": "youtube.com",
    "Description": "In this video, I show you the necessary Razor syntax, which you will need to start developing Blazor-based projects.00:00:00 What is Razor Syntax?00:40:20 Cr...",
    "Confidence": 0.9926095
  },
  {
    "Title": "Is there any performance advantage to marking a page read-only if I had no intention of writing to it anyway? - The Old New Thing",
    "Url": "https://devblogs.microsoft.com/oldnewthing/20231009-00/?p=108868",
    "Timestamp": "2023-10-09T15:02:36",
    "Domain": "devblogs.microsoft.com",
    "Description": "The CPU already figured it out.",
    "Confidence": 0.93857974
  },
  {
    "Title": "Get the default value of a type at runtime - G√©rald Barr√©",
    "Url": "https://www.meziantou.net/get-the-default-value-of-a-type-at-runtime.htm",
    "Timestamp": "2023-10-09T15:02:36",
    "Domain": "www.meziantou.net",
    "Description": "In this post, I describe how to get the default value of a type at runtime in .NET.",
    "Confidence": 0.9978834
  },
  {
    "Title": "Impacts Of Lack Of Sleep",
    "Url": "https://belkarx.github.io/posts/finished/Impacts%20Of%20Lack%20Of%20Sleep.html",
    "Timestamp": "2023-10-09T15:02:36",
    "Domain": "belkarx.github.io",
    "Description": "home/about-me | posts",
    "Confidence": 0.8799898
  },
  {
    "Title": "Install Xcode Versions Easily, Side-by-Side with Xcodes",
    "Url": "https://youtube.com/watch?v=Lpq3-5VdizA",
    "Timestamp": "2023-10-09T14:02:38",
    "Domain": "youtube.com",
    "Description": "Worried that your development environment will break with the new Xcode version? No more! With Xcodes you can easily manage multiple Xcode versions, side-by-...",
    "Confidence": 0.9932682
  },
  {
    "Title": "Ardour 8.0 ‚Äî What's new",
    "Url": "https://ardour.org/whatsnew.html",
    "Timestamp": "2023-10-09T14:02:37",
    "Domain": "ardour.org",
    "Description": "the open source cross-platform DAW",
    "Confidence": 0.962068
  },
  {
    "Title": "\"Don't Use Fields in C#! Use Properties Instead\" | Code Cop #003",
    "Url": "https://youtube.com/watch?v=QdfAOVk77v0",
    "Timestamp": "2023-10-09T13:02:40",
    "Domain": "youtube.com",
    "Description": "Use code TDD20 and get 20% off the brand new Test-Driven Development course on Dometrain: https://dometrain.com/course/from-zero-to-hero-test-driven-developm...",
    "Confidence": 0.9538244
  },
  {
    "Title": "US strategic company Bureau van Dijk hacked¬† - Dark Web Monitoring ¬ª Kaduu CTI ¬ª 2023",
    "Url": "https://kaduu.io/blog/2022/02/04/us-strategic-company-bureau-van-dijk-hacked/",
    "Timestamp": "2023-10-09T13:02:39",
    "Domain": "kaduu.io",
    "Description": "Bureau van Dijk is a major publisher of business information, and specialises in private company data combined with software for searching and analysing",
    "Confidence": 0.5810128
  },
  {
    "Title": "From Chaos to Cohesion: How To Organize Code For Vertical Slices",
    "Url": "https://www.devleader.ca/2023/10/09/from-chaos-to-cohesion-how-to-organize-code-for-vertical-slices/",
    "Timestamp": "2023-10-09T13:02:39",
    "Domain": "www.devleader.ca",
    "Description": "Learn how to organize code for vertical slices and use Autofac modules effectively. Discover how this improves code maintainability and enhances collaboration!",
    "Confidence": 0.995412
  },
  {
    "Title": "The Old and New Way To Delete Entities With EF Core #shorts",
    "Url": "https://youtube.com/watch?v=Cw1umgFmoys",
    "Timestamp": "2023-10-09T12:02:55",
    "Domain": "youtube.com",
    "Description": "üìå Check out my Pragmatic Clean Architecture course: https://bit.ly/3Zn41BKüöÄ Support me on Patreon to access the source code: https://www.patreon.com/milanj...",
    "Confidence": 0.9909649
  },
  {
    "Title": "Blackmagic Camera | Blackmagic Design",
    "Url": "https://www.blackmagicdesign.com/products/blackmagiccamera",
    "Timestamp": "2023-10-09T12:02:51",
    "Domain": "www.blackmagicdesign.com",
    "Description": "Introducing Digital Film for iPhone!",
    "Confidence": 0.9841144
  },
  {
    "Title": "Learn Live - Work with variable data in C# console applications",
    "Url": "https://youtube.com/watch?v=bG0Pr1tSIQk",
    "Timestamp": "2023-10-09T10:02:26",
    "Domain": "youtube.com",
    "Description": "Full series information: https://aka.ms/learnlive-get-started-with-csharpMore info here: https://aka.ms/learnlive-get-started-with-csharp-Ep4Follow on Micros...",
    "Confidence": 0.99573874
  }
]