[
  {
    "Title": "David Swenson's electrostatic \"invisible wall\" (1996)",
    "Url": "http://amasci.com/weird/unusual/e-wall.html",
    "Timestamp": "2025-01-21T23:01:44",
    "Domain": "amasci.com",
    "Description": "echisholm 5/2016\n\n\nHave a relative (sort of) who works at a 3M plant. Shit still occasionally \nhappens.\n> You can't just say that and go away!! How are you not irresistibly \n> interested in that?? I would've interrogated that relative so hard\nIt just came up in passing at Thanksgiving! I don't really know him \nthat \nwell; he's an in-law. He mentioned being able to throw small washers and \nbolts at the field and watching them get repelled. People got \ninterested, and so someone came with a voltmeter, and after throwing a \ncouple more, they checked for voltage, and there was a residual charge \nafter they finally caught on on a plastic sheet to prevent immediate \ngrounding. It also had a very slight magnetic field. It's apparently \nfairly common, but engineering hasn't come up with a solid explanation \nwhy."
  },
  {
    "Title": "Level up your Software Development Career and Become a Master and Highly Paid Technical Leader",
    "Url": "https://youtube.com/watch?v=CeISURNVeH8",
    "Timestamp": "2025-01-21T22:01:06",
    "Domain": "youtube.com",
    "Description": "Ask Me Anything and get all the answers You need to accelerate your software development career\n\nLearn the most common career mistakes software developers make\n\nDevelop your confidence and beat impostor syndrome\n\nHow to become a productive, trusted and respected software engineer\n\nHow to influence and lead effectively\n\nRegister Now https://www.productivecsharp.com/webinar/"
  },
  {
    "Title": "WinForms: Analyze This (Me in Visual Basic) - .NET Blog",
    "Url": "https://devblogs.microsoft.com/dotnet/introducing-winforms-analyzers/",
    "Timestamp": "2025-01-21T20:02:06",
    "Domain": "devblogs.microsoft.com",
    "Description": "Your WinForms code might have issues—maybe an Async call picked the wrong overload, or it’s leaking data into resource files. Time to call in a code-shrink! So, WinForms, Analyze This!"
  },
  {
    "Title": "Threads, Tasks, and Ownership: C# and Rust Concurrency Explored - Chris Woody Woodruff",
    "Url": "https://woodruff.dev/threads-tasks-and-ownership-c-and-rust-concurrency-explored/",
    "Timestamp": "2025-01-21T19:43:45",
    "Domain": "woodruff.dev",
    "Description": "Concurrency in programming can be like cooking dinner while answering emails—you’re juggling multiple tasks at once, hoping nothing burns. C# and Rust both tackle concurrency, but their approaches couldn’t be more different. C# offers a traditional multitasking toolkit with threads and async/await, while Rust rewrites the rulebook with a compiler-enforced, fearless concurrency model. Let’s see how they compare!"
  },
  {
    "Title": "Steinar H. Gunderson",
    "Url": "https://blog.sesse.net/blog/tech/2025-01-20-21-45_migrating_away_from_bcachefs.html",
    "Timestamp": "2025-01-21T19:43:44",
    "Domain": "blog.sesse.net",
    "Description": "Pretty much exactly a year ago, I posted about how I was trying out this\nbcachefs thing, being cautiously optimistic (but reminding you to keep\nbackups). Now I'm going the other way; I've converted my last bcachefs\nfilesystem to XFS, and I don't intend to look at it again in the near\nfuture."
  },
  {
    "Title": "Unique 0-click deanonymization attack targeting Signal, Discord and hundreds of platform",
    "Url": "https://gist.github.com/hackermondev/45a3cdfa52246f1d1201c1e8cdef6117",
    "Timestamp": "2025-01-21T19:43:44",
    "Domain": "gist.github.com",
    "Description": "Unique 0-click deanonymization attack targeting Signal, Discord and hundreds of platform - research.md"
  },
  {
    "Title": "Rethinking MediatR Validation: Moving from Pipeline to Domain Objects",
    "Url": "https://goatreview.com/rethinking-mediatr-pipeline-validation-pattern/",
    "Timestamp": "2025-01-21T19:43:44",
    "Domain": "goatreview.com",
    "Description": "Explore why traditional MediatR pipeline validation might be hurting your .NET application's architecture. Discover how to move validation to domain objects with value objects, following the 'Parse, Don't Validate' principle."
  },
  {
    "Title": "Building a web app with C#",
    "Url": "https://youtube.com/watch?v=05P_HUaMvMM",
    "Timestamp": "2025-01-21T19:43:29",
    "Domain": "youtube.com",
    "Description": "Turn your videos into live streams with https://restream.io\n\nLet's work on SharpSite, an open source CMS that you can contribute to and learn from.  https://github.com/FritzAndFriends/SharpSite"
  },
  {
    "Title": "Get Into FLOW Faster as a Developer",
    "Url": "https://youtube.com/watch?v=S1I9rpfcWog",
    "Timestamp": "2025-01-21T19:43:29",
    "Domain": "youtube.com",
    "Description": "💌 Free Developer Insights: https://guiferreira.me/newsletter"
  },
  {
    "Title": "Event Sourcing for .NET Developers: From Zero to Implementation",
    "Url": "https://youtube.com/watch?v=gvW9uJSFujA",
    "Timestamp": "2025-01-21T19:43:29",
    "Domain": "youtube.com",
    "Description": "Want to master Clean Architecture? Go here: https://bit.ly/3PupkOJ\nWant to unlock Modular Monoliths? Go here: https://bit.ly/3SXlzSt\nGet the source code here: https://www.patreon.com/milanjovanovic\n\nLearn the fundamentals of Event Sourcing in .NET with this beginner-friendly guide. We'll explore how to store your application's state as a sequence of events rather than just the current state. Starting with core concepts, we'll walk through modeling events, creating aggregates, applying events, implementing business logic, and building projections for efficient queries. Perfect for .NET developers looking to understand Event Sourcing patterns and their practical implementation. Code examples included.\n\nIntroduction to Event Sourcing for .NET Developers\nhttps://www.milanjovanovic.tech/blog/introduction-to-event-sourcing-for-net-developers\n\nHow To Use Domain Events To Build Loosely Coupled Systems\nhttps://www.milanjovanovic.tech/blog/how-to-use-domain-events-to-build-loosely-coupled-systems\n\nCheck out my courses:\nhttps://www.milanjovanovic.tech/courses\n\nRead my Blog here:\nhttps://www.milanjovanovic.tech/blog\n\nJoin my weekly .NET newsletter:\nhttps://www.milanjovanovic.tech\n\nChapters\n0:00 Event Sourcing introduction\n3:47 Modeling the events\n7:13 Creating the Aggregate\n10:10 Applying the Events\n14:38 Implementing the behavior\n18:16 Projections and read models"
  },
  {
    "Title": "A: Work Ethic 3 (Category Compilation) #21～#23",
    "Url": "https://youtube.com/watch?v=8NhmhM546HQ",
    "Timestamp": "2025-01-21T19:43:29",
    "Domain": "youtube.com",
    "Description": "In Category A: Work Ethic, I talk about the ways we approach and prepare for our jobs. The topics in this category apply to all lines of work, not just game development.\n\n[Index]\n0:00 Opening\n0:11 A-21 When Ideas Won't Come\n2:54 A-22 Never Get Into Fights\n5:38 A-23 Up is Down, and Down is Up\n\n\n[Playlist A: Work Ethic]\nhttps://www.youtube.com/playlist?list=PLgKCjZ2WsVLSHTbG4lQadRRtjzjARK69h"
  },
  {
    "Title": "Chemical Formulas",
    "Url": "https://xkcd.com/3040/",
    "Timestamp": "2025-01-21T03:02:01",
    "Domain": "xkcd.com",
    "Description": ""
  },
  {
    "Title": "The Trouble with Bryan Johnson",
    "Url": "https://blog.jakobschwichtenberg.com/p/the-trouble-with-bryan-johnson",
    "Timestamp": "2025-01-21T01:02:42",
    "Domain": "blog.jakobschwichtenberg.com",
    "Description": "Right now Longevity influencer Bryan Johnson is speedrunning through that famous Eric Hoffer quote:"
  },
  {
    "Title": "Sewell's Pump | The Eli Whitney Museum and Workshop",
    "Url": "https://www.eliwhitney.org/gilbert/sewells-pump",
    "Timestamp": "2025-01-21T01:02:41",
    "Domain": "www.eliwhitney.org",
    "Description": "by William W. L. Glenn, M.D."
  },
  {
    "Title": "You're Not the CEO of the Product: Rants of a PM",
    "Url": "https://scifilogan.bearblog.dev/youre-not-the-ceo-of-the-product-rants-of-a-pm/",
    "Timestamp": "2025-01-21T01:02:40",
    "Domain": "scifilogan.bearblog.dev",
    "Description": "The most common thing I hear about the Product Manager job is that you are in effect a CEO of the product. My hottest take is this is about the furthest you ..."
  },
  {
    "Title": "Modern iOS Theming with UITraitCollection",
    "Url": "https://dlo.me/archives/2025/01/20/theming-ios-apps-uitraitcollection/",
    "Timestamp": "2025-01-21T01:02:39",
    "Domain": "dlo.me",
    "Description": "Learn how to implement dynamic theming in your iOS app using `UITraitAppearance` introduced in iOS 17. This comprehensive guide covers everything from setting up a simple light and dark theme to applying trait overrides for seamless switching. Download the sample code from GitHub to get started and enhance your app's UI today."
  },
  {
    "Title": "I got a heat pump, and my energy bill went up!",
    "Url": "https://www.heatpumped.org/p/i-got-a-heat-pump-and-my-energy-bill-went-up",
    "Timestamp": "2025-01-21T01:02:39",
    "Domain": "www.heatpumped.org",
    "Description": "Heat pumps save energy, but does that mean that they save money? It’s important to understand the differences in cost between electricity and gas."
  },
  {
    "Title": "Looking Beyond HackerNews",
    "Url": "https://aien.me/looking-beyond-hackernews/",
    "Timestamp": "2025-01-21T01:02:39",
    "Domain": "aien.me",
    "Description": "A curated list of alternative tech communities and news sources for expanding your digital horizons and diversifying your daily tech reading."
  },
  {
    "Title": "Debugging An Undebuggable App",
    "Url": "https://bryce.co/undebuggable/",
    "Timestamp": "2025-01-21T01:02:39",
    "Domain": "bryce.co",
    "Description": "This app has a surprising number of anti-debugging protections. Let's figure out how to bypass them."
  },
  {
    "Title": "Designing a DSL for Terminal Interaction",
    "Url": "https://noelwelsh.com/posts/codata-interpreter-terminal/",
    "Timestamp": "2025-01-21T01:02:39",
    "Domain": "noelwelsh.com",
    "Description": "In this post we'll build a DSL for terminal interaction. The terminal is familiar to most programmers, and terminal applications are common for developer focused tools. Most terminal features are controlled by writing specially formatted text. However, applications benefit from higher-level abstractions, motivating libraries that present a more ergonomic interface1. Our implementation will showcase codata interpreters, monads, and the central role of designing for composition and reasoning."
  },
  {
    "Title": "Reverse Engineering Call Of Duty Anti-Cheat",
    "Url": "https://ssno.cc/posts/reversing-tac-1-4-2025/",
    "Timestamp": "2025-01-21T01:02:39",
    "Domain": "ssno.cc",
    "Description": "I’ve been reversing Black Ops Cold War for a while now, and I’ve finally decided to share my research regarding the user-mode anti-cheat inside the game. It’s not my intention to shame or promote cheating/bypassing of the anti-cheat, so I’ve redacted a few things.\nTo clear up any confusion, Black Ops Cold War does not have the kernel-mode component of Ricochet that Modern Warfare (2019) and later titles have. I’ll be referring to the anti-cheat as TAC (Treyarch Anti-Cheat) as the game I reversed is a Treyarch game. Also, whenever I provide function pseudocode, it will be the best I can do since the actual decompilation is super cluttered with a lot of junk/resolving code. The biggest difference between the newer games is the kernel-mode driver, while the majority of anti-cheat code is user-mode and very similar to TAC."
  },
  {
    "Title": "Calling strangers uncle and auntie",
    "Url": "https://solmaz.io/calling-strangers-uncle-and-auntie",
    "Timestamp": "2025-01-21T01:02:38",
    "Domain": "solmaz.io",
    "Description": "Cultures can be categorized across many axes, and one of them is whether you can call an older male stranger uncle or female stranger auntie. For example, calling a shopkeeper uncle might be sympathetic in Singapore, whereas doing the same in Germany (Onkel) might get a negative reaction: “I’m not your uncle”."
  },
  {
    "Title": "Testing a handful of sensors for your next DIY project",
    "Url": "https://olegtarasov.me/environmental-sensors/",
    "Timestamp": "2025-01-21T01:02:36",
    "Domain": "olegtarasov.me",
    "Description": "I test the performance of different environmental sensors for a room thermostat DIY project"
  },
  {
    "Title": "Plank Reloaded: Still Stupidly Simple",
    "Url": "https://thoughts.greyh.at/posts/plank-reloaded/",
    "Timestamp": "2025-01-21T01:02:35",
    "Domain": "thoughts.greyh.at",
    "Description": "When Plank first emerged, it promised to be the simplest dock on the planet. Today, Plank Reloaded carries that torch forward, bringing modern updates and solid Cinnamon desktop support while maintaining that same commitment to simplicity."
  },
  {
    "Title": "Programing Pipelines Using Dependent Types",
    "Url": "https://andrevidela.com/blog/2025/program-pipelines.idr/",
    "Timestamp": "2025-01-21T01:02:34",
    "Domain": "andrevidela.com",
    "Description": "Sometimes, writing a large program is conceptually as simple as translating from a big unstructured input into a more and more structured output. In this post, we present a data structure to talk about such programs and demonstrate its use and flexbility using a single-pass compiler as case-study."
  },
  {
    "Title": "ribbon mic – kHz",
    "Url": "https://khz.ac/sound/ribbon-mic/",
    "Timestamp": "2025-01-21T01:02:32",
    "Domain": "khz.ac",
    "Description": "i would have used 2.5 μm 1000-grade aluminum foil, but the only quantities\neasily available on the internet are small, expensive, 6-by-12 cm rectangles\nsold specifically for reribboning microphones. since i had an interest in\nkeeping this microphone cheap and repeatable, i wanted something a little more\nreliable as a source. so, naturally, i turned to alibaba. after speaking to\naround eight suppliers, i found that either:"
  },
  {
    "Title": "How breaking invisible family pacts forge unstoppable founders.",
    "Url": "https://josef.cn/blog/invisible-pact",
    "Timestamp": "2025-01-21T01:02:32",
    "Domain": "josef.cn",
    "Description": "Why founders who defy family expectations become the most relentless ones"
  },
  {
    "Title": "Best Practices are Dead. Long Live Best Practices.",
    "Url": "https://jonpauluritis.com/articles/best-practices-are-dead-long-live-best-practices/",
    "Timestamp": "2025-01-21T01:02:32",
    "Domain": "jonpauluritis.com",
    "Description": "Went down a rabbithole on the old web and I learned that 'Bloodletting' was a common medical procedure for the better part of 3000 years. I'm kind of spellbound by the duration- it was one hell of a lindy effect. Our first evidence of its use appeared in Egypt..."
  },
  {
    "Title": "The algorithm isn't always to blame",
    "Url": "https://mijndertstuij.nl/posts/the-algorithm-not-always-to-blame/",
    "Timestamp": "2025-01-21T01:02:31",
    "Domain": "mijndertstuij.nl",
    "Description": "We can't blame the algorithm for the state of the internet, not for all of it."
  },
  {
    "Title": "Sizing up MI300A’s GPU",
    "Url": "https://chipsandcheese.com/p/sizing-up-mi300as-gpu",
    "Timestamp": "2025-01-21T01:02:31",
    "Domain": "chipsandcheese.com",
    "Description": "AMD’s Instinct MI300A is a giant APU, created by swapping out two GPU chiplets (XCDs) for three CPU chiplets (CCDs)."
  },
  {
    "Title": "Dyeing with woad – Salt extraction method",
    "Url": "https://marinaskua.com/blogs/marinaskua/dyeing-with-woad-salt-extraction-method",
    "Timestamp": "2025-01-21T01:02:29",
    "Domain": "marinaskua.com",
    "Description": "This year I've got into gardening in a big way, partially inspired by my wish to grow my own dye plants. I have an abundance of calendula and coreopsis, which will yield golden-yellow, green and maybe orange. I have a couple of madder plants that I'll eventually harvest for their roots, giving a lovely red. And back in spring, I sowed some woad seeds in the hope of growing my own blue dye. I opted for woad rather than the more potent indigo partially out of a bit of nostalgia for our British textiles history, and partially knowing that the plants do well in our climate.\nGermination wasn't great, but the ones that did sprout, I planted out in the garden. The plants have been growing over the summer, only slightly held back by the slugs and caterpillars that are currently running rampant.\n\nI've never dyed with woad or indigo before – both can be processed to produce indigotin, the valuable blue pigment that's so strongly associated with these plants. While I'd love to brew up a proper vat to extract those rich, deep blues, I definitely don't have enough plants growing for a big enough harvest to make it worthwhile. Preparing a vat takes multiple steps, chemicals that I don't have to hand, and a fair amount of time. But, inspired by Rebecca Desnos, I decided to try a less common method of extracting the pigment, using salt. \n\nI picked about half the leaves from each plant, resulting in 50 grams of fresh leaves. That's convenient because my wool yarn is in 50 gram skeins, and I use 1:1 as a ratio of dyestuff to fibre when trying out new dye material. It's usually a good starting point, and I use the results to inform the quantities I use for future batches. \nI washed the leaves and, in a stainless steel bowl (which is non-reactive so won't affect the dye colour), tore them into small pieces. In the meantime I put a couple of skeins in an alum and cream of tartar mordant bath to simmer while I prepared the woad. \n\nI sprinkled some salt over the torn leaves – I wish I could tell you how much salt, but I eyeballed it. I'm terrible like that. Maybe you can see from the photo roughly the amount I used.\n\nNext is the fun bit. The salt draws moisture out of the leaves – much like preparing vegetables like aubergine and courgette to avoid sogginess when cooking. In order to extract as much water – and colour – out of the leaves, you need to squish them up. \n\nOn first contact with the salt a small amount of green liquid started seeping out of the leaves, and squishing with my hands drew out loads of deep green juice. There's something immensely satisfying about the process of squeezing and crushing the leaves, foamy green dye oozing out between your fingers, leaving little clumps of wilted leaves. \nOnce I was satisfied that not much more pigment was coming out of the leaves, it was times to add the damp, mordanted yarn. I used my Mendip 4-Ply in Sheep (Sunny).\n\nI put the yarn in the bowl, trying to maximise contact between the dye liquid and the wool. Breaking up the clumps of leaves and pressing them into the yarn, kneading the pigment into the skein while taking care to avoid tangles, was good fun.\n\nAt this stage things are all still decidedly green in colour, bright and fresh. I was looking out for a colour change, ultimately expecting a colour in the turquoise–teal range. I wasn't expecting a very strong colour, as the amounts of dye in woad are a lot less concentrated than in indigo.\n\nAs I kept squeezing and turning the yarn to try and get even coverage, it did seem that the colour was shifting very slightly. The leaves dried up after a while, so I removed the yarn and added a little more salt in the hope of extracting a little more colour. \n\nAfter some more kneading of the leaf scraps, it seemed to work! I was able to get a bit more moisture out, which helped even out and strengthen the colour on the yarn. \n\nAs the colour was exposed to oxygen it definitely started turning a bit more teal. Once I got about as much coverage as I thought I was going to get, I decided to fix the colour with some heat. This may not be necessary, but I tend to be a bit belt-and-braces about these things. I wrapped up the skein loosely in a compostable carrier bag and put it in the microwave for a minute. \n\nOn unwrapping the skein, the colour change was immediately noticeable, as was a strong smell. Woad is a brassica, much like cabbage, broccoli and kale. You can probably imagine it! Now that the dyeing process was finished, I hung the yarn up to dry. Usually I'd let the yarn sit in the dye bath until the water is completely cold, but as there wasn't a typical dye bath here, I decided to let the skein dry completely, and rinse it a couple of days later. \nI had heard that woad, prepared using a standard method for natural dyes, can yield pinky-apricot colours. Not entirely optimistically, I boiled up some water to pour over the seemingly spent woad leaves, thinking I didn't have much to lose if nothing happened. \n\nAn eerie blue tinge was evident, looking like copper sulphate, which was encouraging that there was at least still a little pigment left in the leaves. I added this to a pan with warm water and a fresh mordanted skein of the same wool yarn. Leaving the pan on low heat, I really didn't expect much – maybe there was a slight yellowy tinge appearing. Then returning a while later I was amazed to find the peachy tones I had read about! \n\nI left the yarn to cool overnight before rinsing both skeins. Both colours became a little paler, which I expected, but there was very little colour run-off into the water and the resulting shades are quite lovely. \n\n As a not-at-all-experienced dye plant grower, I can definitely say that woad has earned its place in my garden. The blue tones are rare and invaluable – and to be able to use the spent leaves for a completely different colour is a massive bonus! I'll be sowing a lot more seeds next year and have an area dedicated to woad, and hopefully then I'll have enough to harvest for a real vat to aim for those deep blues! \n For more yarn and craft related projects, consider subscribing on Patreon where I post a making video every month. If you enjoyed this post, you can buy me a coffee on Ko-fi as a thank-you. "
  },
  {
    "Title": "2025-01-20 office of secure transportation",
    "Url": "https://computer.rip/2025-01-20-office-of-secure-transportation.html",
    "Timestamp": "2025-01-21T01:02:27",
    "Domain": "computer.rip",
    "Description": "I've seen them at least twice on /r/whatisthisthing, a good couple dozen times\non the road, and these days, even in press photos: GMC trucks with custom\nsquare boxes on the back, painted dark blue, with US Government \"E\" plates.\nThese courier escorts, \"unmarked\" but about as subtle as a Crown Vic with a\nbull bar, are perhaps the most conspicuous part of an obscure office of a\nsecretive agency. One that seems chronically underfunded but carries out a\nremarkable task: shipping nuclear weapons."
  },
  {
    "Title": "How we made Blurhash 128x faster — Uploadcare Blog",
    "Url": "https://uploadcare.com/blog/faster-blurhash/",
    "Timestamp": "2025-01-21T01:02:27",
    "Domain": "uploadcare.com",
    "Description": "Blurhash creates compact blurred image previews as ASCII strings. Alex Karpinsky of Uploadcare made it 128x faster."
  },
  {
    "Title": "Just Write. | rugu",
    "Url": "https://www.rugu.dev/en/blog/write/",
    "Timestamp": "2025-01-21T01:02:25",
    "Domain": "www.rugu.dev",
    "Description": "Written at 2025-01-20"
  },
  {
    "Title": "How to solve computational science problems with AI: Physics-Informed Neural Networks (PINNs)",
    "Url": "https://mertkavi.com/how-to-solve-computational-science-problems-with-ai-physics-informed-neural-networks-pinns/",
    "Timestamp": "2025-01-21T01:02:24",
    "Domain": "mertkavi.com",
    "Description": "Disclaimer: Any opinions expressed are solely my own."
  },
  {
    "Title": "I am (not) a Failure: Lessons Learned From Six (and a half) Failed Startup Attempts",
    "Url": "http://blog.rongarret.info/2025/01/i-am-not-failure-lessons-learned-from.html",
    "Timestamp": "2025-01-21T00:01:52",
    "Domain": "blog.rongarret.info",
    "Description": "A while back I wrote : I've had many, many failures in my life.  (Hm, maybe I should write a blog post about that.) This is that post.  I'm ..."
  }
]