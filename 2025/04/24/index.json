[
  {
    "Title": "Daily links from Cory Doctorow",
    "Url": "https://pluralistic.net/2025/04/23/zuckerstreisand/#zdgaf",
    "Timestamp": "2025-04-24T12:02:03",
    "Domain": "pluralistic.net",
    "Description": ""
  },
  {
    "Title": "Teaching LLMs how to solid model",
    "Url": "https://willpatrick.xyz/technology/2025/04/23/teaching-llms-how-to-solid-model.html",
    "Timestamp": "2025-04-24T10:02:11",
    "Domain": "willpatrick.xyz",
    "Description": "It turns out that LLMs can make CAD models for simple 3D mechanical parts. And, I think theyâ€™ll be extremely good at it soon."
  },
  {
    "Title": "The #1 Pattern You Need To Know When Publishing Events",
    "Url": "https://youtube.com/watch?v=6YwSKMvTgDU",
    "Timestamp": "2025-04-24T10:02:03",
    "Domain": "youtube.com",
    "Description": "Hi, I'm James Eastham and it this video I dive into the intricacies of the outbox pattern. Event-driven architectures can seem straightforward, but managing state and publishing events requires careful consideration.\n\nYou'll learn about two key methods: the traditional approach involving transactional writes to separate tables, and the modern approach utilizing Amazon DynamoDB streams. I share hands-on code examples and highlight common pitfalls, offering a thorough guide to building resilient event-driven systems. By the end of this video, you'll understand how to ensure reliable state management while publishing events effectively.\n\n00:00 Introduction to Event-Driven Architecture\n00:23 The Challenges of Event Publishing\n01:41 Understanding the Outbox Pattern\n03:38 Traditional Outbox Implementation\n06:18 Modern Outbox with DynamoDB Streams\n07:47 Code Walkthrough: Traditional Outbox\n13:21 Code Walkthrough: DynamoDB Streams\n17:02 Conclusion and Best Practices\n\nCode - https://github.com/jeastham1993/PlantBasedPizza/tree/azure\nDynamoDB Example - https://github.com/jeastham1993/PlantBasedPizza/tree/main/src/PlantBasedPizza.Account"
  },
  {
    "Title": "Korea TSPs",
    "Url": "https://www.math.uwaterloo.ca/tsp/korea/index.html",
    "Timestamp": "2025-04-24T08:02:02",
    "Domain": "www.math.uwaterloo.ca",
    "Description": "We have solved a traveling salesman problem (TSP) to walk to 81,998 bars in South Korea.\nThe problem was created using the Open Source Routing Machine (OSRM) to build a table of the 3,361,795,003 point-to-point travel times, one for each pair of bar locations.\nOur computation produced a tour together with a proof that it is a shortest-possible route to visit all 81,998 stops when measured with the OSRM times."
  },
  {
    "Title": "They made computers behave like annoying salesmen",
    "Url": "https://rakhim.exotext.com/they-made-computers-behave-like-annoying-salesmen",
    "Timestamp": "2025-04-24T02:02:01",
    "Domain": "rakhim.exotext.com",
    "Description": "They made computers behave like annoying salesmen | exotext"
  },
  {
    "Title": "Rib :ms_red_panda: (@Rib)",
    "Url": "https://fedi.rib.gay/notes/a6xqityngfubsz0f",
    "Timestamp": "2025-04-24T00:01:57",
    "Domain": "fedi.rib.gay",
    "Description": "Today Melissa Lewis over on BlueSky pointed out that the font used in the infamous \"You wouldn't steal a car\" anti-piracy campaign was actually designed by Just van Rossum, whose brother, Guido, created the Python programming language (https://bsky.app/profile/melissa.news/post/3ln7hx5rhcj2v)\n\nShe also pointed out that the font had been cloned and released illegally for free under the name \"XBAND Rough\". Naturally, it would be hilarious if the anti-piracy campaign actually turned out to have used this pirated font, so I went sleuthing and quickly found a PDF from the campaign site with the font embedded (https://web.archive.org/web/20051223202935/http://www.piracyisacrime.com:80/press/pdfs/150605_8PP_brochure.pdf).\n\nSo I chucked it into FontForge and yep, turns out the campaign used a pirated font the entire time! ðŸ“Ž"
  },
  {
    "Title": "AI Horseless Carriages | koomen.dev",
    "Url": "https://koomen.dev/essays/horseless-carriages/",
    "Timestamp": "2025-04-24T00:01:56",
    "Domain": "koomen.dev",
    "Description": "An essay about bad AI app design"
  },
  {
    "Title": "Tennis Balls",
    "Url": "https://xkcd.com/3080/",
    "Timestamp": "2025-04-24T00:01:56",
    "Domain": "xkcd.com",
    "Description": ""
  }
]