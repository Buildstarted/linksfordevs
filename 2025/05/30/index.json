[
  {
    "Title": "Systems Correctness Practices at Amazon Web Services ‚Äì Communications of the ACM",
    "Url": "https://cacm.acm.org/practice/systems-correctness-practices-at-amazon-web-services/",
    "Timestamp": "2025-05-30T22:02:17",
    "Domain": "cacm.acm.org",
    "Description": "Amazon Web Services (AWS) strives to deliver reliable services that customers can trust completely. This requires maintaining the highest standards of security, durability, integrity, and availability‚Äîwith systems correctness serving as the cornerstone for achieving these priorities. An April 2015 article published in Communications of the ACM, titled ‚ÄúHow Amazon Web Services Uses Formal Methods,‚Äù highlighted the approach for ensuring the correctness of critical services that have since become among the most widely used by AWS customers.21"
  },
  {
    "Title": "LLMs Will Not Replace You",
    "Url": "https://www.davidhaney.io/llms-will-not-replace-you/",
    "Timestamp": "2025-05-30T19:02:43",
    "Domain": "www.davidhaney.io",
    "Description": "‚ÄúAny sufficiently advanced technology is indistinguishable from magic‚Äù - Arthur C. Clarke\nToday I‚Äôd like to talk about LLMs. But first, I‚Äôd like to talk about an impressive invention from the late 1700s.\nThe Mechanical Turk The Mechanical Turk\n- or ‚ÄúThe Turk‚Äù as people called it - was an autonomous chess-playing machine. Built in 1770, it went on tour across parts of the world for 84 years as a robot playing chess against human opponents."
  },
  {
    "Title": "My Complete CQRS and Domain Events Setup in .NET",
    "Url": "https://youtube.com/watch?v=5yLIzis9Qr0",
    "Timestamp": "2025-05-30T13:02:39",
    "Domain": "youtube.com",
    "Description": "Get the free Clean Architecture template: https://dub.sh/ca-template\nWant to master Clean Architecture? Go here: https://bit.ly/3PupkOJ\nWant to unlock Modular Monoliths? Go here: https://bit.ly/3SXlzSt\nGet the source code here: https://www.patreon.com/milanjovanovic\n\nIn this video, I show how I improved my custom domain event dispatcher in .NET by removing reflection and making it fully strongly-typed.\n\nThe result? A cleaner, faster, and more extensible foundation for CQRS and domain events ‚Äî perfect for Clean Architecture.\n\nYou‚Äôll learn:\n- How domain events work across aggregates and handlers\n- How to improve dispatch performance using caching and generics\n- How to use handler wrappers to eliminate reflection\n- Building a full CQRS setup with command/query handlers and decorators\n- Extending with validation, logging, retries, and telemetry\n\nThis system is part of my free Clean Architecture template (link below).\n\nCheck out my courses:\nhttps://www.milanjovanovic.tech/courses\n\nRead my Blog here:\nhttps://www.milanjovanovic.tech/blog\n\nJoin my weekly .NET newsletter:\nhttps://www.milanjovanovic.tech\n\nChapters\n0:00 Improving DomainEventsDispatcher\n8:35 Testing the improved version\n10:16 Reviewing custom CQRS setup"
  },
  {
    "Title": "ReSharper for VS Code is here and it‚Äôs BAD",
    "Url": "https://youtube.com/watch?v=YCoULbQ92gg",
    "Timestamp": "2025-05-30T11:02:03",
    "Domain": "youtube.com",
    "Description": "Get my REST API course for free: https://dometrain.com/course/from-zero-to-hero-rest-apis-in-asp-net-core/ \nSubscribe to my weekly newsletter: https://nickchapsas.com\n\nHello, everybody. I'm Nick, and in this video, I will talk about the new JetBrains ReSharper extension that was launched for Visual Studio code and compare it to the C# Dev Kit to see which one is worth your time. Spoiler, it's bad.\n\nWorkshops: https://bit.ly/nickworkshops\n\nDon't forget to comment, like and subscribe :)\n\nSocial Media:\nFollow me on GitHub: https://github.com/Elfocrash\nFollow me on Twitter: https://twitter.com/nickchapsas\nConnect on LinkedIn: https://www.linkedin.com/in/nick-chapsas\n\n#csharp #dotnet"
  },
  {
    "Title": ".NET Aspire: How Maddy Montaquila and the .NET Team Are Revolutionizing Development",
    "Url": "https://youtube.com/watch?v=NpvjTBAZP5c",
    "Timestamp": "2025-05-30T10:01:53",
    "Domain": "youtube.com",
    "Description": "RJJ Software's Software Development Service This episode of The Modern .NET Show is supported, in part, by RJJ Software's Software Development Services, whether your company is looking to elevate its UK operations or reshape its US strategy, we can provide tailored solutions that exceed expectations.\r\n\r\n Show Notes \"If your app has a backend, it's Aspire-able. And so it's tools, templates, and packages for really any type of app‚Ä¶ So just being able to walk up to a repo, clone it, and hit F5. When was the last time we were able to do that? Like, ten years ago, maybe?\"‚Äî Maddy Montaquila\r\n\r\n Welcome friends to The Modern .NET Show; the premier .NET podcast, focusing entirely on the knowledge, tools, and frameworks that all .NET developers should have in their toolbox. We are the go-to podcast for .NET developers worldwide, and I am your host: Jamie ‚ÄúGaProgMan‚Äù Taylor.\r\n\r\n In this episode, we talk with Maddy Montaquila about .NET Aspire, what it is, how it's not just for .NET developers, and how it can help you to run a repo by simply hitting F5, regardless of what's in there.\r\n\r\n \"To me, it really is just a dev tool in a bunch of different ways. It makes you just hit F5 again, no matter how many containers, or local, or deployed services you have to deal with, or projects, or languages, or if you're in VS, or VS Code, or on a Mac, or on a command line, or on a Linux machine. Like Aspire just makes all that magical without replatforming\"‚Äî Maddy Montaquila\r\n\r\n Along the way, we also talk about the importance of reducing the complexity of going from, \"I have an idea,\" to, \"my app is running in the cloud.\" And Maddy drops a wonderful metaphor for .NET Aspire using a Logo-based metaphor. And we address the community invented elephant in the room: that .NET Aspire, somehow, locks you into using one vendor.\r\n\r\n Spoiler alert: it can deploy to any cloud vendor, and even to on-prem servers.\r\n\r\n Anyway, without further ado, let's sit back, open up a terminal, type in `dotnet new podcast` and we'll dive into the core of Modern .NET.\r\n\r\n Supporting the Show If you find this episode useful in any way, please consider supporting the show by either leaving a review (check our review page for ways to do that), sharing the episode with a friend or colleague, buying the host a coffee, or considering becoming a Patron of the show.\r\n\r\n Full Show Notes The full show notes, including links to some of the things we discussed and a full transcription of this episode, can be found at:  https://dotnetcore.show/season-7/net-aspire-how-maddy-montaquila-and-the-net-team-are-revolutionizing-development/\r\n\r\n Maddy's Links:  Maddy on Bluesky  Other Links:  CNCF OpenTelemetry Helm Codespaces Podman Devcontainers Vim GDB FreeBSD Jail  .NET Aspire Community Toolkit CORS MCP  Phi-4 Four stages of competence dot.net  Cloud features of .NET   Customer Stories:  customers.microsoft.com dot.net/customers   Ollama  Supporting the show:  Leave a rating or review Buy the show a coffee Become a patron  Getting in Touch:  Via the contact page Joining the Discord  Remember to rate and review the show on  Apple Podcasts, Podchaser, or wherever you find your podcasts, this will help the show's audience grow. Or you can just share the show with a friend.\r\n\r\n And don't forget to reach out via our Contact page. We're very interested in your opinion of the show, so please get in touch.\r\n\r\n You can support the show by making a monthly donation on the show's Patreon page at: https://www.patreon.com/TheDotNetCorePodcast.\r\n\r\n Music created by Mono Memory Music, licensed to RJJ Software for use in The Modern .NET Show"
  },
  {
    "Title": "Exclusive: US Airlines Are Quietly Hitting Solo & Biz Travelers with Higher Fares",
    "Url": "https://thriftytraveler.com/news/airlines/airlines-charging-solo-travelers-higher-fares/",
    "Timestamp": "2025-05-30T04:02:12",
    "Domain": "thriftytraveler.com",
    "Description": "It's not just Delta. The country's three largest airlines are charging some solo travelers higher fares than groups of two or more."
  },
  {
    "Title": "Black Forest Labs - Frontier AI Lab",
    "Url": "https://bfl.ai/models/flux-kontext",
    "Timestamp": "2025-05-30T02:02:08",
    "Domain": "bfl.ai",
    "Description": "Amazing AI models from the Black Forest."
  },
  {
    "Title": "Stop Using new in C#! Learn Dependency Injection the Right Way - Simple C# Tutorial",
    "Url": "https://youtube.com/watch?v=wFDAJv6h7tw",
    "Timestamp": "2025-05-30T02:02:04",
    "Domain": "youtube.com",
    "Description": "Are you still using new to create dependencies in your C# apps? It‚Äôs time to level up your code with Dependency Injection!\n\nIn this beginner-friendly tutorial, I‚Äôll show you how DI works, why it matters, and how to set it up in a simple C# console app using Microsoft.Extensions.DependencyInjection. You‚Äôll learn how to write cleaner, more testable, and more maintainable code ‚Äî fast.\n\nüí° We‚Äôll also compare the old way (tight coupling with new) vs the modern way (DI), and how easy it is to switch implementations.\n\nüîß Tools & Concepts Covered:\n‚Äì Interfaces & loose coupling\n‚Äì Swapping implementations\n\nüëá Drop a comment if you want a follow-up on advanced DI patterns or testing with mocks!\n\nüîî Subscribe for more C# tutorials: https://youtube.com/@UC231HSjku3orEpc60Rfm3nw"
  },
  {
    "Title": "Why did Microsoft-backed $1.3bn Builder.ai collapse? Accused of using Indian coders¬†for¬†'AI'¬†work - Start Ups News | The Financial Express",
    "Url": "https://www.financialexpress.com/business/start-ups/why-did-microsoft-backed-1-3bn-builderai-collapse-accused-of-using-indian-codersforaiwork/3854944/",
    "Timestamp": "2025-05-30T00:02:01",
    "Domain": "www.financialexpress.com",
    "Description": "Over the next eight years, it raised over $445 million, counted Microsoft and the Qatar Investment Authority as investors, and crossed the $1.3 billion valuation mark.\nBy May 2025, it has gone bankrupt."
  }
]