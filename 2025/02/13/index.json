[
  {
    "Title": "How to run Firecracker without KVM on cloud VMs",
    "Url": "https://blog.alexellis.io/how-to-run-firecracker-without-kvm-on-regular-cloud-vms/",
    "Timestamp": "2025-02-13T00:02:25",
    "Domain": "blog.alexellis.io",
    "Description": "MicroVMs need bare-metal or nested virtualisation with /dev/kvm. But what if that's not available? The PVM virtualisation framework may be the answer."
  },
  {
    "Title": "So You Think You’re a Mail Boss?",
    "Url": "https://ufko.org/bite/so-you-think-you-re-a-mail-boss",
    "Timestamp": "2025-02-13T00:02:25",
    "Domain": "ufko.org",
    "Description": "You’ve got your own server. Running OpenBSD. smtpd tuned to perfection, spamd trained like a beast. SPF, DKIM, DMARC straight out of a fairy tale. Millisecond response times,"
  },
  {
    "Title": "Bad Code is Better Than Vibe Code - Developer forever",
    "Url": "https://manidoraisamy.com/developer-forever/post/bad-code-is-better-than-vibe-code.anc-c12b8fd2-d4b0-4aa5-8f8d-219f9e9367c0.html",
    "Timestamp": "2025-02-13T00:02:24",
    "Domain": "manidoraisamy.com",
    "Description": "Developers are increasingly relying on AI to generate code from natural language prompts—a practice known as vibe coding. This hands-off approach is creating a generation of developers who don't fully understand their own code. A couple of years ago, I wrote:AI takeover won't be like Skynet, but it might still have the same effect. It'll start with small improvements to UX by suggesting what user wants. But as accuracy increases, users will get hooked & delegate all decision making to AI.Still, I am surprised by how fast this has happened, and the fact that coding is one of the first domains affected. Just as companies once became locked into Oracle databases, unable to migrate away due to deep dependencies, today's startups risk becoming permanently dependent on AI code generators. But since the market has embraced the code generation path, we should at least take a more reasonable approach—write bad code first, then let AI refine it, instead of writing everything in English and losing our understanding of code.The Problem with Vibe CodingVibe coding sounds great—just describe what you want, and AI writes the code. But over time, this leads to:No understanding – You don't know how the code works, only the requirements you wrote in English. When something breaks, you're stuck debugging AI's work instead of your own, which often becomes more time-consuming than writing your own code from scratch.No learning – If you never engage with code, what’s the difference between you and the end user? Why can’t the end user cut out the middleman (you) and do it themselves?To be fair, vibe coding has its merits—non-technical founders can build MVPs and get their startups off the ground before hiring engineering talent. However, this initial convenience often comes at the cost of long-term technical debt and dependency.Start with a Brittle ToyInstead of vibe coding, writing brittle code to build an MVP is a much better option. Here’s an example: My 11-year-old son built a game called Flappy Snowman using Scratch. At first, he was comfortable with drag-and-drop blocks in Scratch. But as his game became popular, he realized it was too slow. He wanted to make it faster, so he decided to learn C# and rebuild it using the Unity game engine.Now, imagine if AI could help him translate his Scratch project into Unity, step by step. Even with very little understanding of C#, he would still be able to grasp the code by mapping his Scratch blocks to corresponding C# logic. Through this process:He can still understand his game’s logic because he started with something he built himself.He can learn better coding practices by seeing how AI translates Scratch logic into C# logic.He stays in control of the development, rather than outsourcing the thinking to AI.This is the difference between bad code and vibe coding. One keeps developers engaged. The other turns them into passengers.Grow it into a DragonIncidentally, this is how Mark Zuckerberg got started. He built Facebook using PHP, and once it took off, he hired brilliant engineers who developed HipHop Virtual Machine, which transpiles PHP into C++, significantly improving performance and scalability. This allowed Facebook to scale to billions of users. If a planetary-scale company can be built by a teenager using PHP, imagine what AI-based transpilers can do for young founders of the future.Startup founders can rapidly prototype and launch MVPs while maintaining an understanding of their codebase, which is essential for future iterations and scaling. For learners and beginners, AI can serve as a bridge, helping translate simpler languages like Scratch or PHP into  scalable backend solutions. This approach doesn’t force everyone to write optimized code from the start—it allows developers to begin with what they know and improve incrementally.SummaryThe Y2K crisis of the late 1990s was not just a bug fix—it birthed an entire industry. As companies scrambled to fix COBOL systems that couldn't handle the year 2000, Indian IT firms like TCS and Infosys stepped in. They started by fixing Y2K-related bugs, but in the process, they built expertise in maintaining and modernizing legacy systems. This led to long-term contracts, outsourcing deals, and eventually a shift from services to full-fledged product development. What began as “fixing bad code” evolved into a multi-billion-dollar industry that put India on the global tech map.Now imagine if AI had existed then, automatically fixing every Y2K bug with a single prompt. No learning. No skill development. No transformation. Just a quick fix that left no lasting impact. That’s the choice we face today. We can use AI to paper over our limitations, or we can use it to enhance our capabilities. We can let it write our code, or we can let it teach us to write better code. We can become passive consumers of AI’s output, or we can remain active creators who use AI to push our boundaries. The code we write today shapes not just our software, but our future as creators."
  },
  {
    "Title": "Hell Is Microbenchmarking",
    "Url": "https://www.jasonthorsness.com/23",
    "Timestamp": "2025-02-13T00:02:24",
    "Domain": "www.jasonthorsness.com",
    "Description": "Hell Is Microbenchmarking"
  },
  {
    "Title": "How I Automated My Computer Life With macOS Folder Actions",
    "Url": "https://interfacecraft.online/posts/blog/2025/how-i-automated-my-computer-life-with-macos-folder-actions/",
    "Timestamp": "2025-02-13T00:02:24",
    "Domain": "interfacecraft.online",
    "Description": "I’ve always believed that computers should handle repetitive tasks better than humans. It frustrates me when something can’t be automated the way I want or when simple actions require more effort than they should.\nLet’s say we want to convert one video format to another. This happens to me often when I need to share a screencast video with colleagues on Slack. By default, macOS records in .MOV format, which is too large for sharing on Slack."
  },
  {
    "Title": "League of Legends data scraping the hard and tedious way for fun",
    "Url": "https://maknee.github.io/blog/2025/League-Data-Scraping/",
    "Timestamp": "2025-02-13T00:02:24",
    "Domain": "maknee.github.io",
    "Description": "Personal website for some random tidbits I work on"
  },
  {
    "Title": "The curse of being Mediocre",
    "Url": "https://zeroiq.beehiiv.com/p/the-curse-of-being-mediocre",
    "Timestamp": "2025-02-13T00:02:23",
    "Domain": "zeroiq.beehiiv.com",
    "Description": "Mediocrity is the curse of being good, but never great.Mediocrity is the silent struggle no one talks about. You're not a failure, but you're not truly successful either. Stuck in the top 10% but never the top 1%—why does it feel like you're always falling short? Explore the psychological weight of being 'almost great' in this thought-provoking piece."
  },
  {
    "Title": "How I give the right amount of context (in any situation)",
    "Url": "https://newsletter.weskao.com/p/how-i-give-the-right-amount-of-context",
    "Timestamp": "2025-02-13T00:02:23",
    "Domain": "newsletter.weskao.com",
    "Description": "Most people suck at managing up. They waste their manager's time with too much (or too little) information. Here’s how to give the right amount of context."
  },
  {
    "Title": "Where are the best restaurants in my city? A statistical analysis",
    "Url": "https://mattsayar.com/where-are-the-best-restaurants-in-my-city-a-statistical-analysis/",
    "Timestamp": "2025-02-13T00:02:20",
    "Domain": "mattsayar.com",
    "Description": "Everyone wants to know the best places to eat, but the 'best place' is inherently subjective. Sure you can read the multitude of 'Best Restaurants in Town' lists (which are usually pretty good!), but I wanted to use data to answer the question: 'What are…"
  },
  {
    "Title": "Syntax Highlight for SQL in Diagnostic errors",
    "Url": "https://xnacly.me/posts/2025/syntax-highlight-for-errors/",
    "Timestamp": "2025-02-13T00:02:20",
    "Domain": "xnacly.me",
    "Description": "Adding syntax highlighting to SQL snippets in sqleibniz diagnostics"
  },
  {
    "Title": "You might not need staging",
    "Url": "https://ivelum.com/blog/you-might-not-need-staging/",
    "Timestamp": "2025-02-13T00:02:20",
    "Domain": "ivelum.com",
    "Description": "Many engineering teams use staging to test new features before pushing them to production. But is it really the best way to test?"
  },
  {
    "Title": "The (Un)Reasonable Effectiveness of Raw Power",
    "Url": "https://maraoz.com/raw-power/",
    "Timestamp": "2025-02-13T00:02:19",
    "Domain": "maraoz.com",
    "Description": "maraoz's personal website."
  },
  {
    "Title": "No longer posting to Pinboard",
    "Url": "https://www.gyford.com/phil/writing/2025/02/10/no-longer-pinboard/",
    "Timestamp": "2025-02-13T00:02:17",
    "Domain": "www.gyford.com",
    "Description": "I’m going to stop posting links to Pinboard, but will continue to post them to my own site."
  },
  {
    "Title": "Docs without please | amanhimself.dev",
    "Url": "https://amanhimself.dev/blog/docs-without-please/",
    "Timestamp": "2025-02-13T00:02:16",
    "Domain": "amanhimself.dev",
    "Description": ""
  },
  {
    "Title": "Working with the Postgres protocol",
    "Url": "https://levkk.bearblog.dev/working-with-the-postgres-protocol/",
    "Timestamp": "2025-02-13T00:02:15",
    "Domain": "levkk.bearblog.dev",
    "Description": "PostgreSQL clients and servers talk to each other via TCP. TCP is a streaming protocol, which means that data sent over the socket isn't delineated in any wa..."
  },
  {
    "Title": "P(user-hostile trash heap) - Richard Marmorstein",
    "Url": "https://twitchard.github.io/posts/2025-02-11-p-user-hostile-trash-heap.html",
    "Timestamp": "2025-02-13T00:02:15",
    "Domain": "twitchard.github.io",
    "Description": "Will generative AI will magically make the software industry start doing right by users?"
  },
  {
    "Title": "How I learned to code with my voice",
    "Url": "https://whitep4nth3r.com/blog/how-i-learned-to-code-with-my-voice/",
    "Timestamp": "2025-02-13T00:02:14",
    "Domain": "whitep4nth3r.com",
    "Description": "Struggling with severe hand pain, I learned to code by voice. This is my journey with Talon and Cursorless, plus practical tips for hands-free development."
  },
  {
    "Title": "The C Programming Language and the Lindy Effect",
    "Url": "https://jacksmith.xyz/blog/the-c-programming-language-and-the-lindy-effect/",
    "Timestamp": "2025-02-13T00:02:12",
    "Domain": "jacksmith.xyz",
    "Description": "11 February 2025"
  }
]