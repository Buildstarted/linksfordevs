[
  {
    "Title": "Phrase origin: Why do we “call” functions?",
    "Url": "https://quuxplusone.github.io/blog/2025/04/04/etymology-of-call/",
    "Timestamp": "2025-07-10T21:02:06",
    "Domain": "quuxplusone.github.io",
    "Description": "On StackExchange,\nsomeone asks why programmers talk about “calling” a function. Several possible allusions spring to mind:\n\n\n  Calling a function is like calling on a friend — we go, we stay a while, we come back.\n  Calling a function is like calling for a servant — a summoning to perform a task.\n  Calling a function is like making a phone call — we ask a question and get an answer from outside ourselves.\n\n\nThe true answer seems to be the middle one — “calling” as in “calling up, summoning” —\nbut indirectly, originating in the notion of “calling for” a subroutine out of a library of subroutines\nin the same way that we’d “call for” a book out of a closed-stack library of books.\n"
  },
  {
    "Title": "Measuring the Impact of Early-2025 AI on Experienced Open-Source Developer Productivity",
    "Url": "https://metr.org/blog/2025-07-10-early-2025-ai-experienced-os-dev-study/",
    "Timestamp": "2025-07-10T20:02:28",
    "Domain": "metr.org",
    "Description": "We conduct a randomized controlled trial (RCT) to understand how early-2025 AI tools affect the productivity of experienced open-source developers working on their own repositories. Surprisingly, we find that when developers use AI tools, they take 19% longer than without—AI makes them slower. We view this result as a snapshot of early-2025 AI capabilities in one relevant setting; as these systems continue to rapidly evolve, we plan on continuing to use this methodology to help estimate AI acceleration from AI R&D automation 1."
  },
  {
    "Title": "GitHub - W1LDN16H7/JPL: The JSON Programming Language",
    "Url": "https://github.com/W1LDN16H7/JPL",
    "Timestamp": "2025-07-10T19:02:16",
    "Domain": "github.com",
    "Description": "The JSON Programming Language. Contribute to W1LDN16H7/JPL development by creating an account on GitHub."
  },
  {
    "Title": "Significant drop in code quality after recent update",
    "Url": "https://forum.cursor.com/t/significant-drop-in-code-quality-after-recent-update/115651",
    "Timestamp": "2025-07-10T19:02:16",
    "Domain": "forum.cursor.com",
    "Description": "Hey everyone,  After the last Cursor update, I’ve noticed the code suggestions have gotten way worse. Before, it used to generate clean, well-structured code that followed good practices. Now the code feels really basic, sloppy, and sometimes just wrong.  For example:   It used to generate proper Laravel controllers, with form requests, policies, and clean separation. Now it just dumps everything into one messy controller. Blade views used to use my project’s layouts and components properly, sty..."
  },
  {
    "Title": "b - Browser Model Context Protocol",
    "Url": "https://mcp-b.ai/",
    "Timestamp": "2025-07-10T13:02:10",
    "Domain": "mcp-b.ai",
    "Description": "Today's AI automation is like using a robot to read your screen and click buttons. MCP-B gives AI direct access to your website's functions instead."
  }
]