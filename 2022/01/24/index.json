[
  {
    "Title": "Awaiting an async void method in .NET - G√©rald Barr√©",
    "Url": "https://www.meziantou.net/awaiting-an-async-void-method-in-dotnet.htm",
    "Timestamp": "2022-01-24T15:02:59",
    "Domain": "www.meziantou.net",
    "Description": "In this post, I describe how to await an async void method in .NET using a custom Synchronization Context."
  },
  {
    "Title": "How slow is MediatR really?",
    "Url": "https://www.youtube.com/watch?v=baiH3f_TFfY",
    "Timestamp": "2022-01-24T13:02:12",
    "Domain": "www.youtube.com",
    "Description": "Check out my courses: https://nickchapsas.comBecome a Patreon and get source code access: https://www.patreon.com/nickchapsasHello everybody I'm Nick and in ..."
  },
  {
    "Title": "Alexandre N√©d√©lec - Week 3, 2022 - Tips I learned this week",
    "Url": "https://www.techwatching.dev/posts/w03-2022-tips-learned-this-week",
    "Timestamp": "2022-01-24T13:02:11",
    "Domain": "www.techwatching.dev",
    "Description": ".NET 6 introduced a new way to build a .NET application using the new WebApplication and WebApplicationBuilder classes. One thing I like about it is how configuration is handled. Instead of using the ConfigureAppConfiguration method to add a new configuration source, you can directly use the Configuration property on the WebApplicationBuilder instance. You can see an example of this change on this screenshot of the ASP.NET Core documentation:"
  },
  {
    "Title": "This Post Was Written by GitHub Copilot",
    "Url": "https://flower.codes/2021/07/08/this-post-was-written-by-github-copilot",
    "Timestamp": "2022-01-24T13:02:10",
    "Domain": "flower.codes",
    "Description": "Impostor."
  },
  {
    "Title": "Simple WebSocket client and server application using .NET",
    "Url": "https://www.tabsoverspaces.com/233883-simple-websocket-client-and-server-application-using-dotnet",
    "Timestamp": "2022-01-24T11:02:42",
    "Domain": "www.tabsoverspaces.com",
    "Description": "24 Jan 2022\n\t\n\t 2 mins\n\t\n\t .NET, ASP.NET Core, WebSocket"
  },
  {
    "Title": "I accidentally used YAML.parse instead of JSON.parse, and it... worked?",
    "Url": "https://rohitpaulk.com/articles/accidentally-used-yaml-instead-of-json",
    "Timestamp": "2022-01-24T11:02:41",
    "Domain": "rohitpaulk.com",
    "Description": "How I stumbled upon the fact that YAML is a superset of JSON.\n"
  },
  {
    "Title": "Top-Level Statements in C# - Code Maze",
    "Url": "https://code-maze.com/csharp-top-level-statements/",
    "Timestamp": "2022-01-24T09:01:46",
    "Domain": "code-maze.com",
    "Description": "If you want to know more about top-level statements in c# and learn to write a program without writing classes, this is the article for you!"
  },
  {
    "Title": "Microsoft Feature Management - Feature Flags in ASP.NET Core C# - Detailed Guide | Pro Code Guide",
    "Url": "https://procodeguide.com/programming/feature-flags-in-aspnet-core/",
    "Timestamp": "2022-01-24T09:01:43",
    "Domain": "procodeguide.com",
    "Description": "We will be implementing Microsoft Feature Management i.e. feature flags in ASP.NET Core C# application but all this is applicable to other types of .NET C#"
  },
  {
    "Title": "290: The .NET MAUI Episode",
    "Url": "https://www.mergeconflict.fm/290",
    "Timestamp": "2022-01-24T09:01:43",
    "Domain": "www.mergeconflict.fm",
    "Description": "We answer all of your questions! Which seem to mostly be about .NET MAUI :)"
  },
  {
    "Title": "[Fixed Ending] Episode 90 - Clean Architecture and Subcutaneous Testing with Matthew Jeorrett",
    "Url": "https://dotnetcore.show/episode-90-fixed-ending-clean-architecture-and-subcutaneous-testing-with-matthew-jeorrett/",
    "Timestamp": "2022-01-24T09:01:43",
    "Domain": "dotnetcore.show",
    "Description": "In this episode of The .NET Core Podcast we talked with Matthew Jeorrett about what the Clean Architecture, Subcutaneous Testing, and how he utilitsed both to build web applications in a clean, vertical, extensible manner."
  },
  {
    "Title": "Fundamentals of Garbage Collection",
    "Url": "https://www.telerik.com/blogs/fundamentals-garbage-collection",
    "Timestamp": "2022-01-24T06:02:15",
    "Domain": "www.telerik.com",
    "Description": "Let‚Äôs talk about a core computer science concept: garbage collection‚Äîit‚Äôs key to managing memory for many languages. How does your preferred language handle it?"
  },
  {
    "Title": "Amazon.com: Out of the Woods of Oregon Slice it Right! Board with Bread & Bagel Slicer (Maple Slicer): Home & Kitchen",
    "Url": "https://www.amazon.com/Out-Woods-Oregon-Slice-Slicer/dp/B0893PKY1N?tag=linksfordevs-20&lfd=202201",
    "Timestamp": "2022-01-24T06:02:15",
    "Domain": "www.amazon.com",
    "Description": "Online shopping for Kitchen Knives & Accessories from a great selection of Cutlery Sets, Specialty Knives, Sharpeners, Cutting Boards, & more at everyday low prices."
  },
  {
    "Title": "grouping Arrays via `.groupBy()` and `.groupByToMap()`",
    "Url": "https://2ality.com/2022/01/array-grouping.html",
    "Timestamp": "2022-01-24T06:02:14",
    "Domain": "2ality.com",
    "Description": "This blog post describes the ECMAScript proposal ‚ÄúArray grouping‚Äù by Justin Ridgewell."
  },
  {
    "Title": "Announcing TypeScript 4.6 Beta",
    "Url": "https://devblogs.microsoft.com/typescript/announcing-typescript-4-6-beta/",
    "Timestamp": "2022-01-24T06:02:13",
    "Domain": "devblogs.microsoft.com",
    "Description": "Today we are excited to announce the beta release of TypeScript 4.6! To get started using the beta, you can get it¬†through NuGet, or use npm with the following command: npm install typescript@beta You can also get editor support by Downloading for Visual Studio 2019/2017 Following directions for¬†Visual Studio Code¬†and¬†Sublime Text 3."
  },
  {
    "Title": "Debugging Compatibility in Edge",
    "Url": "https://textslashplain.com/2022/01/20/debugging-compatibility-in-edge/",
    "Timestamp": "2022-01-24T06:02:13",
    "Domain": "textslashplain.com",
    "Description": "Background By moving from our old codebase to Chromium, the Microsoft Edge team significantly modernized our codebase and improved our compatibility with websites. As we now share the vast majority‚Ä¶"
  },
  {
    "Title": "Using games engines for work and profit! | Meetup",
    "Url": "https://www.meetup.com/Sydney-Alt-Net/events/282399701/",
    "Timestamp": "2022-01-24T05:03:48",
    "Domain": "www.meetup.com",
    "Description": "Tue, 25 Jan, 7:00 pm AEDT: ...or something along those lines üòá\n\nNow that games engines are ridiculously over powered, wouldn't it be great if we could somehow find ways to incorporate them into our "
  },
  {
    "Title": "Azure Functions consumption plan naming",
    "Url": "https://dotnetthoughts.net/azure-functions-consumption-plan-naming/",
    "Timestamp": "2022-01-24T05:03:48",
    "Domain": "dotnetthoughts.net",
    "Description": "This post is about how to follow naming conventions for Azure Function consumption plans. Unlike Azure App Services, when we create Azure Functions with consumption plan Azure will create a plan name which you can‚Äôt modify. If you‚Äôre following certain naming conventions it will be different from what you‚Äôre following. Here is an example."
  },
  {
    "Title": "Implement hash and HMAC stream one shots by vcsjones ¬∑ Pull Request #63757 ¬∑ dotnet/runtime",
    "Url": "https://github.com/dotnet/runtime/pull/63757",
    "Timestamp": "2022-01-24T04:01:48",
    "Domain": "github.com",
    "Description": "This implements hashing and HMAC statics for streams. Additionally,\n&quot;LiteHmac&quot; and &quot;LiteHash&quot; were introduced. The existing HMAC and hash\nprovider functionality do some bookkeep..."
  },
  {
    "Title": "Piped",
    "Url": "https://youtube.censors.us/YQ_xWvX1n9g",
    "Timestamp": "2022-01-24T00:01:46",
    "Domain": "youtube.censors.us",
    "Description": "An alternative privacy-friendly YouTube frontend which is efficient by design."
  }
]