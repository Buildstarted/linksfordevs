[
  {
    "Title": "The Significance Of Solution Design In Serverless Developments — Part I",
    "Url": "https://medium.com/lego-engineering/the-significance-of-solution-design-in-serverless-developments-part-i-58e0ef9dd24",
    "Timestamp": "2022-01-10T06:03:30",
    "Domain": "medium.com",
    "Description": "What does it bring, and why do we need it?"
  },
  {
    "Title": "Capturing Solution Design Details In Serverless Developments — Part II",
    "Url": "https://medium.com/lego-engineering/capturing-solution-design-details-in-serverless-developments-part-ii-3d2e51b5be66",
    "Timestamp": "2022-01-10T06:03:28",
    "Domain": "medium.com",
    "Description": "What does it contain, and who is it for?"
  },
  {
    "Title": "ThunderboltIoc: .Net Dependency Injection without Reflection!",
    "Url": "https://www.codeproject.com/Articles/5321466/ThunderboltIoc-Net-Dependency-Injection-without-Re",
    "Timestamp": "2022-01-10T06:03:26",
    "Domain": "www.codeproject.com",
    "Description": "An introduction and a documentation for the new ThunderboltIoc framework that achieves dependency injection in .Net without refleciton."
  },
  {
    "Title": "LINQ enhancements in Entity Framework Core 6",
    "Url": "https://blog.okyrylchuk.dev/linq-enhancements-in-entity-framework-core-6",
    "Timestamp": "2022-01-10T06:03:26",
    "Domain": "blog.okyrylchuk.dev",
    "Description": "In this post, I focus on LINQ query enhancements in Entity Framework Core 6."
  },
  {
    "Title": "Integrating Long Path Names in Windows Applications",
    "Url": "https://weblog.west-wind.com/posts/2022/Jan/03/Integrating-Long-Path-Names-in-Windows-NET-Applications",
    "Timestamp": "2022-01-10T06:03:26",
    "Domain": "weblog.west-wind.com",
    "Description": "Long Path Names in Windows are a pain in the butt, but Windows 10 recently starting adding better support for Long Paths in Version 1607+ which for now has to be enabled explicitly. It also requires an application configuration switch in the manifest file. As nice as that support is, it doesn't solve all problems especially when integrating with other components or external applications that don't support long paths. In this post I describe what works, what doesn't and a few hacks to make most things work."
  },
  {
    "Title": "Debug Native Messaging",
    "Url": "https://textslashplain.com/2022/01/08/debug-native-messaging/",
    "Timestamp": "2022-01-10T06:03:25",
    "Domain": "textslashplain.com",
    "Description": "Prelude Last month, an Enterprise customer reached out to report that a 3rd-party browser extension they use wasn’t working properly. Investigation of the extension revealed that the browser …"
  },
  {
    "Title": "Lock down web browsing using Kiosk Mode",
    "Url": "https://textslashplain.com/2022/01/06/lock-down-web-browsing-using-kiosk-mode/",
    "Timestamp": "2022-01-10T06:03:25",
    "Domain": "textslashplain.com",
    "Description": "Browsers get used in many different environments. Today, I take a look at scenarios where there’s either no interactive user (digital signage) or a potentially malicious user (internet kiosks…"
  },
  {
    "Title": "Why your Typescript compiles when you thought you were safe",
    "Url": "https://blog.mavnn.co.uk/2022/01/07/types-in-typescript.html",
    "Timestamp": "2022-01-10T06:03:24",
    "Domain": "blog.mavnn.co.uk",
    "Description": "We're not there yet. Stage 2 in our journey is structural typing."
  },
  {
    "Title": "Cryptoland presentation",
    "Url": "https://peertube.social/videos/watch/8f7e61ed-47ab-4e82-a5c2-5a7d5e8bcb33",
    "Timestamp": "2022-01-10T05:01:46",
    "Domain": "peertube.social",
    "Description": "Mirror of the Cryptoland presentation that its creators seem to be trying to wipe from the Internet for some reason."
  },
  {
    "Title": "Outreach Committee January 2020",
    "Url": "https://dotnetfoundation.org/blog/2022/01/09/wg-outreach-january",
    "Timestamp": "2022-01-10T01:01:48",
    "Domain": "dotnetfoundation.org",
    "Description": "This is your .NET Foundation!"
  },
  {
    "Title": "Adds new American flag module · Marak/colors.js@074a0f8",
    "Url": "https://github.com/Marak/colors.js/commit/074a0f8ed0c31c35d13d28632bd8a049ff136fb6",
    "Timestamp": "2022-01-10T00:03:29",
    "Domain": "github.com",
    "Description": "get colors in your node.js console. Contribute to Marak/colors.js development by creating an account on GitHub."
  },
  {
    "Title": "Built On Blazor! - Home",
    "Url": "https://builtonblazor.net/",
    "Timestamp": "2022-01-10T00:03:29",
    "Domain": "builtonblazor.net",
    "Description": "Blazor lets you build interactive web UIs using C# instead of JavaScript. Blazor apps are composed of reusable web UI components implemented using C#, HTML, and CSS. Both client and server code is written in C#, allowing you to share code and libraries. Blazor supports multiple hosting models... Blazor Server utilizes SignalR to host your application on a web server, and Blazor WebAssembly utilizes Wasm, an open web standard that does not require plugins or code transpilation in order to run natively in a web browser. Blazor applications works in all modern web browsers, including mobile browsers. Blazor is a feature of ASP.NET, the popular web development framework from Microsoft that extends the .NET developer platform with tools and libraries for building web apps. If you are interested in some more detailed case studies about Blazor you can visit the Blazor Customers Showcase."
  }
]