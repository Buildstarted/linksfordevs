[
  {
    "Title": ".NET Rocks! vNext",
    "Url": "https://www.dotnetrocks.com/default.aspx?ShowNum=1805",
    "Timestamp": "2022-08-04T05:01:26",
    "Domain": "www.dotnetrocks.com",
    "Description": ".NET Rocks! is a weekly talk show for anyone interested in programming on the Microsoft .NET platform. The shows range from introductory information to hardcore geekiness."
  },
  {
    "Title": ".NET Foundation - Invidious",
    "Url": "https://vid.puffyan.us/channel/UCiaZbznpWV1o-KLxj8zqR6A",
    "Timestamp": "2022-08-04T05:01:26",
    "Domain": "vid.puffyan.us",
    "Description": ""
  },
  {
    "Title": "Why do tree-based models still outperform deep learning on tabular data?",
    "Url": "https://arxiv.org/abs/2207.08815",
    "Timestamp": "2022-08-04T05:01:25",
    "Domain": "arxiv.org",
    "Description": "While deep learning has enabled tremendous progress on text and image\ndatasets, its superiority on tabular data is not clear. We contribute extensive\nbenchmarks of standard and novel deep learning methods as well as tree-based\nmodels such as XGBoost and Random Forests, across a large number of datasets\nand hyperparameter combinations. We define a standard set of 45 datasets from\nvaried domains with clear characteristics of tabular data and a benchmarking\nmethodology accounting for both fitting models and finding good\nhyperparameters. Results show that tree-based models remain state-of-the-art on\nmedium-sized data ($\\sim$10K samples) even without accounting for their\nsuperior speed. To understand this gap, we conduct an empirical investigation\ninto the differing inductive biases of tree-based models and Neural Networks\n(NNs). This leads to a series of challenges which should guide researchers\naiming to build tabular-specific NNs: 1. be robust to uninformative features,\n2. preserve the orientation of the data, and 3. be able to easily learn\nirregular functions. To stimulate research on tabular architectures, we\ncontribute a standard benchmark and raw data for baselines: every point of a 20\n000 compute hours hyperparameter search for each learner."
  },
  {
    "Title": ".NET Data Community Standup - DbDataSource, a new System.Data abstraction",
    "Url": "https://video.weiler.rocks/watch?v=vRUtHeUpU44",
    "Timestamp": "2022-08-04T04:02:03",
    "Domain": "video.weiler.rocks",
    "Description": "In this episode of the .NET data community standup, we'll explore DbDataSource, a new abstraction being introduced to System.Data in .NET 7.0. DbDataSource unlocks easier integration of ADO.NET drivers with dependency injection, better management of advanced driver configuration, helps performance and more. Tune in to see improvements at the lower levels of the .NET data stack.\n\nCommunity Links: https://www.theurlist.com/dotnetdata-2022-07-27\n\nFeaturing: Arthur Vickers (@ajcvickers), Shay Rojansky (@shayrojansky)\n\nGet your questions answered on the Microsoft Q&A for .NET - https://aka.ms/dotnetqa\n​\nLearn .NET with free self-guided learning from Microsoft Learn: http://aka.ms/learndotnet\n\n#dotnet #data"
  },
  {
    "Title": ".NET Data Community Standup - DbContext Configuration and Lifetime - EF Core Architecture Part 2",
    "Url": "https://video.weiler.rocks/watch?v=NPgFlqXPbK8",
    "Timestamp": "2022-08-04T04:02:02",
    "Domain": "video.weiler.rocks",
    "Description": "Arthur and others from the EF Team continue their deep dive into the architecture of Entity Framework Core. This is a code-driven discussion looking at how and why things are designed and implemented the way they are. In this session, we look at the initialization and configuration of a DbContext instance, including selection of the provider, creating DbSet instances, reading DbContextOptions, and DbContext pooling.\n\nCommunity Links: https://www.theurlist.com/dotnet-data-2022-06-29\n\nFeaturing: Arthur Vickers (@ajcvickers), Shay Rojansky (@shayrojansky)\n\nGet your questions answered on the Microsoft Q&A for .NET - https://aka.ms/dotnetqa\n​\nLearn .NET with free self-guided learning from Microsoft Learn: http://aka.ms/learndotnet\n\n#entityframework #efcore #orm"
  },
  {
    "Title": ".NET Data Community Standup - TPH, TPT, and TPC Inheritance mapping with EF Core",
    "Url": "https://video.weiler.rocks/watch?v=HaL6DKW1mrg",
    "Timestamp": "2022-08-04T04:02:01",
    "Domain": "video.weiler.rocks",
    "Description": "Type inheritance hierarchies as used in object-oriented programming do not map naturally to relational database schemas. In this live stream, we will look at different strategies for inheritance mapping when using EF Core with a relational database. This includes table-per-hierarchy (TPH) mapping, table-per-type (TPT) mapping, and table-per-concrete type (TPC) mapping, which is new in EF Core 7.0 preview 5. We will look at the consequences of the mapping on the generated SQL and consider the performance and storage implications. This will result in some guidance as to when each strategy should be used.\n\nCommunity Links: https://www.theurlist.com/dotnet-data-2022-06-15\n\nFeaturing: Arthur Vickers (@ajcvickers)\n\nGet your questions answered on the Microsoft Q&A for .NET - https://aka.ms/dotnetqa\n​\nLearn .NET with free self-guided learning from Microsoft Learn: http://aka.ms/learndotnet\n\n#entityframework #efcore #orm"
  },
  {
    "Title": ".NET Data Community Standup - Intercept this EF7 Preview 6 Event",
    "Url": "https://video.weiler.rocks/watch?v=EJs3sSetr2Q",
    "Timestamp": "2022-08-04T04:02:01",
    "Domain": "video.weiler.rocks",
    "Description": "EF7 includes a variety of new interceptors and events, as well as many improvements to the existing lifecycle hooks. In this session, Arthur and others from the .NET Data team will dive into this new functionality, including examples for intercepting materialization of entities, query expression trees, identity resolution when tracking, and optimistic concurrency violations. Join us for a fun-packed ride into the world of modifying EF behavior through interception with code galore!\n\nCommunity Links: https://www.theurlist.com/dotnet-data-2022-07-13\n\nFeaturing: Arthur Vickers (@ajcvickers), Shay Rojansky (@shayrojansky)\n\nGet your questions answered on the Microsoft Q&A for .NET - https://aka.ms/dotnetqa\n​\nLearn .NET with free self-guided learning from Microsoft Learn: http://aka.ms/learndotnet\n\n#efcore #entityframework #ef7"
  },
  {
    "Title": ".NET Data Community Standup - DbDataSource, a new System.Data abstraction",
    "Url": "https://inv.vern.cc/watch?v=vRUtHeUpU44",
    "Timestamp": "2022-08-04T03:02:34",
    "Domain": "inv.vern.cc",
    "Description": "In this episode of the .NET data community standup, we'll explore DbDataSource, a new abstraction being introduced to System.Data in .NET 7.0. DbDataSource unlocks easier integration of ADO.NET drivers with dependency injection, better management of advanced driver configuration, helps performance and more. Tune in to see improvements at the lower levels of the .NET data stack.\n\nCommunity Links: https://www.theurlist.com/dotnetdata-2022-07-27\n\nFeaturing: Arthur Vickers (@ajcvickers), Shay Rojansky (@shayrojansky)\n\nGet your questions answered on the Microsoft Q&A for .NET - https://aka.ms/dotnetqa\n​\nLearn .NET with free self-guided learning from Microsoft Learn: http://aka.ms/learndotnet\n\n#dotnet #data"
  },
  {
    "Title": ".NET Data Community Standup - DbContext Configuration and Lifetime - EF Core Architecture Part 2",
    "Url": "https://inv.vern.cc/watch?v=NPgFlqXPbK8",
    "Timestamp": "2022-08-04T03:02:34",
    "Domain": "inv.vern.cc",
    "Description": "Arthur and others from the EF Team continue their deep dive into the architecture of Entity Framework Core. This is a code-driven discussion looking at how and why things are designed and implemented the way they are. In this session, we look at the initialization and configuration of a DbContext instance, including selection of the provider, creating DbSet instances, reading DbContextOptions, and DbContext pooling.\n\nCommunity Links: https://www.theurlist.com/dotnet-data-2022-06-29\n\nFeaturing: Arthur Vickers (@ajcvickers), Shay Rojansky (@shayrojansky)\n\nGet your questions answered on the Microsoft Q&A for .NET - https://aka.ms/dotnetqa\n​\nLearn .NET with free self-guided learning from Microsoft Learn: http://aka.ms/learndotnet\n\n#entityframework #efcore #orm"
  },
  {
    "Title": ".NET Data Community Standup - Intercept this EF7 Preview 6 Event",
    "Url": "https://inv.vern.cc/watch?v=EJs3sSetr2Q",
    "Timestamp": "2022-08-04T03:02:34",
    "Domain": "inv.vern.cc",
    "Description": "EF7 includes a variety of new interceptors and events, as well as many improvements to the existing lifecycle hooks. In this session, Arthur and others from the .NET Data team will dive into this new functionality, including examples for intercepting materialization of entities, query expression trees, identity resolution when tracking, and optimistic concurrency violations. Join us for a fun-packed ride into the world of modifying EF behavior through interception with code galore!\n\nCommunity Links: https://www.theurlist.com/dotnet-data-2022-07-13\n\nFeaturing: Arthur Vickers (@ajcvickers), Shay Rojansky (@shayrojansky)\n\nGet your questions answered on the Microsoft Q&A for .NET - https://aka.ms/dotnetqa\n​\nLearn .NET with free self-guided learning from Microsoft Learn: http://aka.ms/learndotnet\n\n#efcore #entityframework #ef7"
  },
  {
    "Title": ".NET Data Community Standup - TPH, TPT, and TPC Inheritance mapping with EF Core",
    "Url": "https://inv.vern.cc/watch?v=HaL6DKW1mrg",
    "Timestamp": "2022-08-04T03:02:33",
    "Domain": "inv.vern.cc",
    "Description": "Type inheritance hierarchies as used in object-oriented programming do not map naturally to relational database schemas. In this live stream, we will look at different strategies for inheritance mapping when using EF Core with a relational database. This includes table-per-hierarchy (TPH) mapping, table-per-type (TPT) mapping, and table-per-concrete type (TPC) mapping, which is new in EF Core 7.0 preview 5. We will look at the consequences of the mapping on the generated SQL and consider the performance and storage implications. This will result in some guidance as to when each strategy should be used.\n\nCommunity Links: https://www.theurlist.com/dotnet-data-2022-06-15\n\nFeaturing: Arthur Vickers (@ajcvickers)\n\nGet your questions answered on the Microsoft Q&A for .NET - https://aka.ms/dotnetqa\n​\nLearn .NET with free self-guided learning from Microsoft Learn: http://aka.ms/learndotnet\n\n#entityframework #efcore #orm"
  },
  {
    "Title": "Matt Warren - Performance in the .NET Runtime - NDC London 2022",
    "Url": "https://ytb.trom.tf/watch?v=YcZ-nZa2XgA",
    "Timestamp": "2022-08-04T02:01:36",
    "Domain": "ytb.trom.tf",
    "Description": "We often take the .NET Runtime for granted and just let it get on with its job. But not only does it run our code, it ensures that it runs as fast as possible!\n\nIn this talk we'll take a walk through the internals of the 'Common Language Runtime' (CLR), from a performance perspective. Looking at some of the low-level tricks the .NET Core CLR does to make our code run as fast as possible. Covering 'Value Types', 'Tiered Compilation', 'Stubs' and more.\n\nAfterwards, you'll never take a simple 'method call' for granted again!!\n\n\nCheck out more of our featured speakers and talks at\nhttps://www.ndcconferences.com\nhttps://ndclondon.com/"
  },
  {
    "Title": "Matt Warren - Performance in the .NET Runtime - NDC London 2022",
    "Url": "https://www.youtube.com/watch?v=YcZ-nZa2XgA",
    "Timestamp": "2022-08-04T01:01:24",
    "Domain": "www.youtube.com",
    "Description": "We often take the .NET Runtime for granted and just let it get on with its job. But not only does it run our code, it ensures that it runs as fast as possibl..."
  },
  {
    "Title": "BrainSTARK, Part 0: Introduction",
    "Url": "https://aszepieniec.github.io/stark-brainfuck/",
    "Timestamp": "2022-08-04T01:01:22",
    "Domain": "aszepieniec.github.io",
    "Description": "Tutorial on the design of a STARK Engine, complete with working source code."
  },
  {
    "Title": "ErikEJ.SqlClient.Extensions 0.1.1-alpha",
    "Url": "https://www.nuget.org/packages/ErikEJ.SqlClient.Extensions/0.1.1-alpha",
    "Timestamp": "2022-08-04T00:01:34",
    "Domain": "www.nuget.org",
    "Description": "Makes it easier to use Microsoft.Data.SqlClient with Dependency Injection and adds ILogger logging of SqlClient events."
  }
]