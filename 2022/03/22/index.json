[
  {
    "Title": "Health Checks in ASP.NET Core - Code Maze",
    "Url": "https://code-maze.com/health-checks-aspnetcore/",
    "Timestamp": "2022-03-22T09:02:06",
    "Domain": "code-maze.com",
    "Description": "Health Checks in ASP.NET Core allow us to determine the overall health and availability of our application infrastructure."
  },
  {
    "Title": "Lanai, the mystery CPU architecture in LLVM",
    "Url": "https://q3k.org/lanai.html",
    "Timestamp": "2022-03-22T09:02:05",
    "Domain": "q3k.org",
    "Description": "Disclaimer: I have had access to some confidential information about some of the matter discussed in this page. However, everything written here is derived form publicly available sources, and references to these sources are also provided."
  },
  {
    "Title": "Microservices: Why Are We Doing This?",
    "Url": "https://michaeldehaan.substack.com/p/microservices-why-are-we-doing-this",
    "Timestamp": "2022-03-22T08:02:09",
    "Domain": "michaeldehaan.substack.com",
    "Description": "I‚Äôve written something like this before on my old (defunct) blog before, but new thoughts and realizations required that I revisit it. The topic? Microservices. The trend to build every single application as a series of tiny web services that talk to each other is growing in prominence, and starting to be picked up by a lot of new professional developers. The problem is, many people picking up this idea have not seen the times before and just assume this is a ‚Äúbest practice‚Äù."
  },
  {
    "Title": "Tutorial: Hosting Microsoft Orleans Application on Azure App Service with Cosmos DB",
    "Url": "https://nicksnettravels.builttoroam.com/tutorial-orleans-azure-app-service/",
    "Timestamp": "2022-03-22T06:02:04",
    "Domain": "nicksnettravels.builttoroam.com",
    "Description": "This post is going to wrap up the tutorial series on building a Hello World application using Microsoft Orleans. We‚Äôre going to be publishing the application to Azure with the Silo and Services being pushed to an Azure App Service, and linked via a Cosmos DB storage. If you want to check out the first ... Read more"
  },
  {
    "Title": "Hooks Considered Harmful",
    "Url": "https://labs.factorialhr.com/posts/hooks-considered-harmful",
    "Timestamp": "2022-03-22T06:02:02",
    "Domain": "labs.factorialhr.com",
    "Description": "React hooks changed radically how we build frontend applications allowing engineers to separate stateful logic from rendering. However, under a seemingly simple API there are some aspects of React hooks that are the source of bugs and performance issues. In this article, we will do a deep dive into the javascript internals to help us understand and overcome those pitfalls."
  },
  {
    "Title": "Why Don't You Use ...",
    "Url": "https://www.brendangregg.com/blog/2022-03-19/why-dont-you-use.html",
    "Timestamp": "2022-03-22T06:02:02",
    "Domain": "www.brendangregg.com",
    "Description": "Why Don't You Use"
  },
  {
    "Title": "Contravariant Dependency Injection",
    "Url": "https://blog.ploeh.dk/2022/03/21/contravariant-dependency-injection/",
    "Timestamp": "2022-03-22T06:02:02",
    "Domain": "blog.ploeh.dk",
    "Description": "How to use a DI Container in FP... or not."
  },
  {
    "Title": "WIP: ILogger for ConnectionMultiplexer by NickCraver ¬∑ Pull Request #2051 ¬∑ StackExchange/StackExchange.Redis",
    "Url": "https://github.com/StackExchange/StackExchange.Redis/pull/2051",
    "Timestamp": "2022-03-22T03:02:07",
    "Domain": "github.com",
    "Description": "Working on ILogger support, but without new overloads possibly. Since we support Action<ConfigurationOptions> this can be added today e.g. with o => o.Logger = myLogger:\nvar muxer = ConnectionMulti..."
  },
  {
    "Title": "Galaxies",
    "Url": "https://xkcd.com/2596/",
    "Timestamp": "2022-03-22T03:02:06",
    "Domain": "xkcd.com",
    "Description": ""
  },
  {
    "Title": "Password Purgatory",
    "Url": "https://passwordpurgatory.com/",
    "Timestamp": "2022-03-22T02:01:33",
    "Domain": "passwordpurgatory.com",
    "Description": "Password Purgatory is an intentionally infuriating API to request inane and ultimately unachievable password\ncriteria intended to deliberately frustrate the user. Regardless of the password used, it will always be rejected\nhence subjecting the user to \"purgatory\". Read more in the launch blog\npost."
  },
  {
    "Title": "My self-hosting setup has an UPS now, here's my experience with it",
    "Url": "https://ounapuu.ee/posts/2022/03/21/ups-i-did-it-again/",
    "Timestamp": "2022-03-22T01:02:19",
    "Domain": "ounapuu.ee",
    "Description": "UPS, I did it again üéµ"
  },
  {
    "Title": "Error handling across different languages",
    "Url": "https://blog.frankel.ch/error-handling/",
    "Timestamp": "2022-03-22T01:02:18",
    "Domain": "blog.frankel.ch",
    "Description": "I‚Äôve tried Go in the past, and the least I could say is that I was not enthusiastic about it. Chief among my griefs was how the language handled errors, or more precisely, what mechanism it provided developers with to manage them. In this post, I‚Äôd like to describe how a couple of popular languages cope with errors. A time before our time I could probably go back a long time, but I needed to choose a baseline at some point. In this post, the baseline is C. If you search for 'err"
  },
  {
    "Title": "Building Your Own Nodemon",
    "Url": "https://hire.jonasgalvez.com.br/2022/mar/20/building-your-own-nodemon/",
    "Timestamp": "2022-03-22T01:02:18",
    "Domain": "hire.jonasgalvez.com.br",
    "Description": "Hot reloading source code after changes is an essential DX feature. This is a solved issue in frontend development, with tools like webpack and Vite, but not so straightforward when it comes to Node.js."
  },
  {
    "Title": "SendilKumarN",
    "Url": "https://sendilkumarn.com/blog/my-views-on-zig-2022/",
    "Timestamp": "2022-03-22T01:02:18",
    "Domain": "sendilkumarn.com",
    "Description": "Zig is a general-purpose language that will eventually replace C."
  },
  {
    "Title": "Brian Robert Callahan",
    "Url": "https://briancallahan.net/blog/20220321.html",
    "Timestamp": "2022-03-22T01:02:18",
    "Domain": "briancallahan.net",
    "Description": "academic, developer, with an eye towards a brighter techno-social life"
  },
  {
    "Title": "Non-dotcom domains hurt startups",
    "Url": "https://www.darrennix.com/blog/non-dotcom/",
    "Timestamp": "2022-03-22T01:02:17",
    "Domain": "www.darrennix.com",
    "Description": "What do \"zillow\", \"trulia\", \"figma\", \"mercari\", \"strava\", \"zapier\", and \"spotify\" have in common? Twenty minutes ago a VC emailed me:  Hey Darren - wanted to ask you if you'd heard of {company}.ai? We're looking at their round.  I spent a few minutes scratching my head as to why this"
  },
  {
    "Title": "You, your parents, and the hotness of who you marry",
    "Url": "https://dynomight.net/hotness/",
    "Timestamp": "2022-03-22T01:02:17",
    "Domain": "dynomight.net",
    "Description": "Why do you disagree with your parents about the importance of looks?"
  },
  {
    "Title": "How To Criticize Coworkers",
    "Url": "https://alexturek.com/2022-03-18-How-to-criticize-coworkers/",
    "Timestamp": "2022-03-22T01:02:17",
    "Domain": "alexturek.com",
    "Description": "I originally wrote this as a doc, and did a talk w/ slides in Fall 2020 at Convoy. This is very focused on how to work in a software engineering team (surprise! that‚Äôs most of what I know about!) but I‚Äôve had friends say they‚Äôve shown this to their partners,..."
  },
  {
    "Title": "Hacks can be Good Code Too",
    "Url": "https://brianschrader.com/archive/hacks-can-be-good-code-too/",
    "Timestamp": "2022-03-22T01:02:16",
    "Domain": "brianschrader.com",
    "Description": "Writing code is, like everything in life, all about making tradeoffs. Code can be quick to write, but at the same time unreadable; it can be fast, but hard to maintain; and it can be flexible, but overly complex. Each of these factors are worth considering when writing Good Code. Complicating this is the fact that: what constitutes Good Code in one situation may not be ideal in another."
  },
  {
    "Title": "Penny Wise and Cloud Foolish",
    "Url": "https://danielcompton.net/2022/03/21/penny-wise-cloud-foolish",
    "Timestamp": "2022-03-22T01:02:16",
    "Domain": "danielcompton.net",
    "Description": "The two iron rules of cloud pricing introduced by AWS are:\n\n\nPrices never go up1.\nWe will absolutely soak you on data transfer charges.\n\n\nLast week Google Cloud published a post explaining how they we"
  },
  {
    "Title": "Structured (Synchronous) Concurrency",
    "Url": "https://fsantanna.github.io/structured-concurrency.html",
    "Timestamp": "2022-03-22T01:02:16",
    "Domain": "fsantanna.github.io",
    "Description": "https://twitter.com/_fsantanna"
  },
  {
    "Title": "Plain Text Sports",
    "Url": "https://plaintextsports.com/",
    "Timestamp": "2022-03-22T01:02:16",
    "Domain": "plaintextsports.com",
    "Description": "Instant live sports scores, play-by-play, and box scores"
  },
  {
    "Title": "Attendees from ABP Community Talks 2022.3: Domain-Driven Design & the ABP book",
    "Url": "https://kommunity.com/volosoft/events/abp-community-talks-20223-domain-driven-design-the-abp-book-b7d55a7b/attendees",
    "Timestamp": "2022-03-22T00:02:04",
    "Domain": "kommunity.com",
    "Description": "In this episode of the ABP Community Talks, Halil ƒ∞brahim Kalkan, Jon Galloway, Lee Richardson and Anto Subash will talk and discuss Domain-Driven Design, the o"
  },
  {
    "Title": "Release v0.5.0-pre.20220321.15 ¬∑ DamianEdwards/MinimalApis.Extensions",
    "Url": "https://github.com/DamianEdwards/MinimalApis.Extensions/releases/tag/v0.5.0-pre.20220321.15",
    "Timestamp": "2022-03-22T00:02:03",
    "Domain": "github.com",
    "Description": "Adds new Body<TBody> binding type for binding the request body to a string, byte[], or ReadOnlyMemory<byte> delegate parameter, e.g. app.MapGet(\"/myapi\", (Body<string> body) => $\"Received {body}\");..."
  }
]