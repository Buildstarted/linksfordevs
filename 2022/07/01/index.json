[
  {
    "Title": "Give Up GitHub - Software Freedom Conservancy",
    "Url": "https://sfconservancy.org/GiveUpGitHub/",
    "Timestamp": "2022-07-01T12:01:41",
    "Domain": "sfconservancy.org",
    "Description": "The Software Freedom Conservancy provides a non-profit home and services to Free, Libre and Open Source Software (FLOSS) projects."
  },
  {
    "Title": ".NET Data Community Standup - DbContext Configuration and Lifetime - EF Core Architecture Part 2",
    "Url": "https://youtu.be/NPgFlqXPbK8",
    "Timestamp": "2022-07-01T08:01:38",
    "Domain": "youtu.be",
    "Description": "Arthur and others from the EF Team continue their deep dive into the architecture of Entity Framework Core. This is a code-driven discussion looking at how a..."
  },
  {
    "Title": "Advanced TypeScript: Mapped Types and more",
    "Url": "https://medium.com/hypersphere-codes/advanced-typescript-mapped-types-and-more-b5d023bd6539",
    "Timestamp": "2022-07-01T06:02:46",
    "Domain": "medium.com",
    "Description": "Advanced TypeScript features can allow us type our code more strictly. I’ll show how you can use mapped types to autogenerate types for us!"
  },
  {
    "Title": "Introducing Shadower: A Minimalistic Load Testing Tool",
    "Url": "https://eng.uber.com/introducing-shadower-a-minimalistic-load-testing-tool/",
    "Timestamp": "2022-07-01T06:02:44",
    "Domain": "eng.uber.com",
    "Description": "Introduction Shadower is a load testing tool that allows us to provide load testing as a service to any microservice at Uber. Shadower started as a command line application that allowed us to read a local file to load test a local application. At the time, Maps PEs were heavily investing in Java GC tuning. We needed Shadower to be able to do request mirroring to make sure two different applications get about the same load and different types of loads (test multiple endpoints). In summary, we were starting the same application twice: once with the production configuration and once"
  },
  {
    "Title": "Deploy Azure Static Web Apps With Bicep | LINQ to Fail",
    "Url": "https://www.aaron-powell.com/posts/2022-06-29-deploy-swa-with-bicep/",
    "Timestamp": "2022-07-01T06:02:44",
    "Domain": "www.aaron-powell.com",
    "Description": "I'm trying to get better at using Infrastructure as Code, so first up - deployments with SWA!"
  },
  {
    "Title": "The Basics of Images, Containers, and Docker",
    "Url": "https://davidgiard.com/the-basics-of-images-containers-and-docker",
    "Timestamp": "2022-07-01T06:02:44",
    "Domain": "davidgiard.com",
    "Description": "A container allows us to virtualize applications and data and host this on top ..."
  },
  {
    "Title": "Vim 9.0 : vim online",
    "Url": "https://www.vim.org/vim90.php",
    "Timestamp": "2022-07-01T05:02:50",
    "Domain": "www.vim.org",
    "Description": "June 2022"
  },
  {
    "Title": "Brian Robert Callahan",
    "Url": "https://briancallahan.net/blog/20220629.html",
    "Timestamp": "2022-07-01T05:02:49",
    "Domain": "briancallahan.net",
    "Description": "academic, developer, with an eye towards a brighter techno-social life"
  },
  {
    "Title": "The Best Solution to Burnout We’ve Ever Heard | A Conversation With Slack, Netlify & Ambassador Labs",
    "Url": "https://devinterrupted.substack.com/p/the-best-solution-to-burnout-weve",
    "Timestamp": "2022-07-01T03:01:43",
    "Domain": "devinterrupted.substack.com",
    "Description": "With registration for our free October Interact conference now open, we wanted you to hear one of our favorite sessions from this past April’s Interact. Featuring the best minds from Slack, Netlify and Ambassador Labs, our session on Inspiring Engineering Leaders & Driving Developer Creativity turned into one of the best conversations we’ve ever heard on topics like dev toil, dev focus and dev burnout."
  },
  {
    "Title": "Writing .NET Application Services for Kubernetes",
    "Url": "https://mikehadlow.com/posts/2022-06-24-writing-dotnet-services-for-kubernetes/",
    "Timestamp": "2022-07-01T00:01:52",
    "Domain": "mikehadlow.com",
    "Description": "In a traditional .NET distributed application, application services (not to be confused with the Kubernetes ‘service’ object) would either be written as IIS hosted web applications or Windows Services. When building .NET (micro)services to be deployed in a Kubernetes cluster pretty much every facet of the service needs to be reconsidered, not only the hosting environment but the way configuration is accessed, how logging and monitoring work, and the options for state management and memory considerations. In this post I’ll bring my experience of migrating .NET applications to Kubernetes to enumerate some of the main ways that you’ll need to change the way you write them."
  }
]