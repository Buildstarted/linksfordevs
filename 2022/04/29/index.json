[
  {
    "Title": "103 Bits of Advice I Wish I Had Known",
    "Url": "https://kk.org/thetechnium/103-bits-of-advice-i-wish-i-had-known/",
    "Timestamp": "2022-04-29T04:01:44",
    "Domain": "kk.org",
    "Description": "Today is my birthday. I turn 70. I've learned a few things so far that might be helpful to others. For the past few years, I've jotted down bits of unsolicited advice each year and much to my surprise I"
  },
  {
    "Title": "Principal Software Engineer in Redmond, Washington, United States | Engineering at Microsoft",
    "Url": "https://careers.microsoft.com/us/en/job/1320476/Principal-Software-Engineer",
    "Timestamp": "2022-04-29T00:01:45",
    "Domain": "careers.microsoft.com",
    "Description": "Apply for Principal Software Engineer job with Microsoft in Redmond, Washington, United States. Engineering at Microsoft"
  },
  {
    "Title": "CoreWCF 1.0.0 Release",
    "Url": "https://corewcf.github.io/blog/2022/04/28/corewcf-1_0_0_release",
    "Timestamp": "2022-04-29T00:01:44",
    "Domain": "corewcf.github.io",
    "Description": "Today we've hit a big milestone and have released version 1.0.0 of CoreWCF. This is the end of the beginning of a long journey for me that started just over 5 years ago back in January of 2017. I was given 3 weeks to put together a basic prototype of what a WCF service implementation would look like built on .NET Core. At the end of the 3 weeks, I had a working implementation which could host a service using BasicHttpBinding. My prototype then sat there gathering dust as a proof of concept while it was decided what to do with it. There weren't the resources to develop this into a full product with feature parity to WCF, but there were many customers blocked unable to move to .NET Core without doing a complete rewrite of their service. It was eventually decided that I would spend some time cleaning up my prototype implementation, including adding NetTcp support, and the code would be donated to the open source community to see if this was something that a community would build around for it to live outside of Microsoft."
  }
]