[
  {
    "Title": "Immo Landwerth  ðŸ‡©ðŸ‡ª ðŸ‡ºðŸ‡¦ (@terrajobst@hachyderm.io)",
    "Url": "https://hachyderm.io/@terrajobst",
    "Timestamp": "2022-11-08T16:02:05",
    "Domain": "hachyderm.io",
    "Description": "3 Posts, 10 Following, 35 Followers Â· #IStandWithUkraine #blacklivesmatter Program manager on .NET at Microsoft. Opinions are my own. I tweet in GIFs and typo for a livng. He/Him."
  },
  {
    "Title": "Why is there a system sound called Asterisk? What sound does an Asterisk make anyway?",
    "Url": "https://devblogs.microsoft.com/oldnewthing/20221108-36/?p=107367",
    "Timestamp": "2022-11-08T15:01:35",
    "Domain": "devblogs.microsoft.com",
    "Description": "It's to accompany the asterisk, back when we had an asterisk."
  },
  {
    "Title": "Watch .NET Conf 2022 LIVE ðŸ”´ with me | .NET 7 Launch",
    "Url": "https://youtube.com/watch?v=bz0ENYdZp7M",
    "Timestamp": "2022-11-08T13:01:33",
    "Domain": "youtube.com",
    "Description": ".NET Conf Stream: https://www.youtube.com/watch?v=sMOGPRbsbcsSupport the stream: https://streamlabs.com/nick_chapsasI won't be streaming the actual video or ..."
  },
  {
    "Title": "How to deploy .NET APIs on Azure using GitHub actions - Code4IT",
    "Url": "https://www.code4it.dev/blog/deploy-api-on-azure-with-github-action/",
    "Timestamp": "2022-11-08T13:01:31",
    "Domain": "www.code4it.dev",
    "Description": "Building APIs with .NET is easy. Deploying them on Azure is easy too, with GitHub Actions!"
  },
  {
    "Title": "ADO.NET provider 9.1.0.0 for Firebird is ready",
    "Url": "https://www.tabsoverspaces.com/233906-ado-net-provider-9-1-0-0-for-firebird-is-ready",
    "Timestamp": "2022-11-08T11:03:25",
    "Domain": "www.tabsoverspaces.com",
    "Description": "8 Nov 2022\n\t\n\t 1 mins\n\t\n\t .NET, C#, Databases in general, Entity Framework, Entity Framework Core, Entity SQL, Firebird, LINQ, SQL, Visual Studio"
  },
  {
    "Title": "How to Use HTML Agility Pack in C# - Code Maze",
    "Url": "https://code-maze.com/html-agility-pack-csharp/",
    "Timestamp": "2022-11-08T09:03:39",
    "Domain": "code-maze.com",
    "Description": "HTML Agility Pack is a popular third-party library to read, write and update HTML documents programmatically in C#."
  },
  {
    "Title": "Polling asynchronous APIs with Azure Durable Functions",
    "Url": "https://blog.elmah.io/polling-asynchronous-apis-with-azure-durable-functions/",
    "Timestamp": "2022-11-08T09:03:38",
    "Domain": "blog.elmah.io",
    "Description": "Learn about polling an asynchronous API with Azure Durable Functions. Easily integrate with async REST APIs using an initial request and retries."
  },
  {
    "Title": "gRPC Communication In Azure Container Apps - Part 1 - Bit of Technology",
    "Url": "https://bitoftech.net/2022/11/07/grpc-communication-in-azure-container-apps/",
    "Timestamp": "2022-11-08T06:02:13",
    "Domain": "bitoftech.net",
    "Description": "Post shows how to build a gRPC service and gRPC client and enable gRPC communication between Azure Container Apps"
  },
  {
    "Title": "Implementing TDD in a .NET Application",
    "Url": "https://www.telerik.com/blogs/implementing-tdd-dotnet-application",
    "Timestamp": "2022-11-08T06:02:12",
    "Domain": "www.telerik.com",
    "Description": "Check out in this article how TDD (test-driven development) works and how to implement it in a .NET application."
  },
  {
    "Title": "NuGet Central Package Management Comes To JetBrains Rider | The .NET Tools Blog",
    "Url": "https://blog.jetbrains.com/dotnet/2022/11/07/nuget-central-package-management-comes-to-jetbrains-rider/",
    "Timestamp": "2022-11-08T06:02:10",
    "Domain": "blog.jetbrains.com",
    "Description": "Weâ€™re introducing one of the .NET ecosystemâ€™s newest features in JetBrains Rider 2022.3 EAP, Central Package Management (CPM). CPM allows developers to manage NuGet dependencies in a .NET solution fro"
  },
  {
    "Title": "Contextual Feature Filters in ASP.NET Core - Code Rethinked",
    "Url": "https://coderethinked.com/contextual-feature-filters-in-asp-net-core/",
    "Timestamp": "2022-11-08T06:02:09",
    "Domain": "coderethinked.com",
    "Description": "Contextual feature filters are helpful and allow you to enable/disable a feature based on the context supplied."
  },
  {
    "Title": "Peter Ritchie's Blog - Fundamental ASP.Net Minimal API Integration Tests",
    "Url": "https://blog.peterritchie.com/posts/fundamental-webapi-integration-tests",
    "Timestamp": "2022-11-08T06:02:09",
    "Domain": "blog.peterritchie.com",
    "Description": "Peter Ritchie"
  },
  {
    "Title": "Top 10 Dotnet Exception Anti-Patterns in C#",
    "Url": "https://newdevsguide.com/2022/11/06/exception-anti-patterns-in-csharp/",
    "Timestamp": "2022-11-08T06:02:09",
    "Domain": "newdevsguide.com",
    "Description": "In this article we'll explore the top 10 mistakes I see new and seasoned developers make with exception management in dotnet source code. These principles should be valid for all dotnet languages, but examples will be provided in C#."
  },
  {
    "Title": "Polly with .NET 6, Part 6 - Policy Wraps with Minimal APIs | no dogma blog",
    "Url": "https://nodogmablog.bryanhogan.net/2022/11/polly-with-net-6-part-6-policy-wraps-with-minimal-apis/",
    "Timestamp": "2022-11-08T06:02:09",
    "Domain": "nodogmablog.bryanhogan.net",
    "Description": "Polly Policy Wraps let you apply multiple types of resilience to a single operation. Using them with Minimal API Endpoints is easy, read on to see how."
  },
  {
    "Title": "Applicative assertions",
    "Url": "https://blog.ploeh.dk/2022/11/07/applicative-assertions/",
    "Timestamp": "2022-11-08T06:02:08",
    "Domain": "blog.ploeh.dk",
    "Description": "An exploration."
  },
  {
    "Title": "GitHub - Orbis-Tertius/MVlookups: A note on multivariate lookup arguments",
    "Url": "https://github.com/Orbis-Tertius/MVlookups",
    "Timestamp": "2022-11-08T05:03:35",
    "Domain": "github.com",
    "Description": "A note on multivariate lookup arguments. Contribute to Orbis-Tertius/MVlookups development by creating an account on GitHub."
  },
  {
    "Title": "Get Revenge On Your Ex Shows You How To Get Revenge Anonymously",
    "Url": "https://getrevengeonyourex.com/",
    "Timestamp": "2022-11-08T05:03:35",
    "Domain": "getrevengeonyourex.com",
    "Description": "Why Your Ex Deserves Revenge"
  },
  {
    "Title": "GitHub - farcasterxyz/protocol: Specification of the Farcaster Protocol",
    "Url": "https://github.com/farcasterxyz/protocol",
    "Timestamp": "2022-11-08T01:01:56",
    "Domain": "github.com",
    "Description": "Specification of the Farcaster Protocol. Contribute to farcasterxyz/protocol development by creating an account on GitHub."
  },
  {
    "Title": "An F# Primitive Giraffe Wearing Lenses: A Ports and Adapters Story",
    "Url": "https://www.codit.eu/blog/a-f-primitive-giraffe-wearing-lenses-a-ports-and-adapters-story/",
    "Timestamp": "2022-11-08T00:01:43",
    "Domain": "www.codit.eu",
    "Description": "The start of both architectures is the same: the domain. The ports and adapters architecture is often referred to as an onion structure. The reason for this is that when the application is growing youâ€™ll see a set of layers being added on top of each other, like onion peel. The domain is always the core, the layers on top of that depend on your application. The outside layer is the outside world: this could be writing to the database, receiving an API request, or reading a file on disk â€“ anything that is not under your control should be considered the â€˜outside worldâ€™ or â€˜untrustedâ€™. Youâ€™ll notice the core of your union, the place within your control, is fairly small. In functional programming, this domain is usually pure. This is a big difference from the object-oriented approach where you inject â€˜impureâ€™ or â€˜untrustedâ€™ services within core functionality. The data direction is a lot simpler and descriptive in a port and adapter architecture. The direction and relation between the layers are made explicit while in a dependency injection system. This relation is often scattered."
  }
]