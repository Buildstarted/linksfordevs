[
  {
    "Title": "You Give REST a Bad Name",
    "Url": "https://www.youtube.com/watch?v=nSKp2StlS6s",
    "Timestamp": "2019-11-08T21:00:23",
    "Domain": "www.youtube.com",
    "Description": "A parody of 'You Give Love a Bad Name' - about hypermedia APIs. No, really."
  },
  {
    "Title": "Larry Ewing | Update Conference Prague 2019",
    "Url": "https://www.updateconference.net/en/2019/speaker/larry-ewing",
    "Timestamp": "2019-11-08T20:00:21",
    "Domain": "www.updateconference.net",
    "Description": "Larry is a Senior Software Engineering Manager at Microsoft on the Mono WebAssembly team.\nHe has been an Open Source software contributor for more than 20 years and worked on\n.NET based Linux desktop applications and Moonlight at Novell before joining Xamarin\nto build their business infrastructure."
  },
  {
    "Title": "Pro Tip: using static Microsoft.AspNetCore.Http.StatusCodes",
    "Url": "https://stu.dev/pro-tip-using-static-microsoft-aspnetcore-http-statuscodes/",
    "Timestamp": "2019-11-08T19:00:04",
    "Domain": "stu.dev",
    "Description": "When building a web server in ASP.NET Core, the APIs that deal with status codes are int based, there are multiple ways to express a status code in your code, in this post I will share my favourite. // Stop doing this:context.Response.StatusCode = (int) HttpStatusCode.PreconditionFailed;A System."
  },
  {
    "Title": "Fixing Random, bonus episode 2: pigeons and the noisy-or distribution",
    "Url": "https://ericlippert.com/2019/11/08/fixing-random-bonus-episode-2-pigeons-and-the-noisy-or-distribution/",
    "Timestamp": "2019-11-08T18:00:18",
    "Domain": "ericlippert.com",
    "Description": "Source code for this episode is here. Welcome to this special bonus episode of Fixing Random, the immensely long blog series where I discuss ways to add probabilistic programming features into C#. ‚Ä¶"
  },
  {
    "Title": "Homepage | ZKProof Standards",
    "Url": "http://zkproof.org/",
    "Timestamp": "2019-11-08T17:00:13",
    "Domain": "zkproof.org",
    "Description": "ZKProof is an open-industry academic initiative that seeks to mainstream zero-knowledge proof (ZKP) cryptography through an inclusive, community-driven standardization process that focuses on interoperability and security."
  },
  {
    "Title": "dotnet/SqlClient",
    "Url": "https://github.com/dotnet/SqlClient/blob/master/src/Microsoft.Data.SqlClient/netfx/src/Microsoft/Data/SqlClient/TdsParser.cs",
    "Timestamp": "2019-11-08T15:00:26",
    "Domain": "github.com",
    "Description": "Microsoft.Data.SqlClient provides database connectivity to SQL Server for .NET applications. - dotnet/SqlClient"
  },
  {
    "Title": "I Don't Like Notebooks - Joel Grus - #JupyterCon 2018",
    "Url": "https://docs.google.com/presentation/d/1n2RlMdmv1p25Xy5thJUhkKGvjtV-dkAIsUXP-AL4ffI/edit",
    "Timestamp": "2019-11-08T12:00:20",
    "Domain": "docs.google.com",
    "Description": "I Don't Like Notebooks hi, I'm Joel, and I don't like notebooks Joel Grus (@joelgrus) #JupyterCon 2018"
  },
  {
    "Title": "Announcing .NET Jupyter Notebooks - Scott Hanselman",
    "Url": "https://www.hanselman.com/blog/AnnouncingNETJupyterNotebooks.aspx",
    "Timestamp": "2019-11-08T08:00:19",
    "Domain": "www.hanselman.com",
    "Description": "Jupyter Notebooks has been the significant player in the interactive development space for many years, and Notebooks ..."
  },
  {
    "Title": "Maintaining cryptographic library for 12 languages",
    "Url": "https://speakerdeck.com/vixentael/maintaining-cryptographic-library-for-12-languages",
    "Timestamp": "2019-11-08T08:00:14",
    "Domain": "speakerdeck.com",
    "Description": "Maintaining cross-platform cryptographic library is a journey full of unexpected bugs, language-specific hacks, difficult decisions and endless struggle to make developer-facing APIs easy-to-use and hard-to-misuse. \n\nhttps://github.com/cossacklabs/themis\n\nThis talk is useful for ppl that believe that perfect crypto lib is a C lib with 1-page readme :)\n\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî-\n\nAs developers, what do we want from using cryptographic tools? They should be easy to use and hard to misuse, cover complete use-cases instead of providing crypto-primitives, support language-specific style, work in the same way on numerous platforms and languages. Basically, we want less stress and more work done.\n\nBut is it so easy to maintain cross-platform crypto library? How to simplify complex crypto concepts into simple \"encrypt(msg, key)\" and \"decrypt(data, key)\" functions? How to provide unified API for 11 languages, when some of them are strongly-typed and another one is javascript? Secure by default: what design choices should be made to protect from misuse. Multi-platformness: how to make sure that message encrypted using Ruby on x64 Ubuntu 18.04 will be [successfully] decrypted on iOS12 on iPhone armv7s? Testing wildness: static analyzers, fuzzing, unit tests, integration tests. Docs: developers copy-paste from readme anyway, how to make sure that they copy-paste correct things.\n\nI'll describe the 4yrs experience on maintaining multi-platform open source library Themis: from API design to language-specific hacks. \n\nBonus questions:\n- what maintainers completely forget about: the biggest fail reason for users.\n- what is faster in Go: calling OpenSSL via c-Go interop or using native Go crypto primitives?\n- how to deal with multi-platformness, if BoringSSL for iOS doesn't support AES XTS?\n- epic bug with iOS-Android compatibility, which appears to be a sad story about `size_t`.\n- switching cryptographic backends for fun and profit: switching between BoringSSL, OpenSSL, LibreSSL, ~libsodium and CommonCrypto~, and governmental crypto standards of some countries, leaving same high-level API.\n\nKey takeaways: \n- cryptography is easy, but \"secure by default\" APIs are hard; \n- never agree to support multi-platform libs; \n- each language has unique hacks and typical mistakes, deal with it."
  },
  {
    "Title": "Initial HTTP/3 Implementation in Kestrel by jkotalik ¬∑ Pull Request #16914 ¬∑ dotnet/aspnetcore",
    "Url": "https://github.com/aspnet/AspNetCore/pull/16914",
    "Timestamp": "2019-11-08T06:00:07",
    "Domain": "github.com",
    "Description": "üí∞ üí∞ üí∞ üí∞ üí∞ üí∞\nThis is the initial port of an HTTP/3 server implementation in Kestrel. It is very rough right now; many things need to be refactored and improved.\nThis PR will add Http3Connection, Htt..."
  },
  {
    "Title": "Bosses at Vice and The Fader Ignored Sexual Misconduct, Employees Allege, Until Women on Twitter Began Exposing It",
    "Url": "https://jezebel.com/bosses-at-vice-and-the-fader-ignored-sexual-misconduct-1839636779",
    "Timestamp": "2019-11-08T02:00:23",
    "Domain": "jezebel.com",
    "Description": "On November 2, former music journalist Lauren Nostro published a tweet: ‚ÄúIt‚Äôs so wild that {redacted} is able to run an entire digital magazine when hes [sic] also running people out of the place because ‚Äúhe can‚Äôt keep his dick in his pants.‚Äù In the tight-knit world of music journalism, the subject of her tweet was intended to be obvious. But minutes later, Nostro added a name for clarity. ‚ÄúFuck it...Stop hiring Eric Sundermann,‚Äù she wrote."
  }
]