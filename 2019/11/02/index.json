[
  {
    "Title": "Rewrite of Array.Copy fast path in C# by jkotas · Pull Request #27634 · dotnet/coreclr",
    "Url": "https://github.com/dotnet/coreclr/pull/27634",
    "Timestamp": "2019-11-02T22:00:13",
    "Domain": "github.com",
    "Description": "Contributes to #27106"
  },
  {
    "Title": "Using the Resource Timing API",
    "Url": "https://developer.mozilla.org/en-US/docs/Web/API/Resource_Timing_API/Using_the_Resource_Timing_API",
    "Timestamp": "2019-11-02T21:00:12",
    "Domain": "developer.mozilla.org",
    "Description": "The Resource Timing API provides a way to retrieve and analyze detailed network timing data regarding the loading of an application's resource(s). An application can use the timing metrics to determine, for example, the length of time it takes to fetch a specific resource such as an XMLHttpRequest, SVG, image, script, etc.)."
  },
  {
    "Title": "SteeltoeOSS/steeltoe",
    "Url": "https://github.com/SteeltoeOSS/steeltoe/tree/master/roadmaps",
    "Timestamp": "2019-11-02T16:00:17",
    "Domain": "github.com",
    "Description": "Steeltoe .NET Core Components: CircuitBreaker, Configuration, Connectors, Discovery, Logging, Management, and Security - SteeltoeOSS/steeltoe"
  },
  {
    "Title": "Create cloud-native .NET microservices with Steeltoe.",
    "Url": "https://steeltoe.io/",
    "Timestamp": "2019-11-02T16:00:14",
    "Domain": "steeltoe.io",
    "Description": "Steeltoe is a .NET framework that provides libraries for quickly creating cloud-native microservices. It's a friend of Spring Cloud and can be used on any cloud platform."
  },
  {
    "Title": "NordVPN users’ passwords exposed in mass credential-stuffing attacks",
    "Url": "https://arstechnica.com/information-technology/2019/11/nordvpn-users-passwords-exposed-in-mass-credential-stuffing-attacks/",
    "Timestamp": "2019-11-02T09:00:20",
    "Domain": "arstechnica.com",
    "Description": "Many of the dumps have been pulled off public webpages, but at least one remains."
  },
  {
    "Title": "The history of the GC configs | .NET Blog",
    "Url": "https://devblogs.microsoft.com/dotnet/the-history-of-the-gc-configs/",
    "Timestamp": "2019-11-02T09:00:17",
    "Domain": "devblogs.microsoft.com",
    "Description": "Recently, Nick from Stack Overflow tweeted about his experience of using the .NET Core GC configs – he seemed quite happy with them (minus the fact they are not documented well which is something I’m talking to our doc folks about)."
  },
  {
    "Title": "Blazor Component Lifecycle Diagram",
    "Url": "https://knowledge-base.havit.eu/2019/11/02/blazor-component-lifecycle-diagram/",
    "Timestamp": "2019-11-02T09:00:10",
    "Domain": "knowledge-base.havit.eu",
    "Description": "Blazor Component Lifecycle Diagram.pdf Get familiar with basic Blazor (Razor) Component Lifestyle Methods: SetParametersAsync OnInitialized, OnInitializedAsync OnParametersSet, OnParametersSetAsync…"
  },
  {
    "Title": "07 Political and controversial matters",
    "Url": "https://www.asa.org.uk/type/broadcast/code_section/07.html",
    "Timestamp": "2019-11-02T04:00:11",
    "Domain": "www.asa.org.uk",
    "Description": "The Communications Act 2003 prohibits political advertising. The term \"political\" is used in the Code in a wider sense than \"party political\". The prohibition includes, for example, campaigning for the purposes of influencing legislation or executive action by local or national (including foreign) governments. The definitions of \"political\" for the purposes of an advertiser's status and for the content of advertisements are set out in section 321 of the Communications Act 2003 (\"the Act\"). The relevant parts of that section are reproduced below in Rule 7.2."
  },
  {
    "Title": "One solution (setup) to rule them all – Blazor Webassembly, Blazor Server, Blazor Electron",
    "Url": "https://visionsincode.wordpress.com/2019/11/01/one-solution-setup-to-rule-them-all-blazor-webassembly-blazor-server-blazor-electron/",
    "Timestamp": "2019-11-02T01:00:10",
    "Domain": "visionsincode.wordpress.com",
    "Description": "Hello my dear friends and Blazorians :) This post will be a follow up on the previous post – Make it all dynamic in BLAZOR – Routing, Pages and Components But before we start, I want to give …"
  },
  {
    "Title": "Credential stuffing explained: How to prevent, detect and mitigate",
    "Url": "https://www.csoonline.com/article/3448558/credential-stuffing-explained-how-to-prevent-detect-and-defend-against-it.html",
    "Timestamp": "2019-11-02T00:00:19",
    "Domain": "www.csoonline.com",
    "Description": "The automated use of breached usernames and passwords to access accounts is low risk, high reward for cybercriminals. Here's how to make it harder for them to use credential stuffing."
  }
]