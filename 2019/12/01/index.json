[
  {
    "Title": "25 Days Of Serverless: Content Collection - DEV Community üë©‚Äçüíªüë®‚Äçüíª",
    "Url": "https://dev.to/azure/25-days-of-serverless-content-collection-3baj",
    "Timestamp": "2019-12-01T18:00:06",
    "Domain": "dev.to",
    "Description": "A bookmark-worthy collection of articles from the #25DaysOfServerless challenge that runs Dec 1-25, 2019. Learn more at https://aka.ms/25daysofserverless. Tagged with azure, serverless, 25daysofserverless, azurefunctions."
  },
  {
    "Title": "25 Days of Serverless",
    "Url": "https://25daysofserverless.com/",
    "Timestamp": "2019-12-01T17:00:04",
    "Domain": "25daysofserverless.com",
    "Description": "Each day between now and December 25 will bring a new problem to solve using serverless technology. Solve it in the programming language of your choice and submit your solution via GitHub. We'll showcase the best solutions every week and possibly in a final series recap!"
  },
  {
    "Title": "chrissainty/25DaysOfServerless",
    "Url": "https://github.com/chrissainty/25DaysOfServerless",
    "Timestamp": "2019-12-01T14:00:05",
    "Domain": "github.com",
    "Description": "Following the 25 Days of Serverless Challenge 2019 - chrissainty/25DaysOfServerless"
  },
  {
    "Title": "Running NPM Scripts From A .NET Core Process",
    "Url": "https://khalidabuhakmeh.com/running-npm-scripts-from-a-dotnet-core-process",
    "Timestamp": "2019-12-01T10:00:04",
    "Domain": "khalidabuhakmeh.com",
    "Description": "It‚Äôs 2019, and no one can argue that to be a successful developer, you need a couple of tools in your toolbox. For ASP.NET developers, they can build web applications and run Kestrel as a web server. For front end developers, many UI frameworks have their own hot-reload capable web servers. In this post, I‚Äôll show you .NET developers how to start a front end web server from their .NET Core process and use that in their C# application."
  },
  {
    "Title": "Line Rider - Hungarian Rhapsody No. 2 (Liszt)",
    "Url": "https://www.youtube.com/watch?v=oOpWNtF9wT8",
    "Timestamp": "2019-12-01T08:00:12",
    "Domain": "www.youtube.com",
    "Description": "Phew!  My longest line rider yet, but it was fun to do.  I really love this piece of music, and some may recognise it from a famous "
  },
  {
    "Title": "Browser Preview - Visual Studio Marketplace",
    "Url": "http://aka.ms/browser-preview",
    "Timestamp": "2019-12-01T08:00:09",
    "Domain": "aka.ms",
    "Description": "Browser Preview for VS Code enables you to open a real browser preview inside your editor that you can debug. Browser Preview is powered by Chrome Headless, and works by starting a headless Chrome instance in a new process. This enables a secure way to render web content inside VS Code, and enables interesting features such as in-editor debugging and more!"
  },
  {
    "Title": "Compiler Explorer - C++ (x86-64 clang 9.0.0)",
    "Url": "https://godbolt.org/z/_VRNqc",
    "Timestamp": "2019-12-01T04:00:14",
    "Domain": "godbolt.org",
    "Description": "/* Twitter don't spoil this by putting the\nfirst lines of code into a card. Ok, needs\na little more padding. Ok, there we go. */\n\nint typedef(foo);\n\nfoo main()\n{\n    return 0;\n}\n\n/***               DISCUSSION                   ***\\\n\nThe first thing to know is that you can frivolously\nput parentheses into variable declarations:\n\n  int (foo);\n\nThe second thing to know is that you can put the typedef\nanywhere in the declarator before the \"variable\" name:\n\n  struct {\n    int x;\n    int y;\n  } typedef foo;\n\nWhy? I don't know, but it's this way in the C89,\nC99, and C11 specifications.\n\nPut these together, and\n\n  int typedef (foo);\n\nis perfectly legal.\n\n(It can't declare a function 'typedef' anymore than\n\n  int float(foo);\n\ncould declare a function 'float'; those names are\n'keywords' and cannot be reused for other purposes,\nthe way things like typedef names can be.\n\nAnd it's not a syntax error because I wouldn't have\nbothered making a quiz if it were an error.\n\n\\***                                              ***/"
  }
]