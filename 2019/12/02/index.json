[
  {
    "Title": "Why does an industry I've never heard of know so much about me?",
    "Url": "https://www.abc.net.au/news/science/2019-12-03/data-enrichment-industry-privacy-breach-people-data-labs/11751786",
    "Timestamp": "2019-12-02T22:00:11",
    "Domain": "www.abc.net.au",
    "Description": "There are companies buying and selling your information behind the scenes, and you probably won't know until it's leaked."
  },
  {
    "Title": "",
    "Url": "https://0.30000000000000004.com/",
    "Timestamp": "2019-12-02T20:35:09",
    "Domain": "0.30000000000000004.com",
    "Description": "Your language isn't broken, it's doing floating point math.\n        Computers can only natively store integers,\n        so they need some way of representing decimal numbers.\n        This representation comes with some degree of inaccuracy.\n        That's why, more often than not, .1 + .2 != .3."
  },
  {
    "Title": "Compiler Explorer - C++ (x86-64 clang 7.0.0)",
    "Url": "https://godbolt.org/z/KAsFPY",
    "Timestamp": "2019-12-02T20:00:15",
    "Domain": "godbolt.org",
    "Description": "void append_vector(std::vector<long double> foo, std::vector<long double> bar)\n{\n    for (int i=0; i < bar.size(); ++i)\n      foo.push_back(bar[i]);\n}"
  },
  {
    "Title": "Episode v1.3 - 12 Configuration Blues",
    "Url": "https://dnistream.fireside.fm/v1-3",
    "Timestamp": "2019-12-02T20:00:05",
    "Domain": "dnistream.fireside.fm",
    "Description": "Chris is joined by Steve Collins to talk about the wonderful world of configuration files. What wonders do they hold? How many configuration files does it take to setup an application? How to handle secure connection information across environments? And is it really worth it?"
  },
  {
    "Title": "Exploring borrowed annotations in C#",
    "Url": "https://blog.paranoidcoding.com/2019/12/02/borrowing.html",
    "Timestamp": "2019-12-02T19:00:18",
    "Domain": "blog.paranoidcoding.com",
    "Description": "One request I see fairly often for C# is to add the concept of borrowed values. That is values which can be used but\nnot stored beyond the invocation of a particular method. This generally comes up in the context of features which \nrequire a form of ownership semantics like stack allocation of classes, using statements, resource management, etc …\nBorrowing provides a way to safely use owned values without complicated ownership transfer."
  },
  {
    "Title": "dotnet/runtime",
    "Url": "https://github.com/dotnet/runtime",
    "Timestamp": "2019-12-02T18:00:09",
    "Domain": "github.com",
    "Description": ".NET is a cross-platform runtime for cloud, IoT, and desktop apps. - dotnet/runtime"
  },
  {
    "Title": "Guarding Against Physical Attacks: The Xbox One Story — Tony Chen, Microsoft",
    "Url": "https://www.youtube.com/watch?v=U7VwtOrwceo",
    "Timestamp": "2019-12-02T12:00:10",
    "Domain": "www.youtube.com",
    "Description": "https://PlatformSecuritySummit.com/2019/speaker/chen\n\nEvery game console since the first Atari was more or less designed to prevent the piracy of games and yet every single game console has been successfully modified to enable piracy. However, this trend has come to an end. Both the Xbox One and the PS4 have now been on the market for close to 6 years, without hackers being able to crack the system to enable piracy or cheating. This is the first time in history that game consoles have lasted this long without being cracked to enable piracy.\n\nIn this talk, we will discuss how we achieved this for the Xbox One. We will first describe the Xbox security design goals and why it needs to guard against hardware attacks, followed by descriptions of the hardware and software architecture to keep the Xbox secure. This includes details about the custom SoC we built with AMD and how we addressed the fact that all data read from flash, the hard drive, and even DRAM cannot be trusted. We will also discuss the corresponding software changes we made to keep the system and the games secure."
  },
  {
    "Title": "BlueHat Seattle 2019 || Guarding Against Physical Attacks: The Xbox One Story",
    "Url": "https://www.youtube.com/watch?v=quLa6kzzra0",
    "Timestamp": "2019-12-02T11:00:11",
    "Domain": "www.youtube.com",
    "Description": "Tony Chen\n\nEvery game console since the first Atari was more or less designed to prevent the piracy of games and yet every single game console has been successfully modified to enable piracy. However, this trend has come to an end. Both the Xbox One and the PS4 have now been on the market for close to 6 years, without hackers being able to crack the system to enable piracy or cheating. This is the first time in history that game consoles have lasted this long without being cracked. In this talk, we will discuss how we achieved this for the Xbox One. We will first describe the Xbox security design goals and why it needs to guard against physical attacks, followed by descriptions of the hardware and software architecture to keep the Xbox secure. This includes details about the custom SoC we built with AMD and how we addressed the fact that all data read from flash, the hard drive, and even DRAM cannot be trusted. We will also discuss the corresponding software changes needed with the custom hardware to keep the system and the games secure against physical attacks."
  },
  {
    "Title": "EfCore.GenericEventRunner: an event-driven library that works with EF Core – The Reformed Programmer",
    "Url": "https://www.thereformedprogrammer.net/efcore-genericeventrunner-an-event-driven-library-that-works-with-ef-core/",
    "Timestamp": "2019-12-02T10:00:05",
    "Domain": "www.thereformedprogrammer.net",
    "Description": "Last Updated: January 3, 2020 | Created: December 1, 2019"
  },
  {
    "Title": "Using HTTP Request Routes, Request Body, and Query string parameters for Authorization in ASP.NET Core",
    "Url": "https://damienbod.com/2019/12/02/using-http-request-routes-request-body-and-query-string-parameters-for-authorization-in-asp-net-core/",
    "Timestamp": "2019-12-02T08:00:09",
    "Domain": "damienbod.com",
    "Description": "This post shows how HTTP route parameters, a HTTP request body or HTTP request query string parameters can be used for authorization in ASP.NET Core. Code: Authorization using ASP.NET Core Route pa…"
  },
  {
    "Title": "Edward Thomson: GitHub Actions Day 1: CI/CD Triggers",
    "Url": "http://www.edwardthomson.com/blog/github_actions_1_cicd_triggers.html",
    "Timestamp": "2019-12-02T03:00:05",
    "Domain": "www.edwardthomson.com",
    "Description": "GitHub Actions is a unique system: it provides CI/CD build functionality - the ability to build and test pull requests and merges into your master branch - but it's more than just a build system.  So you need to specify when workflows should run, with triggers.  For CI/CD workflows, I like to use the push and pull_request triggers, and scope it to the branches that I'm interested in."
  }
]