[
  {
    "Title": "Just for Fun. No, Really.",
    "Url": "https://justforfunnoreally.dev/",
    "Timestamp": "2024-09-10T12:01:02",
    "Domain": "justforfunnoreally.dev",
    "Description": "We like to write software! Coding is a zigzag journey of problem-solving,\n    and the destination is less important than some might think."
  },
  {
    "Title": "puckipedia",
    "Url": "https://puckipedia.com/7hkj-98sq/qixt",
    "Timestamp": "2024-09-10T09:01:04",
    "Domain": "puckipedia.com",
    "Description": "okay so. nix 2.24+ vuln: nar unpacking is fucked, and local unprivileged users, or any binary cache you have configured, can just Get Root on your systemif you create a nar file with a directory containing both a symlink and a directory with the same name, the symlink will be followed and filled with the contents you put in that directory due to a refactoring mistakeand, as the nix daemon usually runs as root (with the nix store mounted read-write), it's possible to write files into e.g. /run/current-system/etc/systemd/system. and as such, and get persistent root access from unpacking a malicious NAR.now do you make Nix read a NAR? well... there's two primary waysany untrusted user that can talk to the nix daemon can write NARs that are either content-addressed, or signed by a trusted key, into the Nix store;...and any binary cache can do this as well, as the daemon will fetch nar files from the binary cache.now this vuln would be evil but local privesc only if this was all, except for a very funny second issue:the signature on NAR files is validated only *after* unpacking the NARso any malicious binary cache can reuse the signature of, say, a store path on cache.nixos, and (this is very likely, of course) if the nix daemon trusts the signature, it will end up unpacking any nar of the cache's choice without checking that the signature (or even hash!) matchesin certain cases (e.g. there's a symlink pointing to root in a trusted nar) this can even be done entirely silently, which is .. very bad.at this point the disclosure timeline has passed; and a point release was even made after the vulnerability was well known by the entire team (GHSA-h4vv-h3jq-v493 was opened a day before the point release); and the severity of the vulnerability is high enough that i want people to be aware of this issue(it's possible to mitigate this issue by downgrading to Nix 2.23, or setting allowed-users to only trusted users; and making sure any binary caches you have set are https and very trusted.)"
  },
  {
    "Title": "Monocaster",
    "Url": "https://xkcd.com/2983/",
    "Timestamp": "2024-09-10T05:01:00",
    "Domain": "xkcd.com",
    "Description": ""
  },
  {
    "Title": "Project Hammer – Jacob Filipp",
    "Url": "https://jacobfilipp.com/hammer/",
    "Timestamp": "2024-09-10T03:01:07",
    "Domain": "jacobfilipp.com",
    "Description": "Last updated on:"
  },
  {
    "Title": "Checking your browser...",
    "Url": "https://www.techdirt.com/2024/09/09/ftc-pushed-to-crack-down-on-companies-that-ruin-hardware-via-software-updates-or-annoying-paywalls/",
    "Timestamp": "2024-09-10T03:01:05",
    "Domain": "www.techdirt.com",
    "Description": "This process is automatic. Your browser will redirect to your requested content shortly."
  },
  {
    "Title": "Windows NT vs. Unix: A design comparison",
    "Url": "https://blogsystem5.substack.com/p/windows-nt-vs-unix-design",
    "Timestamp": "2024-09-10T02:01:08",
    "Domain": "blogsystem5.substack.com",
    "Description": "NT is often touted as a \"very advanced\" operating system. Why is that? What made NT better than Unix, if anything? And is that still the case?"
  },
  {
    "Title": "Redox OS 0.9.0 - Redox",
    "Url": "https://www.redox-os.org/news/release-0.9.0/",
    "Timestamp": "2024-09-10T01:01:19",
    "Domain": "www.redox-os.org",
    "Description": "The Redox official website"
  },
  {
    "Title": "Questions about LLMs in Group Chats",
    "Url": "https://vineeth.io/posts/llm-groupchats",
    "Timestamp": "2024-09-10T00:01:31",
    "Domain": "vineeth.io",
    "Description": "Lately, I’ve been keeping a close eye on the xenocog community and projects that are spinning out of the ideas of the cyborgism and act 1 projects. However, in classic fashion, the aspects that are intriguing me the most are not what most people are interested in."
  },
  {
    "Title": "A short history of AJAX and SSR",
    "Url": "https://blog.frankel.ch/ajax-ssr/1/",
    "Timestamp": "2024-09-10T00:01:30",
    "Domain": "blog.frankel.ch",
    "Description": "My journey in programming began over two decades ago, a time when JavaScript was a far cry from its current state, and developers were primarily focused on Microsoft Internet Explorer. One of my proudest achievements back then was writing a few lines of code that allowed users to add and remove table rows entirely on the client side. We called it DHTML. Many developers today have forgotten about it—or never knew it existed.   A few years later, AJAX emerged, revolutionizing the way we approached "
  },
  {
    "Title": "Kafka protocol practical guide - Ivan Yurchenko",
    "Url": "https://ivanyu.me/blog/2024/09/08/kafka-protocol-practical-guide/",
    "Timestamp": "2024-09-10T00:01:28",
    "Domain": "ivanyu.me",
    "Description": "I worked with the Apache Kafka protocol on the low level quite a bit. It wasn’t easy to start doing this following the official guide only and I read the code a lot. With this post, I want to give you a head start by guiding you step by step from primitive values to meaningful requests."
  },
  {
    "Title": "Collision Avoidance",
    "Url": "https://jasonfantl.com/posts/Collision-Avoidance/",
    "Timestamp": "2024-09-10T00:01:28",
    "Domain": "jasonfantl.com",
    "Description": "When you’re walking through a large crowd, how do you avoid colliding with everyone else? You aren’t communicating with each other, and you aren’t being directed by a central director, so how does the large crowd coordinate? Everyone is reacting independently using only their visual senses to estimate the velocity and size of everyone else, using that information to plan out a path to some goal."
  },
  {
    "Title": "Best Tools for Indie Consultants - jxnl.co",
    "Url": "https://jxnl.co/writing/2024/08/23/consulting-stack/",
    "Timestamp": "2024-09-10T00:01:28",
    "Domain": "jxnl.co",
    "Description": "Notes about my hobbies and other things I find interesting."
  },
  {
    "Title": "Entrepreneurship changed the way I think",
    "Url": "https://caseyhandmer.wordpress.com/2024/09/04/entrepreneurship-changed-the-way-i-think/",
    "Timestamp": "2024-09-10T00:01:28",
    "Domain": "caseyhandmer.wordpress.com",
    "Description": "A quick note with some self reflection on the eve of my 37th year and after nearly three years of running a hardware start up. I never saw myself as a founder. At some point a few years ago I reali…"
  },
  {
    "Title": "Integrating vision into RAG applications",
    "Url": "http://blog.pamelafox.org/2024/09/integrating-vision-into-rag-applications.html",
    "Timestamp": "2024-09-10T00:01:28",
    "Domain": "blog.pamelafox.org",
    "Description": "  Retrieval Augmented Generation (RAG) is a popular technique to get LLMs to provide answers that are grounded in a data source. What do you..."
  },
  {
    "Title": "Django semantic search",
    "Url": "https://kacperlukawski.github.io/django-semantic-search/",
    "Timestamp": "2024-09-10T00:01:28",
    "Domain": "kacperlukawski.github.io",
    "Description": "Bringing semantic search to Django. Integrates seamlessly with Django ORM."
  },
  {
    "Title": "Reflection is cooked",
    "Url": "https://xeiaso.net/blog/2024/reflection-cooked/",
    "Timestamp": "2024-09-10T00:01:27",
    "Domain": "xeiaso.net",
    "Description": "Xe Iaso's personal website."
  },
  {
    "Title": "Making progress on side projects with content-driven development",
    "Url": "https://www.ntietz.com/blog/making-progress-with-content-driven-development/",
    "Timestamp": "2024-09-10T00:01:27",
    "Domain": "www.ntietz.com",
    "Description": "It's hard to make progress on side projects sometimes.\nGetting started is easy when we see the bright future of the project.\nThen somewhere in the middle, we get stuck in lists of tasks to do, a long way in and still a long way from the finish line."
  },
  {
    "Title": "Future CSS: Text Wrap Pretty",
    "Url": "https://alexjpate.com/posts/future-css-text-wrap-pretty",
    "Timestamp": "2024-09-10T00:01:26",
    "Domain": "alexjpate.com",
    "Description": "Exploring the future of CSS text wrapping with the `text-wrap` property"
  },
  {
    "Title": "The missing CMS for me",
    "Url": "https://hounie.me/writings/the-missing-cms-for-me/",
    "Timestamp": "2024-09-10T00:01:26",
    "Domain": "hounie.me",
    "Description": "Guilhermo Hounie's website"
  },
  {
    "Title": "Keeping your Dotfiles in Sync and your Secrets in Gopass",
    "Url": "https://blog.m5e.de/post/keeping-your-dotfiles-in-sync-and-your-secrets-in-gopass/",
    "Timestamp": "2024-09-10T00:01:26",
    "Domain": "blog.m5e.de",
    "Description": "Inspired by solutions how Secrets are being handled in corporate DevOps environments, I wanted to keep my Dotfiles on multiple machines in Sync and store all sensitive information inside gopass (which I started using instead of KeePass some time ago since I like the CLI and Unix / KISS aspect of it)\nLuckily, I am not the first one to have such desires and I came across chezmoi which manages your Dotfiles for you inside a Git Repo and which also has support for gopass."
  },
  {
    "Title": "What is the best pointer tagging method?",
    "Url": "https://coredumped.dev/2024/09/09/what-is-the-best-pointer-tagging-method/",
    "Timestamp": "2024-09-10T00:01:26",
    "Domain": "coredumped.dev",
    "Description": "In this post, we are going to take a deep dive into pointer tagging, where metadata is encoded into a word-sized pointer. Doing so allows us to keep a compact representation that can be passed around in machine registers. This is very common in implementing dynamic programming languages, but can really be used anywhere that additional runtime information is needed about a pointer. We will look at a handful of different ways these pointers can be encoded and see how the compiler can optimize them for different hardware."
  }
]