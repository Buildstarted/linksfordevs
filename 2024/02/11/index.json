[
  {
    "Title": "RSS is still pretty great",
    "Url": "https://www.pcloadletter.dev/blog/rss/",
    "Timestamp": "2024-02-11T20:04:07",
    "Domain": "www.pcloadletter.dev",
    "Description": "What the **** does that mean?"
  },
  {
    "Title": "Balancing cube – Willem Pennings",
    "Url": "https://willempennings.nl/balancing-cube/",
    "Timestamp": "2024-02-11T19:04:03",
    "Domain": "willempennings.nl",
    "Description": "This cube manages to balance itself on a corner, and can simultaneously rotate around its axis in a controlled manner. It does so using clever controls and a set of three reaction wheels."
  },
  {
    "Title": "GitHub - fiddyschmitt/SimpleKVM: Use multiple computers using the one monitor, mouse and keyboard",
    "Url": "https://github.com/fiddyschmitt/SimpleKVM",
    "Timestamp": "2024-02-11T19:04:02",
    "Domain": "github.com",
    "Description": "Use multiple computers using the one monitor, mouse and keyboard - GitHub - fiddyschmitt/SimpleKVM: Use multiple computers using the one monitor, mouse and keyboard"
  },
  {
    "Title": "Better together with Entity Framework Core Power Tools - use a SQL Server Database Project (.dacpac) and EF Core",
    "Url": "https://erikej.github.io/efcore/dacpac/2024/02/11/powertools-dacpac.html",
    "Timestamp": "2024-02-11T18:05:13",
    "Domain": "erikej.github.io",
    "Description": "Imagine combining the power of the design time tools and syntax verification you get from a SQL Server Database Project (.sqlproj) with the power of well-formed and properly parameterized SQL, change tracking capabilities and more, that you get from Entity Framework Core? This is possible With help from EF Core Power Tools!"
  },
  {
    "Title": "DbUp: The best way to build databases in .NET",
    "Url": "https://youtube.com/watch?v=4w3ojD2uSK0",
    "Timestamp": "2024-02-11T14:04:23",
    "Domain": "youtube.com",
    "Description": "So you heard about the Database First Approach, and you also heard about the Code First Approach, let me show you how to combine both approaches with the pow..."
  },
  {
    "Title": "How Do You Deprecate an Old API Version in ASP.NET Core?",
    "Url": "https://youtube.com/watch?v=Jawiwm2QKaw",
    "Timestamp": "2024-02-11T14:04:22",
    "Domain": "youtube.com",
    "Description": ""
  },
  {
    "Title": "C# code snippets for Resharper and Rider",
    "Url": "https://cezarypiatek.github.io/post/productivity-boost-snipptes/",
    "Timestamp": "2024-02-11T13:03:41",
    "Domain": "cezarypiatek.github.io",
    "Description": "My private collection of convention-based code snippets"
  },
  {
    "Title": "Convert Between Hexadecimal and Decimal in C#",
    "Url": "https://code-maze.com/csharp-convert-a-number-between-hexadecimal-and-decimal/",
    "Timestamp": "2024-02-11T11:03:29",
    "Domain": "code-maze.com",
    "Description": "Discover techniques to convert between hexadecimal and decimal numbers in C#. Explore ToString(), int.Parse(), and custom implementations."
  },
  {
    "Title": "Garbage Collector (over)simplified",
    "Url": "https://steven-giesel.com/blogPost/2e23afb8-4dc6-461e-8110-4122c7fefee7",
    "Timestamp": "2024-02-11T11:03:29",
    "Domain": "steven-giesel.com",
    "Description": "In this blog post, a small and (over)simplified infographic on how the Garbage Collector works.\n"
  },
  {
    "Title": "Add Maps to your WinUI / Windows App SDK Application using MapControl - Nick's .NET Travels",
    "Url": "https://nicksnettravels.builttoroam.com/winui-mapcontrol/",
    "Timestamp": "2024-02-11T09:03:47",
    "Domain": "nicksnettravels.builttoroam.com",
    "Description": "The latest 1.5 experimental and preview version of the Windows App SDK contains the much anticipated MapControl. To get started, all you need to do is the following: <Window x:Class=\"App2.MainWindow\" xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Grid> <MapControl x:Name=\"mapControl\" Width=\"800\" Height=\"600\" InteractiveControlsVisible=\"True\" MapServiceToken=\"{your map service token}\" /> </Grid> </Window> Unfortunately, this doesn’t work out of the box (see GitHub ... Read more"
  },
  {
    "Title": "Cloud Development Framework - AWS Cloud Development Kit - AWS",
    "Url": "https://aws.amazon.com/cdk/",
    "Timestamp": "2024-02-11T05:03:27",
    "Domain": "aws.amazon.com",
    "Description": "AWS Cloud Development Kit (CDK) is an open-source software development framework used to model and provision your cloud application resources with familiar programming languages."
  },
  {
    "Title": "Product Manager, Customer Experience",
    "Url": "https://boards.greenhouse.io/spotai/jobs/5888176003",
    "Timestamp": "2024-02-11T05:03:25",
    "Domain": "boards.greenhouse.io",
    "Description": "Remote, United States"
  },
  {
    "Title": "CDK for Kubernetes",
    "Url": "https://cdk8s.io/",
    "Timestamp": "2024-02-11T05:03:24",
    "Domain": "cdk8s.io",
    "Description": "Define Kubernetes apps and components using familiar languages"
  },
  {
    "Title": "CDK for Terraform | Terraform | HashiCorp Developer",
    "Url": "https://developer.hashicorp.com/terraform/cdktf",
    "Timestamp": "2024-02-11T05:03:24",
    "Domain": "developer.hashicorp.com",
    "Description": "Cloud Development Kit for Terraform (CDKTF) lets you use familiar programming languages to define and provision infrastructure."
  },
  {
    "Title": "OpenTTD | About",
    "Url": "https://www.openttd.org/about",
    "Timestamp": "2024-02-11T04:03:37",
    "Domain": "www.openttd.org",
    "Description": "An open source simulator based on the classic game Transport Tycoon Deluxe. It attempts to mimic the original game as closely as possible while extending it with new features."
  },
  {
    "Title": "Cloud Egress Costs",
    "Url": "https://getdeploying.com/reference/data-egress",
    "Timestamp": "2024-02-11T03:04:10",
    "Domain": "getdeploying.com",
    "Description": "A list of egress costs for major cloud providers."
  },
  {
    "Title": "FastPay: High-Performance Byzantine Fault Tolerant Settlement",
    "Url": "https://arxiv.org/abs/2003.11506",
    "Timestamp": "2024-02-11T03:04:09",
    "Domain": "arxiv.org",
    "Description": "FastPay allows a set of distributed authorities, some of which are Byzantine, to maintain a high-integrity and availability settlement system for pre-funded payments. It can be used to settle payments in a native unit of value (crypto-currency), or as a financial side-infrastructure to support retail payments in fiat currencies. FastPay is based on Byzantine Consistent Broadcast as its core primitive, foregoing the expenses of full atomic commit channels (consensus). The resulting system has low-latency for both confirmation and payment finality. Remarkably, each authority can be sharded across many machines to allow unbounded horizontal scalability. Our experiments demonstrate intra-continental confirmation latency of less than 100ms, making FastPay applicable to point of sale payments. In laboratory environments, we achieve over 80,000 transactions per second with 20 authorities---surpassing the requirements of current retail card payment networks, while significantly increasing their robustness."
  },
  {
    "Title": "Mysticeti: Low-Latency DAG Consensus with Fast Commit Path",
    "Url": "https://arxiv.org/abs/2310.14821",
    "Timestamp": "2024-02-11T03:04:09",
    "Domain": "arxiv.org",
    "Description": "We introduce Mysticeti-C a byzantine consensus protocol with low-latency and high resource efficiency. It leverages a DAG based on Threshold Clocks and incorporates innovations in pipelining and multiple leaders to reduce latency in the steady state and under crash failures. Mysticeti-FPC incorporates a fast commit path that has even lower latency. We prove the safety and liveness of the protocols in a byzantine context. We evaluate Mysticeti and compare it with state-of-the-art consensus and fast path protocols to demonstrate its low latency and resource efficiency, as well as more graceful degradation under crash failures. Mysticeti is the first byzantine protocol to achieve WAN latency of 0.5s for consensus commit, at a throughput of over 50k TPS that matches the state-of-the-art."
  },
  {
    "Title": "GitHub - damienbod/AspNetCoreEntraIdBlobStorage: ASP.NET Core Razor page using Azure Blob Storage to upload download files securely using OAuth and Open ID Connect",
    "Url": "https://github.com/damienbod/AspNetCoreEntraIdBlobStorage",
    "Timestamp": "2024-02-11T01:04:24",
    "Domain": "github.com",
    "Description": "ASP.NET Core Razor page using Azure Blob Storage to upload download files securely using OAuth and Open ID Connect - GitHub - damienbod/AspNetCoreEntraIdBlobStorage: ASP.NET Core Razor page using A..."
  },
  {
    "Title": "GitHub - kzu/StreamAI: A sample of how to implement streaming responses from OpenAI using SignalR",
    "Url": "https://github.com/kzu/StreamAI",
    "Timestamp": "2024-02-11T01:04:24",
    "Domain": "github.com",
    "Description": "A sample of how to implement streaming responses from OpenAI using SignalR - GitHub - kzu/StreamAI: A sample of how to implement streaming responses from OpenAI using SignalR"
  },
  {
    "Title": "Building AI-powered Microsoft Copilot with SignalR and other open-source tools - .NET Blog",
    "Url": "https://devblogs.microsoft.com/dotnet/building-ai-powered-bing-chat-with-signalr-and-other-open-source-tools/#deep-dive-how-do-we-use-signalr",
    "Timestamp": "2024-02-11T01:04:24",
    "Domain": "devblogs.microsoft.com",
    "Description": "Microsoft Copilot is powered by several open-source tools, such as SignalR, Adaptive Cards, Markdown, and object-basin to solve the unique challenges in building AI-enabled applications at scale. In this article, we share the design considerations and how we integrated various tools with a focus on how we stream messages and responses to the front-end UI while giving some overview of what happens on the server-side."
  }
]