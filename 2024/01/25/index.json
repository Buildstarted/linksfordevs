[
  {
    "Title": "Celebrating our first 20,000 members",
    "Url": "https://blog.kagi.com/celebrating-20k",
    "Timestamp": "2024-01-25T04:03:21",
    "Domain": "blog.kagi.com",
    "Description": "Dear Kagi community, Today, we’re happy and proud to have reached *20,000 paying members* , including over 1,500 families all over the world, in our community."
  },
  {
    "Title": "Building a Critter Stack Application: Resiliency",
    "Url": "https://jeremydmiller.com/2024/01/24/building-a-critter-stack-application-resiliency/",
    "Timestamp": "2024-01-25T03:03:12",
    "Domain": "jeremydmiller.com",
    "Description": "Hey, did you know that JasperFx Software is ready for formal support plans for Marten and Wolverine? Not only are we trying to make the “Critter Stack” tools be viable long term options for your sh…"
  },
  {
    "Title": "How we made an animated movie in 8kB - Ctrl-Alt-Test",
    "Url": "https://www.ctrl-alt-test.fr/2024/how-we-made-an-animated-movie-in-8kb/",
    "Timestamp": "2024-01-25T03:03:10",
    "Domain": "www.ctrl-alt-test.fr",
    "Description": "The Sheep and the Flower - a demoscene production and real-time animation that looks like a standard short animated movie, in just 8kB"
  },
  {
    "Title": "Motorway: Seamless high speed BFT",
    "Url": "https://arxiv.org/abs/2401.10369",
    "Timestamp": "2024-01-25T03:03:09",
    "Domain": "arxiv.org",
    "Description": "Today's practical, high performance Byzantine Fault Tolerant (BFT) consensus protocols operate in the partial synchrony model. However, existing protocols are often inefficient when networks are indeed partially synchronous. They obtain either low latency during synchrony or robust recovery from periods of asynchrony. At one end, traditional, view-based BFT protocols optimize for latency in the sunny-network case, but when faced with periods of asynchrony are subject to performance degradations (hangovers) that can last beyond the return to synchrony. At the other end, modern DAG-based BFT protocols recover gracefully from asynchrony, but exhibit lackluster latency during synchronous intervals. To close the gap, this work presents Motorway, a novel high-throughput BFT protocol that offers both low latency and seamless recovery from periods of asynchrony. Motorway combines a highly parallel asynchronous data dissemination layer with a low-latency, partially synchronous consensus mechanism to construct an efficient consensus protocol for partial synchrony. Motorway (i) avoids the hangovers incurred by traditional BFT protocols and (ii) matches the throughput of state of the art DAG-BFT protocols while reducing latency by 2.1x, matching the latency of traditional BFT protocols."
  },
  {
    "Title": "Burke Learns Blazor - API Wrap Up",
    "Url": "https://youtube.com/watch?v=EvZ35LtVkd0",
    "Timestamp": "2024-01-25T01:04:22",
    "Domain": "youtube.com",
    "Description": "As we get ready to go live, it's time to finish off a few things in the API - delete lists, update lists, etc. Let's go!Community Links: https://theurlist.co..."
  }
]