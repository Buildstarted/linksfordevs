[
  {
    "Title": "1 year of building with LLMs – D-Squared",
    "Url": "https://www.dylandavis.net/2024/07/tldr-1-year-of-building-with-llms/",
    "Timestamp": "2024-07-24T00:00:53",
    "Domain": "www.dylandavis.net",
    "Description": ""
  },
  {
    "Title": "Screen reading eff eff conf",
    "Url": "https://remysharp.com/2024/07/23/screen-reading-eff-eff-conf",
    "Timestamp": "2024-07-24T00:00:52",
    "Domain": "remysharp.com",
    "Description": "In a recent (personal) audit of accessibility and continued struggle to get my head around Voice Over (for macos), I remembered that the spoken sound of &quot;…"
  },
  {
    "Title": "Musing about a secure computer for sensitive data",
    "Url": "https://notes.volution.ro/v1/2024/07/remarks/d97d3e5b/",
    "Timestamp": "2024-07-24T00:00:52",
    "Domain": "notes.volution.ro",
    "Description": "How about splitting the usage and storage of sensitive documents and data? Plus a few ideas on how to implement a small custom \"secure\" computer for the storage part."
  },
  {
    "Title": "Don't Overplan, Do Prototype | Ali Khaleqi Yekta",
    "Url": "https://yekta.dev/posts/dont-overplan-do-prototype/",
    "Timestamp": "2024-07-24T00:00:52",
    "Domain": "yekta.dev",
    "Description": "Trying to reach perfection on paper is pure poison; prototyping is far more effective."
  },
  {
    "Title": "LiteCluster: Replicated, leaderless, ACID compliant & high availability SQLite",
    "Url": "https://oldmoe.blog/2024/07/22/litecluster-replicated-leaderless-acid-compliant-high-availability-sqlite/",
    "Timestamp": "2024-07-24T00:00:52",
    "Domain": "oldmoe.blog",
    "Description": "Introduction LiteCluster is a globally replicated SQL database with a leaderless architecture that delivers high performance operation while retaining ACID semantics and strong consistency. In this…"
  },
  {
    "Title": "Fair Chess and Simultaneous Games - AV",
    "Url": "https://asvarga.github.io/blog/2024/06/22/fair-chess-and-simultaneous-games.html",
    "Timestamp": "2024-07-24T00:00:52",
    "Domain": "asvarga.github.io",
    "Description": "None"
  },
  {
    "Title": "Are you looking for someone to develop your idea? Take a few minutes and read this. - AI Powered B2B SaaS",
    "Url": "https://saraceni.me/index.php/2022/04/17/develop-idea/",
    "Timestamp": "2024-07-24T00:00:52",
    "Domain": "saraceni.me",
    "Description": "Having ideas is very cool. Everyone has ideas. And I really like ideas. But do you know what I like even more? Those who develop and make them happen. “Man, I have an idea for an app that will revolutionize the X market.” “I have an idea here that will solve the Y problem.” “My..."
  },
  {
    "Title": "OpenBSD IPv6 Home Internet Gateway with AT&T Fibre",
    "Url": "https://jgoguen.ca/posts/2024/07/20/openbsd-ipv6-home-internet-gateway-with-att-fibre/",
    "Timestamp": "2024-07-24T00:00:52",
    "Domain": "jgoguen.ca",
    "Description": "Using OpenBSD as a home Internet gateway with AT&T Fibre with IPv6\nsupport"
  },
  {
    "Title": "Counting Bytes Faster Than You’d Think Possible",
    "Url": "https://blog.mattstuchlik.com/2024/07/21/fastest-memory-read.html",
    "Timestamp": "2024-07-24T00:00:52",
    "Domain": "blog.mattstuchlik.com",
    "Description": "Summing ASCII Encoded Integers on Haswell at the Speed of memcpy turned out more popular than I expected, which inspired me to take on another challenge on HighLoad: Counting uint8s. I’m currently only #13 on the leaderboard, ~7% behind #1, but I already learned some interesting things. In this post I’ll describe my complete solution (skip to that) including a surprising memory read pattern that achieves up to ~30% higher transfer rates on fully memory bound, single core workloads compared to naive sequential access, while apparently not being widely known (skip to that)."
  },
  {
    "Title": "Hate Being A SWE? Why It’s Probably Your Fault – Bhavana",
    "Url": "https://bhavana.io/hate-being-a-swe-why-its-probably-your-fault/",
    "Timestamp": "2024-07-24T00:00:51",
    "Domain": "bhavana.io",
    "Description": "It’s 2 AM, and I’m staring at my screen, bleary-eyed and frustrated. The CI pipeline has failed for the third time tonight. I’ve spent the last week writing tests for a feature so small, I’m not even sure anyone will notice it. As I sip my cold coffee, a thought creeps in: “Is this really what being a software engineer is all about?”"
  },
  {
    "Title": "Service Level Objectives made easy with Sloth and Pyrra",
    "Url": "https://0xdc.me/blog/service-level-objectives-made-easy-with-sloth-and-pyrra/",
    "Timestamp": "2024-07-24T00:00:51",
    "Domain": "0xdc.me",
    "Description": "In this article, I will explain the main differences between Sloth and Pyrra, two projects that aim to help you create and manage Service Level Objectives."
  },
  {
    "Title": "Scaling past 1 million ELF symbol relocations",
    "Url": "https://fzakaria.com/2024/07/21/scaling-past-1-million-elf-symbol-relocations.html",
    "Timestamp": "2024-07-24T00:00:51",
    "Domain": "fzakaria.com",
    "Description": "Note This is a follow up to my previous post on speeding up elf relocations for store based systems. I wrote earlier about some impressive speedups that can be achieved by foregoing the typical dynamic linking that can be applied to systems such as Nix where the dependencies for a given application are static."
  },
  {
    "Title": "Why The Llama 3.1 Announcement Is Huge - Tim Kellogg",
    "Url": "https://timkellogg.me/blog/2024/07/23/llama-3.1",
    "Timestamp": "2024-07-24T00:00:51",
    "Domain": "timkellogg.me",
    "Description": "Tue July 23, 2024"
  }
]