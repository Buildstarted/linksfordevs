[
  {
    "Title": "Scott Hunter – Aspire and more",
    "Url": "https://jesseliberty.com/2024/06/02/scott-hunter-aspire-and-more/",
    "Timestamp": "2024-06-02T16:06:08",
    "Domain": "jesseliberty.com",
    "Description": "Scott Hunter (VP Microsoft) joins Yet Another Podcast’s reboot to talk about Aspire, Azure and much more. Do not miss this episode… Aspire will blow you away!"
  },
  {
    "Title": "A graphical depiction of the steps in building a C++ executable, basics - The Old New Thing",
    "Url": "https://devblogs.microsoft.com/oldnewthing/20240529-00/?p=109818",
    "Timestamp": "2024-06-02T15:07:01",
    "Domain": "devblogs.microsoft.com",
    "Description": "A high-level overview."
  },
  {
    "Title": "Parable of the Sofa",
    "Url": "https://www.tbray.org/ongoing/When/202x/2024/06/01/Parable-of-the-Sofa",
    "Timestamp": "2024-06-02T13:08:37",
    "Domain": "www.tbray.org",
    "Description": "When Lauren was pregnant with a child who’s now turning 25, we purchased a comfy dark-brown\n    leather sofa which fits our living room nicely.  \n    What with kids and relatives and\n    employees and cats and Standards Comittees and friends and book clubs and socials, the butt-support cushions had, a quarter\n    century later, worn out. So we had them replaced, at a fair price, by a small local business. Which is something that modern\n    capitalism is trying to make impossible."
  },
  {
    "Title": "Blog | Nix & NixOS",
    "Url": "https://nixos.org/blog/announcements/2024/nixos-2405/",
    "Timestamp": "2024-06-02T10:07:27",
    "Domain": "nixos.org",
    "Description": "Nix is a tool that takes a unique approach to package management and system configuration. Learn how to make reproducible, declarative and reliable systems."
  },
  {
    "Title": "WordPress next, and beyond: breaking the technical enclosure –",
    "Url": "https://thomas.diluccio.fr/2024/05/30/wordpress-next-and-beyond-breaking-the-technical-enclosure/",
    "Timestamp": "2024-06-02T00:05:16",
    "Domain": "thomas.diluccio.fr",
    "Description": ""
  },
  {
    "Title": "Data exploration using VIM",
    "Url": "https://blog.vbang.dk/2024/06/01/vim-data-exploration/",
    "Timestamp": "2024-06-02T00:05:15",
    "Domain": "blog.vbang.dk",
    "Description": "I’ve used vim and/or vim bindings for the better part of 10 years. But apparently there’s this tiny piece of magic that has completely escaped me all this time."
  },
  {
    "Title": "Don’t Taste One Coffee",
    "Url": "https://s12k.com/2024/04/23/dont-taste-one-coffee/",
    "Timestamp": "2024-06-02T00:05:15",
    "Domain": "s12k.com",
    "Description": "Did you know I had a whole career in specialty coffee before I became part of the tech industry? It’s true – I trained hundreds of baristas, some of them competitors (barista competitio…"
  },
  {
    "Title": "leah blogs: What autoconf got right",
    "Url": "https://leahneukirchen.org/blog/archive/2024/04/what-autoconf-got-right.html",
    "Timestamp": "2024-06-02T00:05:15",
    "Domain": "leahneukirchen.org",
    "Description": "Thanks to the xz backdoor, many\npeople are now talking about the state of Linux packaging tools, and\nin particular build systems.  As a maintainer of Void\nLinux and packager of many things, I have my\nfive cents to add, so today I’ll be the contrarian and argue\nwhat autoconf got right.  This is not an apology for GNU autotools; we\nare all well familiar with the issues they bring—yet some\nprospective replacements manage to be worse in certain aspects."
  },
  {
    "Title": "Hexadecimal Sucks - Tyler Cipriani",
    "Url": "https://tylercipriani.com/blog/2024/05/31/hexadecimal-sucks/",
    "Timestamp": "2024-06-02T00:05:14",
    "Domain": "tylercipriani.com",
    "Description": "Humans do no operate on hexadecimal symbols effectively […] there are\nexceptions."
  },
  {
    "Title": "htmx: Simplicity in an Age of Complicated Solutions",
    "Url": "https://www.erikheemskerk.nl/htmx-simplicity/",
    "Timestamp": "2024-06-02T00:05:14",
    "Domain": "www.erikheemskerk.nl",
    "Description": "In an age of complicated front-end solutions, is there a simpler way of doing things? Spoiler alert: there is."
  },
  {
    "Title": "Moving Beyond Type Systems | Vhyrro's Digital Garden",
    "Url": "https://vhyrro.github.io/posts/effect-systems/",
    "Timestamp": "2024-06-02T00:05:14",
    "Domain": "vhyrro.github.io",
    "Description": "Is another programming revolution possible?"
  },
  {
    "Title": "Upgrading my Home surveillance system",
    "Url": "https://vivekkairi.com/upgrading-my-home-survellience-system/",
    "Timestamp": "2024-06-02T00:05:14",
    "Domain": "vivekkairi.com",
    "Description": "Upgrading my home surveillance system from Zoneminder to Frigate"
  },
  {
    "Title": "Icing or Cake? — dthompson",
    "Url": "https://dthompson.us/posts/lisp-icing-or-cake.html",
    "Timestamp": "2024-06-02T00:05:14",
    "Domain": "dthompson.us",
    "Description": "The Spring Lisp Game Jam\n2024 ended one week\nago.  48 games were submitted, a new record for the jam!  This past\nweek has been a time for participants to play and rate each other’s\ngames.  As I explored the entries, I noticed two distinct\nmeta-patterns in how people approached building games with Lisp.  I\nthink these patterns apply more broadly to all applications of Lisp.\nLet’s talk about these patterns in some detail, with examples."
  }
]