[
  {
    "Title": "Digital Sustainability and LLMs",
    "Url": "https://janikvonrotz.ch/2024/11/22/digital-sustainability-and-llms/",
    "Timestamp": "2024-11-23T01:02:01",
    "Domain": "janikvonrotz.ch",
    "Description": "This week I experienced:\n\n\nDinacon 2024 - a yearly conference about digital sustainability\nPlaying the game Factorio Space Age\nNot having access to Codeium and therefore writing code “offline”\nNot being able to buy an H100 GPU\n\n\nAnd even though these events seem unrelated, I think they have a lot in common. This is all about over consumption and resource availability. Let me elaborate …"
  },
  {
    "Title": "How to spend $650 million and make things worse as a result...",
    "Url": "https://yopopov.blogspot.com/2024/11/how-to-spend-650-million-and-make.html",
    "Timestamp": "2024-11-23T01:02:00",
    "Domain": "yopopov.blogspot.com",
    "Description": "As you might know, the Northern Indiana Commuter Transportation District (NICTD) finished a major multi-year $650-million double-tracking pr..."
  },
  {
    "Title": "Should Programming Languages be Safe or Powerful?",
    "Url": "https://lambdaland.org/posts/2024-11-21_powerful_or_safe_languages/",
    "Timestamp": "2024-11-23T01:02:00",
    "Domain": "lambdaland.org",
    "Description": "Should a programming language be powerful and let a programmer do a lot, or should it be safe and protect the programmer from bad mistakes? Contrary to what the title insinuates, these are not diametrically opposed attributes. Nevertheless, this is the mindset that underlies notions such as, “macros, manual memory management, etc. are power tools—they’re not supposed to be safe.” If safety and power are not necessarily opposed, why does this notion persist?"
  },
  {
    "Title": "My Red Hot ADHD Programming 'Affliction'",
    "Url": "https://www.schneems.com/2024/11/21/my-red-hot-adhd-programming-affliction/",
    "Timestamp": "2024-11-23T01:02:00",
    "Domain": "www.schneems.com",
    "Description": "Sorry, Dave, ADHD is real, and (not acknowledging it) can hurt you. Hi. I’m Richard. I’m a Ruby Core Contributor. I also code in Rust, and enjoy giving talks..."
  },
  {
    "Title": "The Two-Line Code for Marital Bliss (That Your Programmer Husband Can Understand)",
    "Url": "https://sauravtom.github.io/posts/marriage-advice/",
    "Timestamp": "2024-11-23T01:02:00",
    "Domain": "sauravtom.github.io",
    "Description": "Look, I’m no marriage counselor. But after a few years of navigating the complexities of married life, I’ve distilled my hard-won wisdom into two deceptively simple lines of code. If you can grasp these, you’ll be well on your way to a harmonious existence, even if your spouse insists on reorganizing the spice rack alphabetically."
  },
  {
    "Title": "The moats are in the GPT-wrappers",
    "Url": "https://interjectedfuture.com/the-moats-are-in-the-gpt-wrappers/",
    "Timestamp": "2024-11-23T01:02:00",
    "Domain": "interjectedfuture.com",
    "Description": "Despite the disdain for \"GPT-wrappers,\" it's currently where the value is accruing in the supply chain of value to the end-user with LLM-driven apps. Unless something changes with the foundational model companies approach the market, the GPT-wrapper application layer is where the value accrues, hence where the money will be"
  },
  {
    "Title": "D&D Combinatorics",
    "Url": "https://xkcd.com/3015/",
    "Timestamp": "2024-11-23T01:01:59",
    "Domain": "xkcd.com",
    "Description": ""
  }
]