[
  {
    "Title": "Easily add a video reel to your MAUI app (like Instagram)",
    "Url": "https://blog.ewers-peters.de/maui-video-reel",
    "Timestamp": "2024-05-15T10:01:04",
    "Domain": "blog.ewers-peters.de",
    "Description": "A step-by-step guide to enhance the user experience of your MAUI app with a feature like Instagram's reels"
  },
  {
    "Title": "Wolverine’s HTTP Model Does More For You",
    "Url": "https://jeremydmiller.com/2024/05/13/wolverines-http-model-does-more-for-you/",
    "Timestamp": "2024-05-15T06:01:10",
    "Domain": "jeremydmiller.com",
    "Description": "One of the things I’m wrestling with right now is frankly how to sell Wolverine as a server side toolset. Yes, it’s technically a message library like MassTransit or NServiceBus. It can…"
  },
  {
    "Title": "Mastering Slash Commands with GitHub Copilot in Visual Studio - Visual Studio Blog",
    "Url": "https://devblogs.microsoft.com/visualstudio/mastering-slash-commands-with-github-copilot-in-visual-studio/",
    "Timestamp": "2024-05-15T06:01:09",
    "Domain": "devblogs.microsoft.com",
    "Description": "Discover how GitHub Copilot's Slash Commands streamline your Visual Studio workflow. Learn key commands, explore the /fix command, and access related resources."
  },
  {
    "Title": "ASP.NET Core, SSR Web Components, and Enhance Wasm",
    "Url": "https://khalidabuhakmeh.com/aspnet-core-ssr-web-components-and-enhance-wasm",
    "Timestamp": "2024-05-15T06:01:08",
    "Domain": "khalidabuhakmeh.com",
    "Description": "Using Enhance Wasm to bring server-side rendered web components to ASP.NET Core"
  },
  {
    "Title": "Modeling: Date vs. DateTime",
    "Url": "https://ayende.com/blog/201057-A/modeling-date-vs-datetime?Key=e3e86457-cc47-46a1-a6a9-4a0159a883ed",
    "Timestamp": "2024-05-15T06:01:08",
    "Domain": "ayende.com",
    "Description": "I got a really interesting comment on a blog post talking about query optimization. The context was that working with dates makes it much easier for a query ..."
  },
  {
    "Title": "C# in Browser via WebAssembly (without Blazor)",
    "Url": "https://www.codeproject.com/Articles/5382292/Csharp-in-Browser-via-WebAssembly-without-Blazor",
    "Timestamp": "2024-05-15T06:01:08",
    "Domain": "www.codeproject.com",
    "Description": "In this article I describe how to write C# code that runs in Browser."
  },
  {
    "Title": "Announcing NuGet Commands in C# Dev Kit - The NuGet Blog",
    "Url": "https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/",
    "Timestamp": "2024-05-15T06:01:07",
    "Domain": "devblogs.microsoft.com",
    "Description": "With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette. To add a NuGet package to your project, use the command “NuGet: Add NuGet Package”."
  },
  {
    "Title": "Data Fetching Patterns in Single-Page Applications",
    "Url": "https://martinfowler.com/articles/data-fetch-spa.html",
    "Timestamp": "2024-05-15T06:01:07",
    "Domain": "martinfowler.com",
    "Description": "Five patterns to help Single Page Applications fetch data from remote sources"
  },
  {
    "Title": "Serialising ASP.NET method calls for later execution | johnnyreilly",
    "Url": "https://johnnyreilly.com/serialising-aspnet-method-calls-for-later-execution",
    "Timestamp": "2024-05-15T06:01:07",
    "Domain": "johnnyreilly.com",
    "Description": "How can we take a method call, serialise it, perhaps store it in a database, and then later rehydrate and execute?"
  },
  {
    "Title": "ECMAScript proposal: `Promise.withResolvers()`",
    "Url": "https://2ality.com/2024/05/proposal-promise-with-resolvers.html",
    "Timestamp": "2024-05-15T06:01:06",
    "Domain": "2ality.com",
    "Description": "In this blog post we take a look at the ECMAScript 2024 feature “Promise.withResolvers” (proposed by Peter Klecha). It provides a new way of directly creating Promises, as an alternative to new Promise(...)."
  },
  {
    "Title": "Gemini Flash",
    "Url": "https://deepmind.google/technologies/gemini/flash/",
    "Timestamp": "2024-05-15T00:01:03",
    "Domain": "deepmind.google",
    "Description": "Our lightweight model, optimized for when speed and efficiency matter most, with a context window of up to one million tokens."
  }
]