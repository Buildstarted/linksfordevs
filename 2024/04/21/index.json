[
  {
    "Title": "GitHub - tinyworldmap/tiny-world-map: tinyworldmap is a tiny world map for offline-first and low-bandwidth web apps",
    "Url": "https://github.com/tinyworldmap/tiny-world-map",
    "Timestamp": "2024-04-21T19:01:01",
    "Domain": "github.com",
    "Description": "tinyworldmap is a tiny world map for offline-first and low-bandwidth web apps - tinyworldmap/tiny-world-map"
  },
  {
    "Title": "How to Convert a String to Byte Array in C#: Encoding and Decoding Simplified",
    "Url": "https://www.devleader.ca/2024/04/21/how-to-convert-a-string-to-byte-array-in-c-encoding-and-decoding-simplified/",
    "Timestamp": "2024-04-21T13:00:59",
    "Domain": "www.devleader.ca",
    "Description": "Learn how to effectively convert a string to a byte array in C#! While it might seem straightforward on the surface, we have encodings to consider!"
  },
  {
    "Title": "Adventures In Rust: Bringing Exchange Support To Thunderbird",
    "Url": "https://blog.thunderbird.net/2024/04/adventures-in-rust-bringing-exchange-support-to-thunderbird/",
    "Timestamp": "2024-04-21T12:00:59",
    "Domain": "blog.thunderbird.net",
    "Description": "Thunderbird will support Microsoft Exchange Web Services (EWS) natively, all written in Rust! Read about our Rusty adventures, the technical nature of the EWS"
  },
  {
    "Title": "Programming Is Mostly Thinking",
    "Url": "http://agileotter.blogspot.com/2014/09/programming-is-mostly-thinking.html",
    "Timestamp": "2024-04-21T11:00:59",
    "Domain": "agileotter.blogspot.com",
    "Description": "  Pretend you have a really great programming day.     You only have to attend a few meetings, have only a few off-topic conversations, don'..."
  },
  {
    "Title": "The Real C++ Killers (Not You, Rust)",
    "Url": "https://wordsandbuttons.online/the_real_cpp_killers.html",
    "Timestamp": "2024-04-21T09:01:00",
    "Domain": "wordsandbuttons.online",
    "Description": "All the “C++ killers”, even these which I wholeheartedly love and respect like Rust, Julia, and D, help you write more features with fewer bugs, but they don't much help when you need to squeeze the very last FLOPS from the hardware you rent. As such, they don’t have a competitive advantage over C++. Or, for that matter, even over each other. Most of them, for instance, Rust, Julia, and Clang even share the same backend. You can’t win a car race if you all share the same car. So, which technologies do hold a competitive advantage over C++ or, speaking generally, all the traditional ahead-of-time compilers?"
  },
  {
    "Title": "0.12.0 Release Notes ⚡ The Zig Programming Language",
    "Url": "https://ziglang.org/download/0.12.0/release-notes.html",
    "Timestamp": "2024-04-21T00:01:02",
    "Domain": "ziglang.org",
    "Description": ""
  },
  {
    "Title": "MuPDF.js",
    "Url": "https://mupdf.com/wasm/demo/index.html?file=..%2F..%2Fdocs%2Fmupdf_explored.pdf",
    "Timestamp": "2024-04-21T00:01:02",
    "Domain": "mupdf.com",
    "Description": "MuPDF.js on NPM\n\t\t\tAPI docs\n\t\t\tSource code on Github"
  }
]